openapi: 3.0.1
info:
  title: Portal Teams API
  description: |
    ## Overview
     Portal Teams API can be used to manage teams in API Portal. Teams can be created by an user who has atleast API Consumer privilege.
     Owner of the team can add any number of users to his/her team and can also provide application access to the team rather than selecting individual users.

    ## Functionalities supported
      - Get the paginated list of my teams.
      - Create a team with a set of users.
      - Modify the team.
      - Delete the team.
      - Get the list of users present in the team.
      - Add users to a team.
      - Remove users from a team.
      - Get the paginated list of applications that are shared with a team.

    ## Authorization
      - All operations on a team can be done only by the team owner

  version: '10.11'

servers:
  - url: http://localhost:18101/portal/rest/v1
    description: Development server

paths:
  '/teams':
    get:
      tags:
        - Team
      summary: Get the list of teams
      description: Get the paginated list of teams
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: Optional parameter. Defines the page number to be retrieved for the collection. If not specified default value 0 is assumed. By default collection responses are paginated with batches of 10.

        - name: limit
          in: query
          description: Optional parameter. Defines the number of results to be fetched for the current page. If not specified default value configured in system settings will be considered.
          required: false
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/SearchResponseTeam'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    post:
      tags:
        - Team
      summary: Create a team
      description: Create a team with the given payload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamCreation'
            examples:
              Team:
                $ref: '#/components/examples/TeamCreation'
      responses:
        '201':
          $ref: '#/components/responses/CreatedResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  '/teams/{id}':
    get:
      tags:
        - Team
      summary: Get a team
      description: Get a team identified by given GUID
      responses:
        '200':
          $ref: '#/components/responses/TeamResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - Team
      summary: Update a Team
      description: Update an existing Team by its id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
            examples:
              Team:
                $ref: '#/components/examples/TeamCreation'
      responses:
        '200':
          $ref: '#/components/responses/TeamResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - Team
      summary: Delete a team
      description: Delete a team identified by given GUID
      responses:
        '204':
          description: The response when the team is successfully deleted
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    parameters:
      - name: id
        in: path
        description: Unique identification for team. Refers to the GUID for the team. For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`
        required: true
        allowEmptyValue: false
        schema:
          type: string
          format: uuid

  '/teams/{id}/users':
    put:
      tags:
        - Team
      summary: Add user(s)
      description: Add user(s) to a specific team identified by given GUID
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            example:
              - 23b0ce88-3296-36be-b2a1-f470aee3f031
      responses:
        '200':
          $ref: '#/components/responses/UserLinkedResponse'
        '400':
          $ref: '#/components/responses/UserLinkBadRequestResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - Team
      summary: Delete user(s)
      description: Delete user(s) from the team identified by given GUID
      responses:
        '200':
          $ref: '#/components/responses/UserUnLinkedResponse'
        '400':
          $ref: '#/components/responses/UserUnlinkBadRequestResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    get:
      tags:
        - Team
      summary: Get user(s)
      description: Get user(s) associated with the team
      responses:
        '200':
          $ref: '#/components/responses/UserListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    parameters:
      - name: id
        in: path
        description: Unique identification for team. Refers to the GUID for the team. For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`
        required: true
        allowEmptyValue: false
        schema:
          type: string
          format: uuid

  '/teams/{id}/applications':
    get:
      tags:
        - Team
      summary: Get application(s)
      description: Get application(s) associated with the team
      responses:
        '200':
          $ref: '#/components/responses/SearchResponseApplication'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
        - name: id
          in: path
          description: Unique identification for team. Refers to the GUID for the team. For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`
          required: true
          allowEmptyValue: false
          schema:
            type: string
            format: uuid

components:
  schemas:
    TeamCreation:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Name of the team
        summary:
          type: string
          description: Summary of the team
        description:
          type: string
          description: Description of the team
        users:
          type: array
          description: List of users in the team
          items:
            type: string
            description: User id
    Team:
      allOf:
        - $ref: '#/components/schemas/TeamCreation'
        - type: object
          properties:
            id:
              type: string
              description: Unique identification for team. Refers to the GUID of the team. For example `532e53ef-3b2a-45af-b859-2456dca1bb1f`
            owner:
              type: string
              description: Owner of the team
    CreatedResponse:
      type: object
      properties:
        id:
          type: string
          description: Identifier of newly created team
        _self:
          type: string
          description: Self reference of the newly created team
    UpdatedResponse:
      type: object
      properties:
        code:
          type: integer
          description: Response code
        message:
          type: string
          description: Response message
    SearchResponseTeam:
      type: object
      required:
        - result
        - count
      properties:
        result:
          type: array
          description: Result list
          items:
            $ref: '#/components/schemas/Team'
        count:
          type: integer
          description: Total number of teams retrieved
        _links:
          type: object
          description: Links of current and next page
          required:
            - _self
          properties:
            _self:
              description: Link of current page
              type: string
            _next:
              description: Link of next page
              type: string
    User:
      type: object
      properties:
        username:
          type: string
          description: Username of the user
        id:
          type: string
          description: Unique identification for team. Refers to the GUID of the team. For example `532e53ef-3b2a-45af-b859-2456dca1bb1f`
        name:
          type: string
          description: Name of the user
        email:
          type: string
          description: Email of the user
        externalPictureUrl:
          type: string
          description: Profile pic url of the user
        type:
          type: string
          description: User type
        created:
          type: string
          description: User created time
        modified:
          type: string
          description: User modified time
    UserList:
      type: array
      description: List of users
      items:
        $ref: '#/components/schemas/User'
    SearchResponseApplication:
      type: object
      required:
        - result
        - count
      properties:
        result:
          type: array
          description: List of application
          items:
            $ref: '#/components/schemas/Application'
        count:
          type: integer
          description: Total number of applications retrieved
        _links:
          type: object
          description: Links of current and next page
          required:
            - _self
          properties:
            _self:
              description: Link of the current page
              type: string
            _next:
              description: Link to the next page
              type: string
    Application:
      type: object
      properties:
        id:
          type: string
          description: Unique identification for application. Refers to the GUID of the application. For example `532e53ef-3b2a-45af-b859-2456dca1bb1f`
        name:
          type: string
          description: Name of the application
        owner:
          type: string
          description: Owner of the application
        description:
          type: string
          description: Description of the application
        apis:
          type: array
          description: APIs associated with the application
          items:
            type: string
        stage:
          type: string
          description: Stage from which application is published
        packageId:
          type: string
          description: Id of package associated with the application
        planId:
          type: string
          description: Id of plan associated with the application
        app_type:
          type: string
          description: Type of application
          enum:
            - API
            - SUBSCRIPTION
        access:
          allOf:
            - $ref: '#/components/schemas/AccessControlList'
            - type: object
          description: Applications access information.
    AccessControlList:
      type: object
      properties:
        created:
          type: string
          format: date
          description: Created date
        modified:
          type: string
          format: date
          description: Modified date
        teams:
          type: array
          description: Teams associated with the application
          items:
            type: string
        users:
          type: array
          description: Users associated with the application
          items:
            type: string
    Error:
      type: object
      properties:
        code:
          type: integer
          description: Error code
        message:
          type: string
          description: Error message
        errors:
          type: array
          description: Error detail list
          items:
            type: string

  examples:
    SearchResponseTeam:
      value:
        count: 1
        _links:
          "_self": "/rest/v1/teams?page=0"
        result:
          - name: SoftwareAG APIPortal
            id: 4ba06f7c-f4dd-4868-9d97-27134e102d00
            owner: 74733475-a879-4693-b94f-22c9c946d433
            summary: Summary of team
            description: Description of team
            users:
              - c2e38064-a94d-4195-8e99-07a9bfeeeac9
              - be5e4369-9241-45e4-a50b-0f513b98dcfe
    SearchResponseApplication:
      value:
        count: 1
        _links:
          "_self": "/rest/v1/teams/74733475-a879-4693-b94f-22c9c946d433/applications?page=0"
        result:
          - id: 205620f6-0177-404c-8436-c5dd1755bfb9
            name: Test app
            summary: Test app
            description: Test app
            owner: c2e38064-a94d-4195-8e99-07a9bfeeeac9
            app_type: API
            apis:
              - 1af21a5c-27a0-455f-b52b-8fe585aaf126
            status: LIVE

    TeamCreation:
      value:
        name: SoftwareAG APIPortal
        summary: Summary of team
        description: Description of team
        users:
          - c2e38064-a94d-4195-8e99-07a9bfeeeac9
          - be5e4369-9241-45e4-a50b-0f513b98dcfe
    Team:
      value:
        id: 4ba06f7c-f4dd-4868-9d97-27134e102d00
        owner: 74733475-a879-4693-b94f-22c9c946d433
        name: SoftwareAG APIPortal
        summary: Summary of team
        description: Description of team
        users:
          - c2e38064-a94d-4195-8e99-07a9bfeeeac9
          - be5e4369-9241-45e4-a50b-0f513b98dcfe
    UserLinkedExample:
      value:
        code: 200
        message: User(s) linked successfully with Team
    UserUnlinkedExample:
      value:
        code: 200
        message: User(s) un-linked successfully from the Team
    UserLinkedAlready:
      value:
        code: 400
        message: User provided data is not correct
        errors:
          - Given User is already linked to the team
    UserUnlinkedAlready:
      value:
        code: 400
        message: User provided data is not correct
        errors:
          - Given User does not exist in the team
    UserNotFound:
      value:
        code: 400
        message: User provided data is not correct
        errors:
          - Unable to find the User with id [be5e4369-9241-45e4-a50b-0f513b98dcfe]
    UserList:
      value:
        - username: consumer
          id: 1d4a465a-3b9a-3b0e-b14d-ae3d08c3b1d9
          email: example@mail.com
          type: NATIVE
          name: consumer
          externalPictureUrl: /rest/v1/users/1d4a465a-3b9a-3b0e-b14d-ae3d08c3b1d9/picture
          created: 2021-03-18 06:26
          modified: 2021-03-18 06:26
    CreatedResponse:
      value:
        id: 4ba06f7c-f4dd-4868-9d97-27134e102d00
        _self: /rest/v1/teams/4ba06f7c-f4dd-4868-9d97-27134e102d00
    401:
      value:
        code: 401
        message: "Invalid credentials"
    403:
      value:
        code: 403
        message: "Insufficient privileges"
    404:
      value:
        code: 404
        message: "Unable to find the Team with id [d4a6bc0b-24dd-4035-862a-0f8f7608512e]"

  responses:
    SearchResponseTeam:
      description: Paginated list of Teams
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SearchResponseTeam'
          examples:
            PaginatedResponse:
              $ref: '#/components/examples/SearchResponseTeam'
    SearchResponseApplication:
      description: Paginated list of applications
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SearchResponseApplication'
          examples:
            PaginatedResponse:
              $ref: '#/components/examples/SearchResponseApplication'
    CreatedResponse:
      description: Response of team creation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedResponse'
          examples:
            CreatedResponse:
              $ref: '#/components/examples/CreatedResponse'
    TeamResponse:
      description: Response while getting a particular team
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Team'
          examples:
            CreatedResponse:
              $ref: '#/components/examples/Team'
    UserLinkedResponse:
      description: Response when a new user is added to the team
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdatedResponse'
          examples:
            CreatedResponse:
              $ref: '#/components/examples/UserLinkedExample'
    UserUnLinkedResponse:
      description: Response when an existing user is removed from the team
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdatedResponse'
          examples:
            CreatedResponse:
              $ref: '#/components/examples/UserUnlinkedExample'
    UserLinkBadRequestResponse:
      description: Response when user is already linked/ could not be found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            UserLinkedAlready:
              $ref: '#/components/examples/UserLinkedAlready'
            UserNotFound:
              $ref: '#/components/examples/UserNotFound'
    UserUnlinkBadRequestResponse:
      description: Response when user is not linked/ could not be found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            UserUnlinkedAlready:
              $ref: '#/components/examples/UserUnlinkedAlready'
            UserNotFound:
              $ref: '#/components/examples/UserNotFound'
    UserListResponse:
      description: Response of users associated with the team
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserList'
          examples:
            UserList:
              $ref: '#/components/examples/UserList'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            401:
              $ref: '#/components/examples/401'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            403:
              $ref: '#/components/examples/403'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            404:
              $ref: '#/components/examples/404'
