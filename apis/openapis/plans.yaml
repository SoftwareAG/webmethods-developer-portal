openapi: 3.0.1
info:
  title: Portal Plans API
  description: |-
    ## Overview
    An API Plan is a contract proposal presented to the consumers who wish to subscribe to the APIs.

    Plans are offered as tiered offerings with varying availability guarantees, SLAs or cost structures associated to it.

    ## Functionalities supported
    - List the plans available in the system.
    - Create a new plan.
    - Get the details of a plan.
    - Modify an existing plan.
    - Delete an existing plan

    ## Authorization
    - Users with role 'Administrator' and/or 'Provider' can create/update/delete a plan
    - Any user can view the list of available plans and details of a particular plan
  version: '10.11'
servers:
  - url: http://localhost:18101/portal/rest/v1
    description: Development server
paths:
  /plans:
    get:
      tags:
        - Plan
      summary: Read all plans
      parameters:
        - name: page
          in: query
          description: Optional parameter. Defines the page number to be retrieved for the collection. If not specified default value 0 is assumed. By default collection responses are paginated with batches of 10.
          required: false
          schema:
            type: string
            default: 0
        - name: limit
          in: query
          description: Optional parameter. Defines the number of results to be fetched for the current page. If not specified default value configured in system settings will be considered.
          required: false
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/SearchResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    post:
      tags:
        - Plan
      summary: Create plan
      requestBody:
        description: Plan payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plan'
            examples:
              plan:
                $ref: '#/components/examples/Plan'
      responses:
        '201':
          $ref: '#/components/responses/CreatedResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  '/plans/{id}':
    get:
      tags:
        - Plan
      summary: Get the details of a plan by the given id
      responses:
        '200':
          $ref: '#/components/responses/PlanResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - Plan
      summary: Update a specific plan identified by given id
      requestBody:
        description: Plan payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plan'
            examples:
              plan:
                $ref: '#/components/examples/Plan'
      responses:
        '200':
          $ref: '#/components/responses/UpdatedResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - Plan
      responses:
        '204':
          description: Plan is deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    parameters:
      - name: id
        in: path
        description: Unique identification of plan. Refers to the GUID of the plan.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`
        required: true
        schema:
          type: string
components:
  schemas:
    CreatedResponse:
      required:
        - id
        - _self
      type: object
      properties:
        id:
          type: string
          description: Unique identification of plan. Refers to the GUID of the plan.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`
        _self:
          type: string
          description: Link to the current plan
    Pagination:
      required:
        - _self
      type: object
      properties:
        _self:
          type: string
          description: Link for current page
        _next:
          type: string
          description: Optional link for the next page. Will be missing if the next page does not exist.
    PlanEnforcements:
      type: object
      properties:
        name:
          type: string
        properties:
          type: array
          items:
            $ref: '#/components/schemas/Property'
    PlanCost:
      description: Cost structure of the plan
      type: object
      properties:
        duration:
          description: Incurs cost at this duration interval. e.g 1 hour
          type: string
        currency:
          description: Name of the currency. e.g US$ or INR
          type: string
        value:
          description: Price value. e.g 1500
          type: string
    Icon:
      description: Logo/Icon of the plan
      type: object
      properties:
        url:
          type: string
          description: Location of the icon file
        type:
          type: string
          description: Denotes if internal file system icon of externally located. Supported values 'INTERNAL', 'EXTERNAL'
          enum:
            - INTERNAL
            - EXTERNAL
    Error:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          description: Detailed error message
          type: string
    Plan:
      type: object
      properties:
        license:
          type: string
          description: Holds the license details for using the plan
        enforcements:
          description: Contains the quota limits and alert message definition
          type: array
          items:
            $ref: '#/components/schemas/PlanEnforcements'
        cost:
          $ref: '#/components/schemas/PlanCost'
        terms:
          type: string
          description: Terms and contions of the plan
        deprecated:
          type: boolean
          description: Indicates if the plan is deprecated or active
        name:
          type: string
          description: Name of the plan
        id:
          type: string
          description: Unique identification of plan. Refers to the GUID of the plan. For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`
        icon:
          $ref: '#/components/schemas/Icon'
        description:
          description: Detailed description and usage of the plan
          type: string
    Property:
      type: object
      properties:
        value:
          type: string
        key:
          type: string
    SearchResponse:
      required:
        - result
        - count
      type: object
      properties:
        result:
          type: array
          description: Array of objects matching given criteria
          items:
            $ref: '#/components/schemas/Plan'
        _links:
          $ref: '#/components/schemas/Pagination'
        count:
          type: integer
          description: Total number of results found
          format: int32
  responses:
    CreatedResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedResponse'
          examples:
            201:
              $ref: '#/components/examples/CreatedResponse'
    BadRequest:
      description: 'The request was unacceptable, due to invalid payload'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            400:
              $ref: '#/components/examples/BadRequest'
    UpdatedResponse:
      description: Plan updated successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Plan'
          examples:
            plan:
              $ref: '#/components/examples/Plan'
    PlanResponse:
      description: Plan with the given id retrived successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Plan'
          examples:
            plan:
              $ref: '#/components/examples/Plan'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            401:
              $ref: '#/components/examples/Unauthorized'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            403:
              $ref: '#/components/examples/Forbidden'
    SearchResponse:
      description: Retrived all plans
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SearchResponse'
          examples:
            plans:
              $ref: '#/components/examples/GetAllPlans'
    NotFound:
      description: Plan not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            404:
              $ref: '#/components/examples/NotFound'
  examples:
    CreatedResponse:
      value:
        id: f790526b-4de4-c305-732d-d8a3d3e2bc12
        _self: /rest/v1/plans/f790526b-4de4-c305-732d-d8a3d3e2bc12
    BadRequest:
      value:
        code: 400
        message: User provided data is not correct
    Unauthorized:
      value:
        code: 401
        message: Invalid credentials
    Forbidden:
      value:
        code: 403
        message: Insufficient privileges
    Plan:
      value:
        name: Gold Plan
        id: 5f5947f7-ffb5-4534-bf44-360aceca9b24
        summary: Summary of gold plan
        description: Description of gold plan
        cost:
          currency: US
          value: '100'
          duration: hour
        icon:
          url: "/rest/v1/files/1ebfebdc-ffef-4074-b980-d8f126e7cf71"
          type: INTERNAL
        terms: Subject to terms and conditions
        license: Apache 2.0 Licensed
        enforcements:
          - name: Throttling
            properties:
              - key: Maximum Request Quota
                value: '100'
              - key: Validation Interval
                value: 3 minutes
              - key: Violation Message
                value: Hard limit crossed
    GetAllPlans:
      value:
        result:
          - name: Gold Plan
            owner: 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
            id: 5f5947f7-ffb5-4534-bf44-360aceca9b24
            cost:
              currency: US
              value: '100'
              duration: hour
            icon:
              url: "/rest/v1/files/1ebfebdc-ffef-4074-b980-d8f126e7cf71"
              type: INTERNAL
            terms: Subject to terms and conditions
            license: Apache 2.0 Licensed
            deprecated: false
            enforcements:
              - name: Throttling
                properties:
                  - key: Maximum Request Quota
                    value: '100'
                  - key: Validation Interval
                    value: 3 minutes
                  - key: Violation Message
                    value: Hard limit crossed
            summary: Summary of gold plan
            description: Description of gold plan
        count: 1
        _links:
          _self: "/rest/v1/plans?page=0"
    NotFound:
      value:
        code: 404
        message: Unable to find the Plan with id [74733475-a879-4693-b94f-22c9c946d433]
