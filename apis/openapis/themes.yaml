openapi: 3.0.1
info:
  title: Portal Theme API
  description: |-
    ## Overview
    Administrators can customize their portal’s logo, colors, and
    fonts to match their organization’s corporate identity. Administrators can further customize
    their portal by modifying pages, incorporating widgets, and changing the appearance and
    organization of APIs, adding custom pages, components, and labels.

    Theme contains all information about the UI appearance and they determine the look and feel of
    the UI. So, you should create a theme, specify your changes and apply it to customize the UI.

    ## Functionalities supported

    ### Theme CRUD

    API Portal Administrator can create theme, update theme, delete theme and backup and restore the theme.

    ---

    ### Page CRUD

    The API Portal Administrator can able to create new page, customize the page and assign/edit permissions for the custom pages.
    Based on the permissions assigned, only those users can access/view the custom pages.


    ---
    ### Layout CRUD

    The API Portal Administrator can able to create new layout and customize the layout.

    ---

    ### Properties CRUD

    The API Portal Administrator can able to add new i18n properties, edit the value and delete the property. Language translation for any existing key can also be added.

    ---

    ## Authorization
    - Users with role **Administrator** can perform Create/Update/Delete of Theme


  version: '10.11'

servers:
  - url: http://localhost:18101/portal/rest/v1
    description: Development server

paths:
  /themes:
    get:
      tags:
        - Theme management
      summary: Retrieve the list of available themes
      description: |-
        Endpoint to retrieve the list of all available themes in API Portal.

        *Endpoint can be accessed only by a user having **Administrator** role*
      parameters:
        - name: page
          in: query
          description: Optional parameter. Defines the page number to be retrieved for the collection. If not specified default value 0 is assumed. By default collection responses are paginated with batches of 10.
          required: false
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          description: Optional parameter. Defines the number of results to be fetched for the current page. If not specified default value configured in system settings will be considered.
          required: false
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeSearchResponse'
              examples:
                ThemeSearchResponse:
                  $ref: '#/components/examples/ThemeSearchResponse'
        '403':
          $ref: '#/components/responses/403'
        '401':
          $ref: '#/components/responses/401'

    post:
      tags:
        - Theme management
      summary: Create a new theme
      description: |-
        Endpoint to create a new theme in API Portal

        *Endpoint can be accessed only by a user having **Administrator** role*
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThemeBasic'
            example:
              name: Theme one
              description: This is a dark mode theme
              version: 1.0
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreationResponse'
              example:
                id: 0392ce93-49e5-4302-9e84-7ba53431ff69
                _self: /rest/v1/themes/41874e13-03d7-4cd6-9911-b96711e51cf4

        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalResponse'
              examples:
                400:
                  $ref: '#/components/examples/PortalResponseError'
        '403':
          $ref: '#/components/responses/403'
        '401':
          $ref: '#/components/responses/401'

  /themes/{id}:
    get:
      tags:
        - Theme management
      summary: Retrieve the theme by Id
      description: |-
        Endpoint to obtain details of particular theme based on ID

        *Endpoint can be accessed only by a user having **Administrator** role*
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeTemplate'
              examples:
                ThemeResponse:
                  $ref: '#/components/examples/Theme'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '401':
          $ref: '#/components/responses/401'
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`

    put:
      tags:
        - Theme management
      summary: Update the theme by Id
      description: |-
        Endpoint to update details of particular theme based on ID. Using this endpoint only theme name, description and version can be updated.

        *Endpoint can be accessed only by a user having **Administrator** role*
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThemeBasic'
            example:
              name: Theme two
              description: This is a dark mode theme
              version: 2.0

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeUpdate'
              examples:
                200:
                  $ref: '#/components/examples/ThemeUpdate'

        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalResponse'
              examples:
                400:
                  $ref: '#/components/examples/PortalResponseError'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '401':
          $ref: '#/components/responses/401'
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for Theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`

    delete:
      tags:
        - Theme management
      summary: Delete the theme by Id
      description:  |-
        Endpoint to delete a particular theme based on ID

        *Endpoint can be accessed only by a user having **Administrator** role*
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '401':
          $ref: '#/components/responses/401'
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`

  /themes/{id}/clone:
    put:
      tags:
        - Theme management
      summary: Clone the theme by Id
      description: |-
        Endpoint to clone a particular theme.

        *Endpoint can be accessed only by a user having **Administrator** role*
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThemeTemplate'
            example:
              name: Dark theme-cloned
              description: This is a cloned theme
              version: 2.1

      responses:
        '201':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreationResponse'
              example:
                id: 0392ce93-49e5-4302-9e84-7ba53431ff69
                _self: /rest/v1/themes/41874e13-03d7-4cd6-9911-b96711e51cf4
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '401':
          $ref: '#/components/responses/401'
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for Theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`

  /themes/{id}/activate:
    post:
      tags:
        - Theme management
      summary: Activate a particular theme by Id
      description: |-
        Endpoint to activate a particular theme. Activated theme style will be applied to the API Portal.

        *Endpoint can be accessed only by a user having **Administrator** role*

      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeUpdate'
              example:
                code: 200
                message: Theme has been  activated
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '401':
          $ref: '#/components/responses/401'
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for Theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`


  /themes/{id}/backup:
    post:
      tags:
        - Theme management
      summary: Backup/Export a theme
      description: |-
        Endpoint to export a theme in API Portal by ID

        *Endpoint can be accessed only by a user having **Administrator** role*

      responses:
        '200':
          description: file with zipped theme content (component, file, i18n, layout, page, style)
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary

        '403':
          $ref: '#/components/responses/403'
        '401':
          $ref: '#/components/responses/401'

      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`

  /themes/{id}/restore:
    post:
      tags:
        - Theme management
      summary: Restore a theme
      description: |-
        Endpoint to restore a theme in API Portal

        *Endpoint can be accessed only by a user having **Administrator** role*
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: No content
        "400":
          $ref: '#/components/responses/LargerZipFile'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'

      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`


  /themes/{id}/pages:
    get:
      tags:
        - Page management
      summary: Retrieve the list of pages by theme ID
      description: |-
        Endpoint to obtain details of list of pages created inside a particular theme.

        *Endpoint can be accessed only by a user having **Administrator** role

      responses:
        '200':
          $ref: '#/components/responses/Pages'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '401':
          $ref: '#/components/responses/401'
    parameters:
      - name: id
        in: path
        required: true
        allowEmptyValue: false
        schema:
          type: string
        description: Unique Identification for theme. Refers to the GUID of the theme. For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`


  /themes/{id}/pages/{name}:
    post:
      tags:
        - Page management
      summary: create a new page
      description: |-
        Endpoint to create a page inside a theme. Attribute 'type' can have layout and widget as value.

        *Endpoint can be accessed only by a user having **Administrator** role

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageDetail'
            example:
              - name: FLEXBOX
                type: layout
                options:
                  direction: column
                style:
                  wrapper: 'margin-left: 1rem; margin-right: 1rem; margin-top: 1rem; margin-bottom: 1rem;'
                children:
                  - name: HeadingComponent
                    type: widget
                    options:
                      type: 1
                      text: Add your heading here...
                  - name: ParagraphComponent
                    type: widget
                    options:
                      text: Add your text here..

      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeUpdate'
              example:
                code: 200
                message: Updated successfully
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '401':
          $ref: '#/components/responses/401'
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`
        - name: name
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for page. Refers to the name of the page. For example `HomePage`

    put:
      tags:
        - Page management
      summary: Update an existing page
      description: |-
        Endpoint to update an existing page inside a theme.

        *Endpoint can be accessed only by a user having **Administrator** role

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageDetail'
            example:
              - name: FLEXBOX
                type: layout
                options:
                  direction: column
                style:
                  wrapper: 'margin-left: 1rem; margin-right: 1rem; margin-top: 1rem; margin-bottom: 1rem;'
                children:
                  - name: HeadingComponent
                    type: widget
                    options:
                      type: 1
                      text: Add your heading here...


      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeUpdate'
              example:
                code: 200
                message: Updated successfully
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '401':
          $ref: '#/components/responses/401'
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`
        - name: name
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for page. Refers to the name of the page. For example `HomePage`

    get:
      tags:
        - Page management
      summary: Retrieve a particular page by name
      description: |-
        Endpoint to obtain details of a particular page inside a theme.

        *Endpoint can be accessed only by a user having **Administrator** role or **READ** permission
      responses:
        '200':
          $ref: '#/components/responses/PageDetail'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '401':
          $ref: '#/components/responses/401'
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`
        - name: name
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for page. Refers to the name of the page. For example `HomePage`

    delete:
      tags:
        - Page management
      summary: Delete the existing page
      description:  |-
        Endpoint to delete a particular page based on page name.

        *Endpoint can be accessed only by a user having **Administrator** role*
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '401':
          $ref: '#/components/responses/401'
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`
        - name: name
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for page. Refers to the name of the page. For example `HomePage`

  /themes/{id}/pages/{name}/access:

    put:
      tags:
        - Page management
      summary: Update permission for an custom page
      description: |-
        Developer Portal lets you to create custom pages. By this resource, the portal will provide
        possibility to assign & enforce role based access for the custom pages.

        *Endpoint can be accessed only by a user having **Administrator** role

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessControlList'
            example:
              - {
                "entries": [
                  {
                    "subject": "72416718-bf14-4228-8e71-b4c803a44375",
                    "type": "COMMUNITY",
                    "permission": "READ"
                  },
                  {
                    "subject": "1e4332f6-5a7a-3210-b5fb-fb92c7c60cce",
                    "type": "USER",
                    "permission": "READ"
                  },
                  {
                    "subject": "8ad53d34-550a-35f8-ac0b-c540aa751dbf",
                    "type": "GROUP",
                    "permission": "READ"
                  }
                ]
              }

      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeUpdate'
              example:
                code: 200
                message: Updated successfully
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '401':
          $ref: '#/components/responses/401'
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`
        - name: name
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for page. Refers to the name of the page. For example `HomePage`

    get:
      tags:
        - Page management
      summary: Retrieve access permission for particular page by name identified within a theme
      description: |-
        Developer Portal lets you to create custom pages. By this resource, the portal will provide
        possibility to retrieve the access permissions defined for a custom pages.

        *Endpoint can be accessed only by a user having **Administrator** role
      responses:
        '200':
          $ref: '#/components/responses/Access'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '401':
          $ref: '#/components/responses/401'
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`
        - name: name
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for page. Refers to the name of the page. For example `HomePage`

  /themes/{id}/layouts:
    get:
      tags:
        - Layout management
      summary: Retrieve the list of layouts by theme ID
      description: |-
        Endpoint to obtain details of list of layouts created inside a particular theme.

        *Endpoint can be accessed only by a user having **Administrator** role

      responses:
        '200':
          $ref: '#/components/responses/Layouts'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '401':
          $ref: '#/components/responses/401'
    parameters:
      - name: id
        in: path
        required: true
        allowEmptyValue: false
        schema:
          type: string
        description: Unique Identification for theme. Refers to the GUID of the theme. For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`

  /themes/{id}/layouts/{name}:
    post:
      tags:
        - Layout management
      summary: create a new layout
      description: |-
        Endpoint to create a layout inside a theme.

        *Endpoint can be accessed only by a user having **Administrator** role

        ### Layout:
        Layout defines the skeleton of a building block. Layouts are used to pad the content inside of them. These are called children.

        #### Options:
          Below are the different options can be configured for a layout.

          * direction:

            Specifies the direction of in which the child components added inside the current block. Available options are

            `Row` - Aligns components in a horizontal fashion like a row

            `Column` - Aligns components in a version fashion like a column

          * mainAxis:

            Specifies the option to determine how the components inside the current block must be distributed between and around the main axis of the page. Available options are

             `Start` - Aligns components from the start of the block.

             `Center` -Aligns components towards the center of the block

             `End` - Aligns components towards the bottom portion of the block.

             `Space around` - Distributes components evenly. Components have a half-size space on either end. Aligns the paragraphs in a block
              allowing space around each paragraph.

             `Space between` - Distribute components evenly The first item is
              flush with the start, the last is flush with the end

          * crossAxis:

            Specifies the option to determine how the components inside the current block must be distributed between and around the cross axis of the page. Available options are

             `Start` - Aligns components from the start of the block.

             `Center` -Aligns components towards the center of the block

             `End` - Aligns components towards the bottom portion of the block.

             `Stretch` - Stretches and aligns components to fill the block.

          * flexBasis:
            Specifies the initial minimum width of the block.

          * width:
            Specifies the width of the block.

        ### Widget:
          Widgets offer are core components that can be placed inside a container. Developer portal offers various basic widgets that can be used to build a full blown HTML pages.

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageDetail'
            example:
              - name: FLEXBOX
                type: layout
                options:
                  width: 100%
                children:
                  - name: FLEXBOX
                    type: layout
                    options:
                      direction: column
                      flexBasis: 50%
                      mainAxis: center
                      crossAxis: center
                    style:
                      wrapper: 'margin: 1rem; min-height: 12rem;'
                  - name: FLEXBOX
                    type: layout
                    options:
                      direction: column
                      flexBasis: 50%
                      mainAxis: center
                      crossAxis: center
                    style:
                      wrapper: 'margin: 1rem; min-height: 12rem;'

      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeUpdate'
              example:
                code: 200
                message: Updated successfully
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '401':
          $ref: '#/components/responses/401'
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`
        - name: name
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for layout. Refers to the name of the layout. For example `two-horizontl`

    put:
      tags:
        - Layout management
      summary: Update an existing layout
      description: |-
        Endpoint to update an existing layout inside a theme.

        *Endpoint can be accessed only by a user having **Administrator** role

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageDetail'
            example:
              - name: FLEXBOX
                type: layout
                options:
                  width: 100%
                children:
                  - name: FLEXBOX
                    type: layout
                    options:
                      direction: column
                      flexBasis: 50%
                      mainAxis: center
                      crossAxis: center
                    style:
                      wrapper: 'margin: 1rem; min-height: 12rem;'
                    id: 6f862559-b88f-4319-f384-3014ffbdea47
                id: 9c6a7b6a-f294-2769-c6fe-e5bf5ca4a604

      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeUpdate'
              example:
                code: 200
                message: Updated successfully
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '401':
          $ref: '#/components/responses/401'
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`
        - name: name
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for layout. Refers to the name of the layout. For example `two-horizontal`

    get:
      tags:
        - Layout management
      summary: Retrieve a particular layout by name
      description: |-
        Endpoint to obtain details of a particular layout inside a theme.

        *Endpoint can be accessed only by a user having **Administrator** role
      responses:
        '200':
          $ref: '#/components/responses/LayoutDetail'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '401':
          $ref: '#/components/responses/401'
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`
        - name: name
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for layout. Refers to the name of the layout. For example `two-horizontal`

    delete:
      tags:
        - Layout management
      summary: Delete the existing layout
      description:  |-
        Endpoint to delete a particular layout based on layout name.

        *Endpoint can be accessed only by a user having **Administrator** role*
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '401':
          $ref: '#/components/responses/401'
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`
        - name: name
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for layout. Refers to the name of the layout. For example `two-horizontal`

  /themes/{id}/i18n/{key}:
    post:
      tags:
        - Properties management
      summary: Add new property
      description: |-
        Endpoint to create a new property. New key and value can be added for a particular language. If the key is already available, new value will be updated.

        *Endpoint can be accessed only by a user having **Administrator** role

      requestBody:
        content:
          application/json:
            schema:
              type: string
              additionalProperties:
                type: string
            example:
              it_IT: etichetta
              es_ES: etiqueta


      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeUpdate'
              example:
                code: 200
                message: Updated successfully
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '401':
          $ref: '#/components/responses/401'
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`
        - name: key
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for property. Refers to the key of the property. For example `base.shared.label.LBL`
    delete:
      tags:
        - Properties management
      summary: Delete the existing key
      description:  |-
        Endpoint to delete a existing key which is added by the API Administrator.

        *Endpoint can be accessed only by a user having **Administrator** role*
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '401':
          $ref: '#/components/responses/401'
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`
        - name: key
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for property. Refers to the key of the property. For example `base.shared.label.LBL`

  /themes/{id}/i18n:
    put:
      tags:
        - Properties management
      summary: Update value of existing key
      description: |-
        Endpoint to update an existing key.

        *Endpoint can be accessed only by a user having **Administrator** role

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Property'
            example:
              base.name.LBL:
                es_ES: nombre
                it_IT: nome

      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeUpdate'
              example:
                code: 200
                message: Updated successfully
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '401':
          $ref: '#/components/responses/401'
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`

    get:
      tags:
        - Properties management
      summary: Retrieve list of i18n keys and values
      description: |-
        Endpoint to retrieve list of i18n keys and values of current language.

        *Endpoint can be accessed only by a user having **Administrator** role
      responses:
        '200':
          $ref: '#/components/responses/PropertyDetail'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '401':
          $ref: '#/components/responses/401'
      parameters:
        - name: id
          in: path
          required: true
          allowEmptyValue: false
          schema:
            type: string
          description: Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`



components:
  schemas:
    CreatedResponse:
      required:
        - id
        - _self
      type: object
      properties:
        id:
          type: string
          description: Unique identification for policy.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`
        _self:
          type: string
          description: link to the onboarding type policy

    RestoreRequest:
      type: object
      properties:
        file:
          description: backup file to be restored.
          type: string
          format: binary
    ThemeSearchResponse:
      type: object
      properties:
        result:
          description: List of themes
          type: array
          items:
            $ref: '#/components/schemas/ThemeTemplate'
        count:
          description: Number of themes
          type: integer
        _links:
          description: List of available themes
          type: object
          additionalProperties:
            type: string

    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error message
        errors:
          type: array
          items:
            type: string

    PortalResponse:
      type: object
      title: ''
      properties:
        code:
          type: integer
          description: Error code
        message:
          type: string
          description: Error message
        errors:
          type: array
          description: Array of failed validation errors
          items:
            type: string

    ThemeUpdate:
      title: Theme update
      type: object
      properties:
        code:
          type: string
          description: Http response code
        message:
          type: string
          description: short message about the response

    ThemeBasic:
      title: ThemeBasic
      type: object
      properties:
        id:
          type: string
          description: Unique representation of theme object
        name:
          type: string
          description: An Unique name for the identification of theme
        description:
          type: string
          description: Short description on theme
        version:
          type: string
          description: version of a theme
      required:
        - name

    ThemeTemplate:
      title: Theme
      type: object
      properties:
        id:
          type: string
          description: Unique representation of theme object
        name:
          type: string
          description: An Unique name for the identification of theme
        description:
          type: string
          description: Short description on theme
        pages:
          type: object
        layouts:
          type: object
        components:
          type: object
        resources:
          type: object
      required:
        - name

    CreationResponse:
      title: CreationResponse
      type: object
      properties:
        id:
          type: string
          description: Unique id of saved object
        _self:
          type: string
          description: Location of entity

    PageTemplate:
      title: DefinitionTemplate
      type: object
      properties:
        name:
          type: string
          description: Unique name of page
        custom:
          type: string
          description: false if the page is available by default in the API portal

    AccessControlList:
      type: Array
      description: List of AccessControlEntries
      items:
        $ref: '#/components/schemas/AccessControlEntry'

    AccessControlEntry:
      title: Access control entry
      type: object
      properties:
        subject:
          type: string
          description: GUID of the user/group/community
        displayName:
          type: string
          description: Display name of the subject
        type:
          type: string
          description: type of component
          enum:
            - USER
            - GROUP
            - ROLE
            - COMMUNITY
        permission:
          type: object
          description: Permission to be assigned
          enum:
            - READ

    PageDetail:
      title: Definition
      type: object
      properties:
        name:
          type: string
          description: name of the component in the page
        type:
          type: string
          description: type of component
        options:
          type: object
          description: Options of the definition
        style:
          type: object
          description: Css style that need to be applied to this component
        children:
          type: array
          description: List of components
          items:
            $ref: '#/components/schemas/PageDetail'

    Property:
      title: Property
      type: object
      properties:
        StringStringMap:
          type: object
          additionalProperties:
            type: string



  responses:
    401:
      description: The request was unacceptable, due to invalid credentials
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PortalResponse'
          examples:
            401:
              $ref: '#/components/examples/401'
    403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PortalResponse'
          examples:
            403:
              $ref: '#/components/examples/403'
    404:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PortalResponse'
          examples:
            404:
              $ref: '#/components/examples/404'

    LargerZipFile:
      description: Zip file content is larger.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            400:
              $ref: '#/components/examples/LargerZipFile'

    Pages:
      description: ok
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PageTemplate'
          examples:
            Pages:
              $ref: '#/components/examples/Pages'
    Layouts:
      description: ok
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PageTemplate'
          examples:
            Layouts:
              $ref: '#/components/examples/Layouts'

    Access:
      description: ok
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessControlList'
          examples:
            Pages:
              $ref: '#/components/examples/acl'

    PageDetail:
      description: ok
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PageDetail'
          examples:
            Pages:
              $ref: '#/components/examples/PageDetail'

    LayoutDetail:
      description: ok
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PageDetail'
          examples:
            Layout:
              $ref: '#/components/examples/LayoutDetail'

    PropertyDetail:
      description: ok
      content:
        application/json:
          schema:
            type: string
            additionalProperties:
              type: string
          examples:
            Property:
              $ref: '#/components/examples/PropertyDetail'

    PageTemplate:
      description: ok


  examples:
    401:
      value:
        code: 401
        message: Invalid credentials
    403:
      value:
        code: 403
        message: Insufficient privileges
    404:
      value:
        status: 404
        message: Unable to find the theme
    ThemeSearchResponse:
      value:
        result:
          - name: Theme one
            documentType: THEME
            id: 14594abf-054f-4e4d-b16d-3eb8495f25dc
          - name: DEFAULT
            documentType: THEME
            id: 5535a71b-01ef-47b7-b813-922655ba788c
        count: 2
        _links:
          _self: rest/v1/themes?page=0
          _next: rest/v1/themes?page=1

    Pages:
      value:
        - name: about
          custom: false
        - name: api-details
          custom: false
        - name: api-gallery
          custom: false
        - name: footer
          custom: false

    acl:
      value:
        {
          "entries": [
            {
              "subject": "72416718-bf14-4228-8e71-b4c803a44375",
              "type": "COMMUNITY",
              "permission": "READ"
            },
            {
              "subject": "1e4332f6-5a7a-3210-b5fb-fb92c7c60cce",
              "type": "USER",
              "permission": "READ"
            },
            {
              "subject": "8ad53d34-550a-35f8-ac0b-c540aa751dbf",
              "type": "GROUP",
              "permission": "READ"
            }
          ]
        }


    Layouts:
      value:
        - name: two-horizontal
          custom: false
        - name: three-horizontal
          custom: false
        - name: composite-b
          custom: false
        - name: two-vertical
          custom: false

    LayoutDetail:
      value:
        - name: FLEXBOX
          type: layout
          options:
            width: 100%
          children:
            - name: FLEXBOX
              type: layout
              options:
                direction: column
                flexBasis: 50%
                mainAxis: center
                crossAxis: center
              style:
                wrapper: 'margin: 1rem; min-height: 12rem;'
            - name: FLEXBOX
              type: layout
              options:
                direction: column
                flexBasis: 50%
                mainAxis: center
                crossAxis: center
              style:
                wrapper: 'margin: 1rem; min-height: 12rem;'

    PropertyDetail:
      value:
        base.name.LBL: Name
        base.password.LBL: Password
        base.description.LBL: description
        base.summary.LBL: summary


    PageDetail:
      value:
        - name: FLEXBOX
          type: layout
          options:
            direction: column
            width: 100%
          style:
            wrapper: 'padding: 0 24px;'
          children:
            - name: FLEXBOX
              type: layout
              options:
                crossAxis: center
              style:
                wrapper: 'padding-top: 1rem;'
              children:
                - name: LinkComponent
                  type: widget
                  options:
                    key: base.shared.home.LBL
                    type: internal
                    href: /
                - name: IconComponent
                  type: widget
                  options:
                    name: dlt-icon-chevron-breadcrumb
                  style:
                    element: |-
                      padding: 0 .125rem;
                                          color: grey;
                                          font-size: 1rem;
                                          vertical-align: middle;
                                          line-height: 1.5;
                - name: LinkComponent
                  type: widget
                  options:
                    key: consumer.about.headingcomponent.heading.LBL
                    current: page
                    type: internal
                    href: /communities
            - name: HeadingComponent
              type: widget
              options:
                key: consumer.header.aboutcomponent.heading.LBL
                type: 1
              style:
                element: |-
                  font-weight: 300;
                     margin-bottom: 0;
                        margin-top: 0.5rem;

            - name: ParagraphComponent
              type: widget
              options:
                key: consumer.header.aboutcomponent.subheading.LBL
              style:
                element: |-
                  font-size: 90%;
                  line-height: 1.5;
            - name: FLEXBOX
              type: layout
              options:
                width: 100%
              children:
                - name: AboutComponent
                  type: widget
            - name: FLEXBOX
              type: layout
              options:
                direction: column
              children:
                - name: HeadingComponent
                  type: widget
                  options:
                    key: base.header.aboutcomponent.copyright.heading.LBL
                    type: 1
                  style:
                    element: |-
                      font-weight: 300;
                         margin-bottom: 1rem;
                            margin-top: 0.5rem;

                - name: ParagraphComponent
                  type: widget
                  options:
                    key: base.footer.paragraphcomponent.copyright.LBL
                  style:
                    element: |-
                      margin-bottom:  1rem;
                      font-size: 90%;
                      line-height: 1.5;
                - name: ParagraphComponent
                  type: widget
                  options:
                    key: base.header.aboutcomponent.trademarks.LBL
                  style:
                    element: |-
                      margin-bottom:  1rem;
                      font-size: 90%;
                      line-height: 1.5;
                - name: ParagraphComponent
                  type: widget
                  options:
                    key: base.header.aboutcomponent.copyright.LBL
                  style:
                    element: |-
                      margin-bottom:  1rem;
                      font-size: 90%;
                      line-height: 1.5;
                - name: ParagraphComponent
                  type: widget
                  options:
                    key: base.header.aboutcomponent.thirdparty.LBL
                  style:
                    element: |-
                      margin-bottom:  1rem;font-size: 90%;
                      line-height: 1.5;
                - name: ParagraphComponent
                  type: widget
                  options:
                    key: base.header.aboutcomponent.confidentiality.LBL
                  style:
                    element: |-
                      font-size: 90%;
                      line-height: 1.5;


    LargerZipFile:
      value:
        code: 400
        message: The zip file content is larger than the maximum allowed size

    Theme:
      value:
        name: Dark theme
        documentType: THEME
        id: 14594abf-054f-4e4d-b16d-3eb8495f25dc


    ThemeUpdate:
      value:
        code: 200
        message: Theme has been updated successfully
    PortalResponseError:
      value:
        code: 400
        message: "User provided data is not correct"
        errors: [

        ]
    CreatedResponse:
      value:
        id: f790526b-4de4-c305-732d-d8a3d3e2bc12
        _self: /rest/v1/approval/policy


  requestBodies: {}
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
security:
  - basicAuth: []
