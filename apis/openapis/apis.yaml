openapi: 3.0.1
info:
  title: Portal Manage APIs
  version: "10.11"
  description: |-
    ## Overview
    API Portal functions as the key component of an effective API management solution. Third party providers use API Portal to
    securely publish APIs to external developers and partners and provides design-time governance capabilities to the APIs. API Portal
    offers direct API importing facility for standalone scenarios.

    This endpoint provides APIs management capability of an API Portal. Following functionalities can be achieved byt using this endpoint,

    ## APIs CRUD
      - Import API using the Swagger/OpeanAPI/RAML/WSDL file
      - Import API using the external URL API Definition
      - Import API using the API Definition
      - Modify API using the Swagger/OpeanAPI/RAML/WSDL file
      - Modify API using the external URL API Definition
      - Modify API using the API Definition
      - Modify the state of API
      - Retrieve the publish status of an API
      - Delete an particular API
      - Export an API
      - Retrieve the different version information of an API
      - Retrieve the different stages infomration of an API

    ## APIs search
      - Retrieive all APIs
      - Get number of APIs imported into API Portal
      - Retrieve the APIs linked to an API Provider
      - Retrieve the APIs based on search criteria
      - Retrieve the particular API
      - Retrieve the possible filters that can be used to search an API

    ## APIs association information
      - Retrieve the subscriptions linked to an API
      - Retrieve the applications linked to an API
      - Retrieve the packages linked to an API
      - Retrieve the groups linked to an API
      - Retrieve the bookmarked topics linked to an API

    ## API collobration information
      - Retrieve the communities linked to an API
      - Retrieve the topics linked to an API
      - Retrieve the bookmarked topics linked to an API
      - Rate an API
      - Follow an API
      - Retrieve the followers count for an API
      - Retrieve the followers of an API
      - Update the view preference of a hybrid API

    ## API Tryout
      - Test the resource/operation on an API
      - Test the multipart or binary type resource of an API
      - Retrieve the history of an API tryout

servers:
  - url: http://localhost:18101/portal/rest/v1
    description: Development server

paths:
  "/apis":
    get:
      summary: Retrieve all the APIs in the API Portal
      description: |-
        Endpoint to retrieve the list of all APIs in API Portal.
      parameters:
        - name: page
          in: query
          description: Optional parameter. Defines the page number to be retrieved for the collection. If not specified default value 0 is assumed. By default collection responses are paginated with batches of 10.
          required: false
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          description: Optional parameter. Defines the number of results to be fetched for the current page. If not specified default value configured in system settings will be considered.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
              example: |-
                { "result": [
                   {
                      "id": "fef45c9c-ddfb-4cae-a10a-e23213687c3e",
                      "name": "Swagger Petstore",
                      "type": "REST",
                      "accessToken": "OAuth2,APIKey",
                      "version": "1.0.0",
                      "icon": "4cd95998-0ba3-4c8e-a4aa-543a82aac0ce",
                      "systemVersion": "1.0",
                      "versionFamilyRef": "c53a7e34-6b93-4d33-a34f-786dd46f367b",
                      "communities": [
                          "3bdf8005-5685-3ef5-b132-de4681963fb6"
                      ],
                      "tags": [
                          "pet"
                      ],
                      "endPoints": [
                          {
                              "name": "https://petstore.swagger.io/v2",
                              "baseUrl": "https://petstore.swagger.io/v2",
                              "properties": [
                                  {
                                      "name": "xAPIKeyHeader",
                                      "key": "xAPIKeyHeader",
                                      "value": "api_key"
                                  }
                              ]
                          },
                          {
                              "name": "http://petstore.swagger.io/v2",
                              "baseUrl": "http://petstore.swagger.io/v2",
                              "properties": [
                                  {
                                      "name": "xAPIKeyHeader",
                                      "key": "xAPIKeyHeader",
                                      "value": "api_key"
                                  }
                              ]
                          }
                      ],
                      "attachments": [
                          {
                              "name": "Swagger_Petstore.yaml",
                              "uri": "08b9f7ab-51c6-43a5-b746-7910c8a00582"
                          }
                      ],
                      "policies": [
                          {
                              "name": "petstore_auth",
                              "description": "<pre>!!io.swagger.models.auth.OAuth2Definition\nauthorizationUrl: http://petstore.swagger.io/oauth/dialog\ndescription: null\nflow: implicit\nscopes:\n  write:pets: modify pets in your account\n  read:pets: read your pets\ntokenUrl: null\ntype: oauth2\nvendorExtensions: {\n  }\n</pre>"
                          },
                          {
                              "name": "api_key",
                              "description": "<pre>!!io.swagger.models.auth.ApiKeyAuthDefinition\ndescription: null\nin: HEADER\nname: api_key\ntype: apiKey\nvendorExtensions: {\n  }\n</pre>"
                          }
                      ],
                      "properties": [
                          {
                              "name": "Contact Email",
                              "key": "Contact Email",
                              "value": "apiteam@swagger.io",
                              "type": "STRING"
                          },
                          {
                              "name": "External Document Description",
                              "key": "External Document Description",
                              "value": "Find out more about Swagger",
                              "type": "STRING"
                          },
                          {
                              "name": "Terms Of Service",
                              "key": "Terms Of Service",
                              "value": "http://swagger.io/terms/",
                              "type": "STRING"
                          },
                          {
                              "name": "License Name",
                              "key": "License Name",
                              "value": "Apache 2.0",
                              "type": "STRING"
                          },
                          {
                              "name": "External Document Url",
                              "key": "External Document Url",
                              "value": "http://swagger.io",
                              "type": "STRING"
                          },
                          {
                              "name": "License URL",
                              "key": "License URL",
                              "value": "http://www.apache.org/licenses/LICENSE-2.0.html",
                              "type": "STRING"
                          }
                      ],
                      "providerRef": "5390f906-1334-44cd-b251-7087f4d4e6ce",
                      "inputContentType": "[]",
                      "outputContentType": "[]",
                      "components": [
                          {
                              "schema": [
                                  {
                                      "name": "Order",
                                      "schema": "{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"petId\":{\"type\":\"integer\",\"format\":\"int64\"},\"quantity\":{\"type\":\"integer\",\"format\":\"int32\"},\"shipDate\":{\"type\":\"string\",\"format\":\"date-time\"},\"status\":{\"type\":\"string\",\"description\":\"Order Status\",\"enum\":[\"placed\",\"approved\",\"delivered\"]},\"complete\":{\"type\":\"boolean\",\"default\":false}},\"xml\":{\"name\":\"Order\"}}",
                                      "description": ""
                                  },
                                  {
                                      "name": "Category",
                                      "schema": "{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"name\":{\"type\":\"string\"}},\"xml\":{\"name\":\"Category\"}}",
                                      "description": ""
                                  },
                                  {
                                      "name": "User",
                                      "schema": "{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"username\":{\"type\":\"string\"},\"firstName\":{\"type\":\"string\"},\"lastName\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"password\":{\"type\":\"string\"},\"phone\":{\"type\":\"string\"},\"userStatus\":{\"type\":\"integer\",\"format\":\"int32\",\"description\":\"User Status\"}},\"xml\":{\"name\":\"User\"}}",
                                      "description": ""
                                  },
                                  {
                                      "name": "Tag",
                                      "schema": "{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"name\":{\"type\":\"string\"}},\"xml\":{\"name\":\"Tag\"}}",
                                      "description": ""
                                  },
                                  {
                                      "name": "Pet",
                                      "schema": "{\"type\":\"object\",\"required\":[\"name\",\"photoUrls\"],\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"category\":{\"$ref\":\"#/definitions/Category\",\"originalRef\":\"#/definitions/Category\"},\"name\":{\"type\":\"string\",\"example\":\"doggie\"},\"photoUrls\":{\"type\":\"array\",\"xml\":{\"name\":\"photoUrl\",\"wrapped\":true},\"items\":{\"type\":\"string\"}},\"tags\":{\"type\":\"array\",\"xml\":{\"name\":\"tag\",\"wrapped\":true},\"items\":{\"$ref\":\"#/definitions/Tag\",\"originalRef\":\"#/definitions/Tag\"}},\"status\":{\"type\":\"string\",\"description\":\"pet status in the store\",\"enum\":[\"available\",\"pending\",\"sold\"]}},\"xml\":{\"name\":\"Pet\"}}",
                                      "description": ""
                                  },
                                  {
                                      "name": "ApiResponse",
                                      "schema": "{\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"integer\",\"format\":\"int32\"},\"type\":{\"type\":\"string\"},\"message\":{\"type\":\"string\"}}}",
                                      "description": ""
                                  }
                              ]
                          }
                      ],
                      "resourceIds": [
                          "bef97b8d-fb7c-4bfc-bcfb-176077c79352"
                      ],
                      "hybridAPI": false,
                      "protected": true,
                      "secured": true,
                      "summary": "This is a sample server Petstore server.",
                      "description": "This is a sample server Petstore server.",
                      "externalRefKey": "71a172a4-ac3f-457f-a150-82e704242c0e"
                    }
                  ],
                    "count": 1,
                    "_links" : {
                        "_self": "rest/v1/apis?page=0"
                    }
                }
        '403':
          $ref: '#/components/responses/Forbidden'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      summary: Publish an API to an APIPortal
      description: |-
        Endpoint to publish an API to an API Portal. API can be imported in following ways,
          - Import API using the Swagger/OpeanAPI/RAML/WSDL file
            ![Import using file!](/public/assets/images/publish_api_file.jpg)
          - Import API using the external URL API Definition
            ![Import using url!](/public/assets/images/publish_api_url.jpg)
          - Import API using the API Definition
            ![Import using content!](/public/assets/images/publish_api_content.jpg)

        *Endpoint can be accessed only by a user having **Administrator** or **Provider** role*
      requestBody:
        content:
          multipart/formdata:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of an API can be provided, this will override the name in API Definition
                  example: Pet store
                tenant:
                  type: string
                  description: Tenant to which the API needs to be published. If the parameter is not provided then based upon user session tenant will be decided.
                  example: default
                data:
                  type: string
                  description: API definition file in binary format
                api-content:
                  type: string
                  description: API Definition in Swagger/OpenAPI/RAML/WSDL format. This parameter is used for inline API publish
                url:
                  type: string
                  description: URL of API Definition in Swagger/OpenAPI/RAML/WSDL format
                  example: https://petstore.swagger.io/v2/swagger.json
                root-file:
                  type: string
                  description: If an zip file containing API definitions is been used for publishing then the root file name needs to be provided.
                version:
                  type: string
                  description: Represent current version of the API
                versionof:
                  type: string
                  description: Represent Version family of APIs
            examples:
              Publish API using URL:
                value: |-
                  ------WebKitFormBoundaryW3ScWDgMrYIFpLVZ
                  Content-Disposition: form-data; name="name"

                  Pet
                  ------WebKitFormBoundaryW3ScWDgMrYIFpLVZ
                  Content-Disposition: form-data; name="url"

                  https://petstore.swagger.io/v2/swagger.json
                  ------WebKitFormBoundaryW3ScWDgMrYIFpLVZ--
              Publish API using Inline content:
                value: |-
                  ------WebKitFormBoundarypaYOOLBaB3Dn59rP
                  Content-Disposition: form-data; name="name"

                  InlineAPI
                  ------WebKitFormBoundarypaYOOLBaB3Dn59rP
                  Content-Disposition: form-data; name="api-content"

                  {
                    "swagger" : "2.0",
                    "info" : {
                      "version" : "1.0",
                      "title" : "HTTPBin_Format_API"
                    },
                    "host" : "httpbin.org",
                    "basePath" : "/",
                    "schemes" : [ "http" ],
                    "paths" : {
                      "/xml" : {
                        "get" : {
                          "consumes" : [ ],
                          "parameters" : [ ]
                        }
                      },
                      "/json" : {
                        "get" : {
                          "consumes" : [ ],
                          "parameters" : [ ]
                        }
                      }
                    }
                  }
                  ------WebKitFormBoundarypaYOOLBaB3Dn59rP--
              Publish API using the file:
                value: |-
                  ------WebKitFormBoundaryOBl7vP7ee7F5cESA
                  Content-Disposition: form-data; name="name"

                  FileImport
                  ------WebKitFormBoundaryOBl7vP7ee7F5cESA
                  Content-Disposition: form-data; name="version"

                  1.0
                  ------WebKitFormBoundaryOBl7vP7ee7F5cESA
                  Content-Disposition: form-data; name="data"; filename="HTTPBin_Format_API.json"
                  Content-Type: application/json


                  ------WebKitFormBoundaryOBl7vP7ee7F5cESA--

      parameters:
        - name: type
          in: query
          description: Type of an API that is being published
          required: true
          allowEmptyValue: false
          schema:
            type: string
            enum:
              - swagger
              - raml
              - wsdl
              - openapi
        - name: async
          in: query
          description: Defines whether the API needs to be published synchronously or asynchronously. By default the API will be published asynchronously.
          required: false
          allowEmptyValue: false
          schema:
            type: boolean
            enum:
              - true
              - false
        - name: locale
          in: query
          description: The language of an API definition can be provided. By default 'English' would be considered.
          required: false
          allowEmptyValue: false
          example: en
          schema:
            type: string
        - name: providerid
          in: query
          description: GUID of provider to which the API to be associated
          required: false
          allowEmptyValue: false
          example: 3bdf8005-5685-3ef5-b132-de4681963fb6
          schema:
            type: string
        - name: communities
          in: query
          description: GUID of communities to which the API to be associated
          required: false
          allowEmptyValue: false
          example: 3bdf8005-5685-3ef5-b132-de4681963fb6, 63df8005-5685-3ef5-b132-de4681963fb6
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  processedCount:
                    type: integer
                  pendingCount:
                    type: integer
                  skippedCount:
                    type: integer
                  message:
                    type: string
                  status:
                    type: string
                  fileSize:
                    type: integer
                  elapsedTime:
                    type: integer
              examples:
                async:
                  value:
                    id: 83d0b5e7-5f70-47e2-b89e-883f4857f056
                    processedCount: 0
                    pendingCount: 0
                    skippedCount: 0
                    message: Parsing Source File
                    status: PARSING
                    fileSize: 0
                    elapsedTime: 0
                sync:
                  value:
                    id: c98d046b-1356-4216-8904-d89035ea66df
                    _self: /rest/v1/apis/c98d046b-1356-4216-8904-d89035ea66df
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                400:
                  $ref: '#/components/examples/400'

  '/apis/_count':
    get:
      summary: Retrieve the count of APIs in API Portal
      description: |-
        Endpoint to get the number of APIs available in API Portal
      responses:
        '200':
          description: Retrieval of Count of APIs Successful
          content:
            plain/text:
              example: 10

  '/apis/filter':
    get:
      summary: Retrieve possible filter criterias of an APIs
      description: |-
        Endpoint to get the possible filter values that can be used to search or group an APIs
      parameters:
        - name: tenant
          in: query
          description: Filter values based on the API of the provided tenant will be returned. If the parameter is not provided then based upon user session tenant will be decided.
          required: false
          allowEmptyValue: false
          example: default
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFilter'
              example: |-
                {
                    "categories": [],
                    "maturityStatus": [
                        "Beta"
                    ],
                    "tags": [
                        "Administrative",
                        "Approvals",
                        "API",
                        "events",
                        "Flow"
                    ],
                    "businessTerms": [],
                    "type": [
                        "ODATA",
                        "REST",
                        "SOAP"
                    ]
                }

  '/apis/{id}':
    parameters:
      - $ref: '#/components/parameters/apiId'
    get:
      summary: Retrieve an API by an ID
      description: |-
        Endpoint to obtain details of particular API based on ID

        *Endpoint can be accessed only by a user having **API READ** permission*
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API'
              examples:
                200:
                  $ref: '#/components/examples/API'

        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                updated:
                  summary: Example
                  value:
                    code: 404
                    message: Unable to find the requested API
        '403':
          $ref: '#/components/responses/Forbidden'
        '401':
          $ref: '#/components/responses/Unauthorized'

    put:
      summary: Update an API in API Portal
      description: |-
        Endpoint to re-publish an API to an API Portal. API can be updated in following ways,
          - Update API using the Swagger/OpeanAPI/RAML/WSDL file
            ![Update using file!](/public/assets/images/publish_api_file.jpg)
          - Update API using the external URL API Definition
            ![Update using url!](/public/assets/images/publish_api_url.jpg)
          - Update API using the API Definition
            ![Update using content!](/public/assets/images/publish_api_content.jpg)

        *Endpoint can be accessed only by a user having **Administrator** or **Provider** role*
      parameters:
        - name: type
          in: query
          description: Type of an API that is being published
          required: true
          allowEmptyValue: false
          schema:
            type: string
            enum:
              - swagger
              - raml
              - wsdl
              - openapi
        - name: async
          in: query
          description: Defines whether the API needs to be published synchronously or asynchronously. By default the API will be published asynchronously.
          required: false
          allowEmptyValue: false
          schema:
            type: boolean
            enum:
              - true
              - false
        - name: locale
          in: query
          description: The language of an API definition can be provided. By default 'English' would be considered.
          required: false
          allowEmptyValue: false
          example: en
          schema:
            type: string
        - name: providerid
          in: query
          description: GUID of provider to which the API to be associated
          required: false
          allowEmptyValue: false
          example: 3bdf8005-5685-3ef5-b132-de4681963fb6
          schema:
            type: string
        - name: communities
          in: query
          description: GUID of communities to which the API to be associated
          required: false
          allowEmptyValue: false
          example: 3bdf8005-5685-3ef5-b132-de4681963fb6, 63df8005-5685-3ef5-b132-de4681963fb6
          schema:
            type: string
      requestBody:
        content:
          multipart/formdata:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of an API can be provided, this will override the name in API Definition
                  example: Pet store
                tenant:
                  type: string
                  description: Tenant to which the API needs to be published. If the parameter is not provided then based upon user session tenant will be decided.
                  example: default
                data:
                  type: string
                  description: API definition file in binary format
                api-content:
                  type: string
                  description: API Definition in Swagger/OpenAPI/RAML/WSDL format. This parameter is used for inline API publish
                url:
                  type: string
                  description: URL of API Definition in Swagger/OpenAPI/RAML/WSDL format
                  example: https://petstore.swagger.io/v2/swagger.json
                root-file:
                  type: string
                  description: If an zip file containing API definitions is been used for publishing then the root file name needs to be provided.
                version:
                  type: string
                  description: Represent current version of the API
                versionof:
                  type: string
                  description: Represent Version family of APIs
            examples:
              Publish API using URL:
                value: |-
                  ------WebKitFormBoundaryW3ScWDgMrYIFpLVZ
                  Content-Disposition: form-data; name="name"

                  Pet
                  ------WebKitFormBoundaryW3ScWDgMrYIFpLVZ
                  Content-Disposition: form-data; name="url"

                  https://petstore.swagger.io/v2/swagger.json
                  ------WebKitFormBoundaryW3ScWDgMrYIFpLVZ--
              Publish API using Inline content:
                value: |-
                  ------WebKitFormBoundarypaYOOLBaB3Dn59rP
                  Content-Disposition: form-data; name="name"

                  InlineAPI
                  ------WebKitFormBoundarypaYOOLBaB3Dn59rP
                  Content-Disposition: form-data; name="api-content"

                  {
                    "swagger" : "2.0",
                    "info" : {
                      "version" : "1.0",
                      "title" : "HTTPBin_Format_API"
                    },
                    "host" : "httpbin.org",
                    "basePath" : "/",
                    "schemes" : [ "http" ],
                    "paths" : {
                      "/xml" : {
                        "get" : {
                          "consumes" : [ ],
                          "parameters" : [ ]
                        }
                      },
                      "/json" : {
                        "get" : {
                          "consumes" : [ ],
                          "parameters" : [ ]
                        }
                      }
                    }
                  }
                  ------WebKitFormBoundarypaYOOLBaB3Dn59rP--
              Publish API using the file:
                value: |-
                  ------WebKitFormBoundaryOBl7vP7ee7F5cESA
                  Content-Disposition: form-data; name="name"

                  FileImport
                  ------WebKitFormBoundaryOBl7vP7ee7F5cESA
                  Content-Disposition: form-data; name="version"

                  1.0
                  ------WebKitFormBoundaryOBl7vP7ee7F5cESA
                  Content-Disposition: form-data; name="data"; filename="HTTPBin_Format_API.json"
                  Content-Type: application/json


                  ------WebKitFormBoundaryOBl7vP7ee7F5cESA--
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  processedCount:
                    type: integer
                  pendingCount:
                    type: integer
                  skippedCount:
                    type: integer
                  message:
                    type: string
                  status:
                    type: string
                  fileSize:
                    type: integer
                  elapsedTime:
                    type: integer
              examples:
                async:
                  value:
                    id: 83d0b5e7-5f70-47e2-b89e-883f4857f056
                    processedCount: 0
                    pendingCount: 0
                    skippedCount: 0
                    message: Parsing Source File
                    status: PARSING
                    fileSize: 0
                    elapsedTime: 0
                sync:
                  $ref: '#/components/examples/API'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                400:
                  $ref: '#/components/examples/400'

    delete:
      summary: Unpublish an API by an ID
      description: |-
        Endpoint to un-publish/delete an API from an API Portal.

        *Endpoint can be accessed only by a user having **Administrator** or **Provider** role*
      responses:
        '204':
          description: 'No content'

        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                updated:
                  summary: Example
                  value:
                    code: 404
                    message: Unable to find the requested API

  '/apis/available':
    get:
      summary: Retrieve the APIs to be linked to an API Provider
      description: |-
        Endpoint to obtain list of APIs that can be linked to an API Provider

        *Endpoint can be accessed only by a user having **Administrator** or **Provider** role*
      parameters:
        - name: page
          in: query
          description: Optional parameter. Defines the page number to be retrieved for the collection. If not specified default value 0 is assumed. By default collection responses are paginated with batches of 10.
          required: false
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          description: Optional parameter. Defines the number of results to be fetched for the current page. If not specified default value configured in system settings will be considered.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved the APIs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
              example: |-
                {
                  "result": [
                      {
                          "id": "a7f0f278-5620-4c0e-b1d2-052fd9585843",
                          "name": "Import API",
                          "icon": {
                              "url": "/public/assets/images/rest-api-icon.svg",
                              "type": "INTERNAL"
                          },
                          "version": "1.0",
                          "type": "REST",
                          "externalRefKey": "71ac978f-e665-4061-bddb-79338f76faba"
                      },
                      {
                          "id": "d21466d7-f4e1-46e9-93de-3323a594a656",
                          "name": "Portal Approval API",
                          "summary": "API to manage workflow in portal. List of available operations are as follows\n- Create, update and list a flow\n- List available approval flows in Portal\n- List available pending approval requests\n- Approve/Reject approval request",
                          "icon": {
                              "url": "/public/assets/images/rest-api-icon.svg",
                              "type": "INTERNAL"
                          },
                          "version": "10.11",
                          "type": "REST",
                          "externalRefKey": "8d59eb88-8a9b-4c41-8c38-e670db725038"
                      }
                  ],
                  "count": 2,
                  "_links": {
                      "_self": "/rest/v1/apis/available?page=0"
                  }
                }

  '/apis/{id}/communities':
    parameters:
      - $ref: '#/components/parameters/apiId'
    get:
      summary: 'Get Communities linked with the API'
      description: |-
        Endpoint to obtain list of communites that are linked with an API

        *Endpoint can be accessed only by a user having **Administrator** or **Provider** role*
      responses:
        '200':
          $ref: '#/components/responses/Community'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                updated:
                  summary: Example
                  value:
                    code: 404
                    message: Unable to find the requested API
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  '/apis/{id}/topics':
    parameters:
      - $ref: '#/components/parameters/apiId'
      - name: page
        in: query
        description: Optional parameter. Defines the page number to be retrieved for the collection. If not specified default value 0 is assumed. By default collection responses are paginated with batches of 10.
        required: false
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Optional parameter. Defines the number of results to be fetched for the current page. If not specified default value configured in system settings will be considered.
        required: false
        schema:
          type: integer
    get:
      summary: Get Topics linked with the API
      description: |-
        Endpoint to obtain list of topics that are linked with an API

        *Endpoint can be accessed only by a user having **API READ** permission*
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponseTopics'
              examples:
                200:
                  $ref: '#/components/examples/SearchResponseTopicSummary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                updated:
                  summary: Example
                  value:
                    code: 404
                    message: Unable to find the requested API

  '/apis/{id}/applications':
    parameters:
      - $ref: '#/components/parameters/apiId'
      - name: page
        in: query
        description: Optional parameter. Defines the page number to be retrieved for the collection. If not specified default value 0 is assumed. By default collection responses are paginated with batches of 10.
        required: false
        schema:
          type: integer
          default: 0
    get:
      summary: Get Applications linked with the API
      description: |-
        Endpoint to obtain list of applications that are linked with an API

      responses:
        '200':
          $ref: '#/components/responses/Application'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                updated:
                  summary: Example
                  value:
                    code: 404
                    message: Unable to find the requested API

  '/apis/{id}/subscriptions':
    parameters:
      - $ref: '#/components/parameters/apiId'
      - name: page
        in: query
        description: Optional parameter. Defines the page number to be retrieved for the collection. If not specified default value 0 is assumed. By default collection responses are paginated with batches of 10.
        required: false
        schema:
          type: integer
          default: 0
      - name: status
        in: query
        description: Optional parameter. Query based on the status of subscription. Default value is LIVE
        required: false
        schema:
          type: string
          default: LIVE
    get:
      summary: Get Subscriptions linked with the API
      description: |-
        Endpoint to obtain list of subscriptions that are linked with an API

      responses:
        '200':
          $ref: '#/components/responses/Subscriptions'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                updated:
                  summary: Example
                  value:
                    code: 404
                    message: Unable to find the requested API

  '/apis/{id}/versions':
    parameters:
      - $ref: '#/components/parameters/apiId'
    get:
      summary: 'Get versions of the API'
      description: |-
        Endpoint to obtain list of versions of an API
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APISummary'
              example:
                - id: d6376456-9d08-4a3e-b44d-7f40bb206d51
                  name: HTTPBin_Format_API
                  summary: ''
                  icon:
                    url: /public/assets/images/rest-api-icon.svg
                    type: INTERNAL
                  version: '1.0'
                  type: REST
                  externalRefKey: a76728ed-f760-4fff-a4b6-993b99356d07

        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                updated:
                  summary: Example
                  value:
                    code: 404
                    message: Unable to find the requested API
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  '/apis/{id}/stages':
    parameters:
      - $ref: '#/components/parameters/apiId'

    get:
      summary: 'Get stages of the API'
      description: |-
        Endpoint to obtain different stages of an API
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APISummary'
              example:
                - id: d6376456-9d08-4a3e-b44d-7f40bb206d51
                  name: HTTPBin_Format_API
                  summary: ''
                  icon:
                    url: /public/assets/images/rest-api-icon.svg
                    type: INTERNAL
                  version: '1.0'
                  type: REST
                  stage: API Portal Dev
                  externalRefKey: a76728ed-f760-4fff-a4b6-993b99356d07
                - id: d6376456-9d08-4a3e-b44d-7f40bb206d51
                  name: HTTPBin_Format_API
                  summary: ''
                  icon:
                    url: /public/assets/images/rest-api-icon.svg
                    type: INTERNAL
                  version: '1.0'
                  type: REST
                  stage: API Portal QA
                  externalRefKey: a76728ed-f760-4fff-a4b6-993b99356d07

        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                updated:
                  summary: Example
                  value:
                    code: 404
                    message: Unable to find the requested API
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  '/api/{id}/followers':
    parameters:
      - $ref: '#/components/parameters/apiId'
      - name: page
        in: query
        description: Optional parameter. Defines the page number to be retrieved for the collection. If not specified default value 0 is assumed. By default collection responses are paginated with batches of 10.
        required: false
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Optional parameter. Defines the number of results to be fetched for the current page. If not specified default value configured in system settings will be considered.
        required: false
        schema:
          type: integer
          default: 0
    get:
      summary: Get followers of an API
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        firstname:
                          type: string
                        lastname:
                          type: string
                        picture:
                          type: string
                        id:
                          type: string
                  count:
                    type: number
                  links:
                    type: object
                    properties:
                      _self:
                        type: string
                      _next:
                        type: string
                      _previous:
                        type: string
              examples:
                Followers:
                  value:
                    result:
                      - id: 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
                        firstname: Administrator
                        lastname: System
                        pictureUrl: null
                    count: 1
                    _links:
                      _self: /rest/v1/apis/0938f456-d34f-49ea-8a32-dc72ee13a8a3/followers?page=0
      description: |-
        Endpoint to obtain followers list of an API
    put:
      summary: Follow/ Un-Follow API
      description: |-
        Endpoint to follow or unfollow an API

      responses:
        '200':
          description: 'The response when the follow/ un-follow is successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdationResponse'
              examples:
                updated:
                  summary: Example
                  value:
                    code: 200
                    message: Follow entity successful

        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: 'The response when the requested API is not found in API Portal'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                updated:
                  summary: Example
                  value:
                    code: 404
                    message: Unable to find the API with id [fefcfc8f-0a77-4976-b5aasd4-eeaa53884f3b]

  '/apis/{id}/packages':
    parameters:
      - $ref: '#/components/parameters/apiId'
      - name: page
        in: query
        description: Optional parameter. Defines the page number to be retrieved for the collection. If not specified default value 0 is assumed. By default collection responses are paginated with batches of 10.
        required: false
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Optional parameter. Defines the number of results to be fetched for the current page. If not specified default value configured in system settings will be considered.
        required: false
        schema:
          type: integer
    get:
      summary: 'Get packages linked with the API'
      description: |-
        Endpoint to obtain list of communites that are linked with an API

        *Endpoint can be accessed only by a user having **API READ** permission*
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponsePackage'
              examples:
                200:
                  $ref: '#/components/examples/SearchResponsePackageSummary'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                updated:
                  summary: Example
                  value:
                    code: 404
                    message: Unable to find the requested API
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  '/apis/{id}/groups':
    parameters:
      - $ref: '#/components/parameters/apiId'
    get:
      summary: 'Get API methods by group'
      description: |-
        Endpoint to obtain methods of an API segregated by groups

        *Endpoint can be accessed only by a user having **API READ** permission*
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Groups'
              examples:
                200:
                  $ref: '#/components/examples/Groups'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                updated:
                  summary: Example
                  value:
                    code: 404
                    message: Unable to find the requested API
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  '/apis/{id}/applications/available':
    parameters:
      - $ref: '#/components/parameters/apiId'
      - name: page
        in: query
        description: Optional parameter. Defines the page number to be retrieved for the collection. If not specified default value 0 is assumed. By default collection responses are paginated with batches of 10.
        required: false
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Optional parameter. Defines the number of results to be fetched for the current page. If not specified default value configured in system settings will be considered.
        required: false
        schema:
          type: integer
    get:
      summary: Get Applications that can be linked with the API
      description: |-
        Endpoint to obtain list of applications that can be linked with an API

      responses:
        '200':
          $ref: '#/components/responses/Application'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                updated:
                  summary: Example
                  value:
                    code: 404
                    message: Unable to find the requested API

  '/apis/{id}/rate':
    parameters:
      - $ref: '#/components/parameters/apiId'
    put:
      summary: Rate an API
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RatingRequest'
            examples:
              RatingRequest:
                $ref: '#/components/examples/RatingRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingResponse'
              examples:
                RatingResponse:
                  $ref: '#/components/examples/RatingResponse'
      description: |-
        Endpoint to rate an API

        *Endpoint can be accessed only by a user having **API READ** permission*
    get:
      summary: Get the rating for an API
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingResponse'
              examples:
                RatingResponse:
                  $ref: '#/components/examples/RatingResponse'
      description: |-
        Endpoint to get rating of an API

        *Endpoint can be accessed only by a user having **API READ** permission*

  '/apis/{id}/followers/_count':
    parameters:
      - $ref: '#/components/parameters/apiId'
    get:
      summary: Retrieve the count of followers for an API
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: number
                description: Number of followers in the API
              example:
                3
      description: |-
        Endpoint to get the number of followers fo an API

  '/apis/{id}/bookmarks':
    parameters:
      - $ref: '#/components/parameters/apiId'
      - name: page
        in: query
        description: Optional parameter. Defines the page number to be retrieved for the collection. If not specified default value 0 is assumed. By default collection responses are paginated with batches of 10.
        required: false
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Optional parameter. Defines the number of results to be fetched for the current page. If not specified default value configured in system settings will be considered.
        required: false
        schema:
          type: integer
    get:
      summary: Get bookmarked topics linked with the API
      description: |-
        Endpoint to obtain list of bookmarked topics that are linked with an API

        *Endpoint can be accessed only by a user having **API READ** permission*
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponseTopics'
              examples:
                200:
                  $ref: '#/components/examples/SearchResponseTopicSummary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                updated:
                  summary: Example
                  value:
                    code: 404
                    message: Unable to find the requested API

  '/apis/{id}/try':
    parameters:
      - $ref: '#/components/parameters/apiId'
    post:
      summary: Test an API
      description: |-
        Endpoint to test the resource or operation of an API

        *Endpoint can be accessed only by a user having **API READ** permission*
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TryAPIRequest'
            examples:
              SOAPTryRequest:
                $ref: '#/components/examples/SOAPTryRequest'
              RestTryRequest:
                $ref: '#/components/examples/RestTryRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TryAPIResponse'
              examples:
                TryAPIResponse:
                  $ref: '#/components/examples/TryAPIResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  '/apis/{id}/fileTypeTry':
    parameters:
      - $ref: '#/components/parameters/apiId'
      - $ref: '#/components/parameters/tryendpoint'
    post:
      summary: To test the multipart or binary type resources of API
      description: |-
        Endpoint to test the multipart or binary type resourcesof an API

        *Endpoint can be accessed only by a user having **API READ** permission*
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              additionalProperties: true
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TryAPIResponse'
              examples:
                TryAPIResponse:
                  $ref: '#/components/examples/TryAPIResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  '/apis/{id}/try/history':
    parameters:
      - $ref: '#/components/parameters/apiId'
    get:
      summary: Get tryout history
      description: |-
        Endpoint to get the history of tryout conducted for an API

        *Endpoint can be accessed only by a user having **API READ** permission*
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponseAudits'
              example: |-
                {
                  "result": [
                    {
                      "id": "d2fe3af8-236d-41d5-8178-f47f44518c00",
                      "parameters": {
                        "api_id": "29d04ad2-35c5-4c4b-aa3b-bf363557ea39",
                        "try_out_response": {
                          "headers": {
                            "Cache-Control": [
                              "max-age=0"
                            ],
                            "Server": [
                              "Microsoft-IIS/7.5"
                            ],
                            "X-AspNet-Version": [
                              "2.0.50727"
                            ],
                            "Content-Length": [
                              "326"
                            ],
                            "Date": [
                              "25 Jun 2020 07:31:09 GMT"
                            ],
                            "Content-Type": [
                              "text/xml; charset=utf-8"
                            ],
                            "X-Powered-By": [
                              "ASP.NET"
                            ]
                          },
                          "response": {
                            "type": "TEXT",
                            "response": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"><soap:Body><AddResponse xmlns=\"http://tempuri.org/\"><AddResult>29</AddResult></AddResponse></soap:Body></soap:Envelope>",
                            "contentType": null
                          },
                          "status": {
                            "code": 200,
                            "reason": "OK"
                          },
                          "metrics": {
                            "time": 2851,
                            "ip": null,
                            "context": null
                          }
                        },
                        "source": "RequestHandler",
                        "user": "200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4",
                        "try_out_request": {
                          "type": "SOAP",
                          "operation": "SOAP11",
                          "endpoint": "http://dneonline.com/calculator.asmx",
                          "headers": {
                            "SOAPAction": "http://tempuri.org/Add"
                          },
                          "body": {
                            "request_type": "SOAP",
                            "payload": "<Add xmlns=\"http://tempuri.org/\"> <intA>10</intA> <intB>19</intB> </Add>",
                            "namespaceUri": {
                              "tem": "http://tempuri.org"
                            },
                            "security": {
                              "wssUserToken": null
                            }
                          },
                          "startTime": 1593070268215,
                          "endTime": 1593070271066,
                          "method": null
                        }
                      },
                      "type": "API_TRY_EVENT"
                    }
                  ],
                  "count": 1,
                  "_links": {
                    "_self": "rest/v1/apis?page=0"
                  }
                }
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                updated:
                  summary: Example
                  value:
                    code: 404
                    message: Unable to find the requested API

  '/apis/status/{referenceId}':
    get:
      summary: ' Get Publish status of an API'
      description: |-
        Endpoint to obtain publish status of an API using the reference ID

        *Endpoint can be accessed only by a user having **ADMINISTRATOR** or **PROVIDER** role*
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
              examples:
                Success:
                  value:
                    id: 91c770f3-af28-4f04-8945-93af832c2019
                    processed: 1
                    pending: 0
                    message: Import completed
                    status: SUCCEEDED
                    successes:
                      6807a792-17f0-4120-8266-11a542dfed6d: Calculator
                Parsing:
                  value:
                    id: 0c30b9ae-8162-4b5f-8e77-8e9b561a1744
                    processed: 0
                    pending: 0
                    message: Parsing Source File
                    status: PARSING


        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                updated:
                  summary: Example
                  value:
                    code: 404
                    message: Unable to find the requested API
    parameters:
      - name: referenceId
        in: path
        required: true
        allowEmptyValue: false
        schema:
          type: string

  '/apis/search':
    post:
      parameters:
        - name: page
          in: query
          description: Optional parameter. Defines the page number to be retrieved for the collection. If not specified default value 0 is assumed. By default collection responses are paginated with batches of 10.
          required: false
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          description: Optional parameter. Defines the number of results to be fetched for the current page. If not specified default value configured in system settings will be considered.
          required: false
          schema:
            type: integer
      summary: Search APIs based on filter
      description: |-
        Endpoint to obtain search API based on the filter criterias

        *Endpoint can be accessed only by a user having **API READ** permission*
      requestBody:
        description: Payload for search
        content:
          application/json:
            schema:
              type: object
              properties:
                conjuction:
                  type: string
                  description: Condition for filters
                  enum:
                    - AND
                    - OR
                    - NOT
                    - MUST_NOT
                criterias:
                  type: array
                  items:
                    type: object
                    properties:
                      field:
                        type: string
                      values:
                        type: array
                        items:
                          type: string
                      opertaion:
                        type: string
                        enum:
                          - CONTAINS
                          - EQUALS
                sort:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      order:
                        type: string
                        enum:
                          - ASC
                          - DSC
            examples:
              SearchPayload:
                value:
                  conjunction: AND
                  criterias:
                    - field: apitype
                      values:
                        - REST
                      operation: EQUALS
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
              example: |-
                { "result": [
                   {
                      "id": "fef45c9c-ddfb-4cae-a10a-e23213687c3e",
                      "name": "Swagger Petstore",
                      "type": "REST",
                      "accessToken": "OAuth2,APIKey",
                      "version": "1.0.0",
                      "icon": "4cd95998-0ba3-4c8e-a4aa-543a82aac0ce",
                      "systemVersion": "1.0",
                      "versionFamilyRef": "c53a7e34-6b93-4d33-a34f-786dd46f367b",
                      "communities": [
                          "3bdf8005-5685-3ef5-b132-de4681963fb6"
                      ],
                      "tags": [
                          "pet"
                      ],
                      "endPoints": [
                          {
                              "name": "https://petstore.swagger.io/v2",
                              "baseUrl": "https://petstore.swagger.io/v2",
                              "properties": [
                                  {
                                      "name": "xAPIKeyHeader",
                                      "key": "xAPIKeyHeader",
                                      "value": "api_key"
                                  }
                              ]
                          },
                          {
                              "name": "http://petstore.swagger.io/v2",
                              "baseUrl": "http://petstore.swagger.io/v2",
                              "properties": [
                                  {
                                      "name": "xAPIKeyHeader",
                                      "key": "xAPIKeyHeader",
                                      "value": "api_key"
                                  }
                              ]
                          }
                      ],
                      "attachments": [
                          {
                              "name": "Swagger_Petstore.yaml",
                              "uri": "08b9f7ab-51c6-43a5-b746-7910c8a00582"
                          }
                      ],
                      "policies": [
                          {
                              "name": "petstore_auth",
                              "description": "<pre>!!io.swagger.models.auth.OAuth2Definition\nauthorizationUrl: http://petstore.swagger.io/oauth/dialog\ndescription: null\nflow: implicit\nscopes:\n  write:pets: modify pets in your account\n  read:pets: read your pets\ntokenUrl: null\ntype: oauth2\nvendorExtensions: {\n  }\n</pre>"
                          },
                          {
                              "name": "api_key",
                              "description": "<pre>!!io.swagger.models.auth.ApiKeyAuthDefinition\ndescription: null\nin: HEADER\nname: api_key\ntype: apiKey\nvendorExtensions: {\n  }\n</pre>"
                          }
                      ],
                      "properties": [
                          {
                              "name": "Contact Email",
                              "key": "Contact Email",
                              "value": "apiteam@swagger.io",
                              "type": "STRING"
                          },
                          {
                              "name": "External Document Description",
                              "key": "External Document Description",
                              "value": "Find out more about Swagger",
                              "type": "STRING"
                          },
                          {
                              "name": "Terms Of Service",
                              "key": "Terms Of Service",
                              "value": "http://swagger.io/terms/",
                              "type": "STRING"
                          },
                          {
                              "name": "License Name",
                              "key": "License Name",
                              "value": "Apache 2.0",
                              "type": "STRING"
                          },
                          {
                              "name": "External Document Url",
                              "key": "External Document Url",
                              "value": "http://swagger.io",
                              "type": "STRING"
                          },
                          {
                              "name": "License URL",
                              "key": "License URL",
                              "value": "http://www.apache.org/licenses/LICENSE-2.0.html",
                              "type": "STRING"
                          }
                      ],
                      "providerRef": "5390f906-1334-44cd-b251-7087f4d4e6ce",
                      "inputContentType": "[]",
                      "outputContentType": "[]",
                      "components": [
                          {
                              "schema": [
                                  {
                                      "name": "Order",
                                      "schema": "{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"petId\":{\"type\":\"integer\",\"format\":\"int64\"},\"quantity\":{\"type\":\"integer\",\"format\":\"int32\"},\"shipDate\":{\"type\":\"string\",\"format\":\"date-time\"},\"status\":{\"type\":\"string\",\"description\":\"Order Status\",\"enum\":[\"placed\",\"approved\",\"delivered\"]},\"complete\":{\"type\":\"boolean\",\"default\":false}},\"xml\":{\"name\":\"Order\"}}",
                                      "description": ""
                                  },
                                  {
                                      "name": "Category",
                                      "schema": "{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"name\":{\"type\":\"string\"}},\"xml\":{\"name\":\"Category\"}}",
                                      "description": ""
                                  },
                                  {
                                      "name": "User",
                                      "schema": "{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"username\":{\"type\":\"string\"},\"firstName\":{\"type\":\"string\"},\"lastName\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"password\":{\"type\":\"string\"},\"phone\":{\"type\":\"string\"},\"userStatus\":{\"type\":\"integer\",\"format\":\"int32\",\"description\":\"User Status\"}},\"xml\":{\"name\":\"User\"}}",
                                      "description": ""
                                  },
                                  {
                                      "name": "Tag",
                                      "schema": "{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"name\":{\"type\":\"string\"}},\"xml\":{\"name\":\"Tag\"}}",
                                      "description": ""
                                  },
                                  {
                                      "name": "Pet",
                                      "schema": "{\"type\":\"object\",\"required\":[\"name\",\"photoUrls\"],\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"category\":{\"$ref\":\"#/definitions/Category\",\"originalRef\":\"#/definitions/Category\"},\"name\":{\"type\":\"string\",\"example\":\"doggie\"},\"photoUrls\":{\"type\":\"array\",\"xml\":{\"name\":\"photoUrl\",\"wrapped\":true},\"items\":{\"type\":\"string\"}},\"tags\":{\"type\":\"array\",\"xml\":{\"name\":\"tag\",\"wrapped\":true},\"items\":{\"$ref\":\"#/definitions/Tag\",\"originalRef\":\"#/definitions/Tag\"}},\"status\":{\"type\":\"string\",\"description\":\"pet status in the store\",\"enum\":[\"available\",\"pending\",\"sold\"]}},\"xml\":{\"name\":\"Pet\"}}",
                                      "description": ""
                                  },
                                  {
                                      "name": "ApiResponse",
                                      "schema": "{\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"integer\",\"format\":\"int32\"},\"type\":{\"type\":\"string\"},\"message\":{\"type\":\"string\"}}}",
                                      "description": ""
                                  }
                              ]
                          }
                      ],
                      "resourceIds": [
                          "bef97b8d-fb7c-4bfc-bcfb-176077c79352"
                      ],
                      "hybridAPI": false,
                      "protected": true,
                      "secured": true,
                      "summary": "This is a sample server Petstore server.",
                      "description": "This is a sample server Petstore server.",
                      "externalRefKey": "71a172a4-ac3f-457f-a150-82e704242c0e"
                    }
                  ],
                    "count": 1,
                    "_links" : {
                        "_self": "rest/v1/search?page=0"
                    }
                }
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  '/apis/{id}/export':
    parameters:
      - $ref: '#/components/parameters/apiId'
      - name: type
        in: query
        description: Export format can be specified. The supported types are json and yaml
        required: false
        schema:
          type: string
          default: json
    get:
      summary: 'Export an API'
      description: |-
        Endpoint to export an API

        *Endpoint can be accessed only by a user having **API READ** permission*
      responses:
        '200':
          description: ''
          content:
            application/json:
              example: |-
                {
                  "openapi": "3.0.1",
                  "info": {
                      "title": "HTTPBin_Format_API",
                      "description": "",
                      "version": "1.0"
                  },
                  "servers": [
                      {
                          "url": "http://SAG-56ZNM13:5555/gateway/HTTPBin_Format_API/1.0"
                      }
                  ],
                  "paths": {
                      "/json": {
                          "summary": "",
                          "description": "",
                          "get": {
                              "summary": "",
                              "description": "",
                              "operationId": "GET",
                              "responses": {},
                              "security": [
                                  {}
                              ]
                          }
                      },
                      "/xml": {
                          "summary": "",
                          "description": "",
                          "get": {
                              "summary": "",
                              "description": "",
                              "operationId": "GET",
                              "responses": {},
                              "security": [
                                  {}
                              ]
                          }
                      }
                  },
                  "components": {
                      "securitySchemes": {
                          "x-Gateway-APIKey": {
                              "type": "apiKey",
                              "name": "x-Gateway-APIKey",
                              "in": "header"
                          }
                      }
                  }
                }

            application/x-yaml:
              example: |-
                openapi: 3.0.1
                info:
                  title: HTTPBin_Format_API
                  description: ""
                  version: "1.0"
                servers:
                - url: http://SAG-56ZNM13:5555/gateway/HTTPBin_Format_API/1.0
                paths:
                  /json:
                    summary: ""
                    description: ""
                    get:
                      summary: ""
                      description: ""
                      operationId: GET
                      responses: {}
                      security:
                      - {}
                  /xml:
                    summary: ""
                    description: ""
                    get:
                      summary: ""
                      description: ""
                      operationId: GET
                      responses: {}
                      security:
                      - {}
                components:
                  securitySchemes:
                    x-Gateway-APIKey:
                      type: apiKey
                      name: x-Gateway-APIKey
                      in: header

        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                updated:
                  summary: Example
                  value:
                    code: 404
                    message: Unable to find the requested API
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  '/apis/{id}/preferences':
    put:
      summary: Used to update the view preference of a hybrid API
      description: Used to update the view preference of a hybrid API
      responses:
        '200':
          $ref: '#/components/responses/UpdatePreference'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    parameters:
      - $ref: '#/components/parameters/apiId'
      - name: type
        in: query
        required: true
        schema:
          type: string
          enum:
            - REST
            - SOAP

  '/apis/{id}/edits':
    put:
      summary: Edit the details of APIs and its associated resources
      description: |-
        Endpoint that is used to edit the basic details of an API, Resources or Methods
      requestBody:
        description: API patch payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchDTO'
            examples:
              PatchPayload:
                $ref: '#/components/examples/PatchPayload'
      responses:
        '200':
          description: Patch created successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    parameters:
      - $ref: '#/components/parameters/apiId'

  '/apis/{id}/logo':
    put:
      summary: Update the logo of the given API
      description: Endpoint that is used to update the logo of the given API
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: object
                  description: New Logo of the API to be uploaded.
            example: |
              ------WebKitFormBoundaryWh7YIEN5mdUWFbkh
              Content-Disposition: form-data; name="file"; filename="Logo.jpg"
              Content-Type: image/jpeg


              ------WebKitFormBoundaryWh7YIEN5mdUWFbkh--
      responses:
        '200':
          $ref: '#/components/responses/CreationResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
        - $ref: '#/components/parameters/apiId'

  '/apis/{id}/attachments':
    put:
      summary: Update the attachments of the given API
      description: Endpoint that is used to update the attachments of the given API
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: object
                  description: New attachment of the API to be uploaded.
            example: |
              ------WebKitFormBoundaryWh7YIEN5mdUWFbkh
              Content-Disposition: form-data; name="file"; filename="Spec.json"
              Content-Type: application/json


              ------WebKitFormBoundaryWh7YIEN5mdUWFbkh--
      responses:
        '200':
          $ref: '#/components/responses/CreationResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
        - $ref: '#/components/parameters/apiId'

  '/apis/{id}/state':
    put:
      summary: Modify the state of the API
      description: Endpoint can be used to update the state of the given API
      parameters:
        - $ref: '#/components/parameters/apiId'
        - name: targetState
          in: query
          description: Target state
          required: true
          schema:
            type: string
      responses:
        200:
          $ref: '#/components/responses/UpdateStateResponse'
        400:
          $ref: '#/components/responses/InvalidStateUpdate'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'



components:
  securitySchemes:
    accesstoken:
      type: apiKey
      in: cookie
      name: accesstoken
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            401:
              $ref: '#/components/examples/401'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            403:
              $ref: '#/components/examples/403'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            404:
              $ref: '#/components/examples/404'
    Community:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Community'
          examples:
            200:
              $ref: '#/components/examples/Community'
    Topic:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Topic'
          examples:
            200:
              $ref: '#/components/examples/Topic'
    Application:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SearchResponseApplication'
          examples:
            200:
              $ref: '#/components/examples/Application'
    Subscriptions:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SearchResponseSubscription'
          examples:
            200:
              $ref: '#/components/examples/Subscription'
    SearchResponse:
      description: ok
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SearchResponse'
    UpdatePreference:
      description: Update preference response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdationResponse'
          examples:
            UpdatePreference:
              $ref: '#/components/examples/UpdatePreference'
    UpdateStateResponse:
      description: Update state response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdationResponse'
          examples:
            UpdateState:
              $ref: '#/components/examples/UpdateState'
    CreationResponse:
      description: The response when an entity is created successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedResponse'
          examples:
            CreationResponse:
              $ref: '#/components/examples/CreatedResponse'
    InvalidStateUpdate:
      description: Invalid state update
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            InvalidStateUpdate:
              $ref: '#/components/examples/InvalidStateUpdate'

  schemas:
    CreatedResponse:
      type: object
      properties:
        id:
          description: Identifier of the newly created object
          type: string
        _self:
          description: Self reference of the newly created object
          type: string
    UpdationResponse:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
    SearchResponse:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/APISummary'
        count:
          type: integer
        _links:
          type: object
          additionalProperties:
            type: string
    SearchResponseApplication:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/Application'
        count:
          type: integer
        _links:
          type: object
          additionalProperties:
            type: string
    SearchResponseSubscription:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
        count:
          type: integer
        _links:
          type: object
          additionalProperties:
            type: string
    SearchResponseTopics:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/Topic'
        count:
          type: integer
        _links:
          type: object
          additionalProperties:
            type: string
    SearchResponsePackage:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/Package'
        count:
          type: integer
        _links:
          type: object
          additionalProperties:
            type: string
    SearchResponseAudits:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/AuditEventRepositoryObject'
        count:
          type: integer
        _links:
          type: object
          additionalProperties:
            type: string
    AuditEventRepositoryObject:
      allOf:
        - $ref: '#/components/schemas/RepositoryObject'
      type: object
      properties:
        parameters:
          description: Event meta data
          type: object
          additionalProperties:
            type: object
          example:
            api_name: AccuWeather
        type:
          description: Type of the event
          type: object
          enum:
            - $ref: '#/components/schemas/EventType'
    RatingRequest:
      type: object
      properties:
        rating:
          type: integer
    RatingResponse:
      type: object
      properties:
        total:
          type: integer
        average:
          type: number
          format: double
        rating:
          type: number
          format: double
    RepositoryObject:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        summary:
          type: string
        description:
          type: string
        owner:
          type: string
        modified:
          type: string
          format: 'yyyy-MM-dd HH:mm'
        created:
          type: string
          format: 'yyyy-MM-dd HH:mm'
    EventType:
      title: Type of the event
      type: string
      example: API_TRY_EVENT
      enum:
        - API_PUBLISH_EVENT
        - API_REPUBLISH_EVENT
        - API_UN_PUBLISH_EVENT
        - PROVIDER_PUBLISH_EVENT
        - PROVIDER_REPUBLISH_EVENT
        - PROVIDER_UNPUBLISH_EVENT
        - SIGN_UP_EVENT
        - APPLICATION_REQUEST_EVENT
        - APPLICATION_CREATION_REQUEST_EVENT
        - APPLICATION_REQUEST_APPROVED_EVENT
        - APPLICATION_REQUEST_REJECTED_EVENT
        - COMMUNITY_CREATION_EVENT
        - COMMUNITY_DELETION_EVENT
        - COMMUNITY_MEMBERSHIP_CHANGE_EVENT
        - COMMUNITY_SCOPE_CHANGE_EVENT
        - IN_APP_NOTIFICATION_EVENT
        - EMAIL_NOTIFICATION_EVENT
        - API_TRY_EVENT
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
    Status:
      type: object
      properties:
        id:
          type: string
          description: unique identification
        processed:
          type: integer
          description: processed api/s count
        pending:
          type: integer
          description: processed api/s count
        message:
          type: string
          description: Publish message
        status:
          type: string
          description: Publish status
          enum:
            - PENDING
            - PARSING
            - INPROGRESS
            - SUCCEEDED
            - FAILED
        successes:
          description: Id and name of API/s successfully published - key value pair
          type: object
          additionalProperties:
            type: string
        failures:
          description: Id and name of API/s failed to publish - key value pair
          type: object
          additionalProperties:
            type: string
    ApiFilter:
      type: object
      properties:
        categories:
          type: array
          description: Represent Categories of APIs
          items:
            type: string
        maturityStatus:
          type: array
          description: Represent Maturity Status of APIs
          items:
            type: string
        tags:
          type: array
          description: Represent Tags of APIs
          items:
            type: string
        businessTerms:
          type: array
          description: Represent Business Terms of APIs
          items:
            type: string
        type:
          type: array
          description: Type of an APIs
          items:
            type: string
    Community:
      type: object
      properties:
        id:
          type: string
          description: Unique identification of Community
        name:
          type: string
          description: Name of the Community
        owner:
          type: string
          description: owner of the Community
        description:
          type: string
          description: Description of the Community
        apis:
          type: array
          description: APIS associated with the community
          items:
            type: string
        groups:
          type: array
          description: Group associated with the community
          items:
            type: string
        users:
          type: array
          description: Users associated with the community
          items:
            type: string
    API:
      allOf:
        - $ref: '#/components/schemas/APISummary'
        - type: object
          properties:
            tags:
              type: array
              items:
                type: string
            endPoints:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: The URL to invoke
                  baseUrl:
                    type: string
            apiProperties:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  key:
                    type: string
                  value:
                    type: string
            resources:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: Resource name
                  id:
                    type: string
                    description: GUID of an resource object
                  path:
                    type: string
                    description: Resource path
                  tags:
                    type: array
                    items:
                      type: string
                  requestBody:
                    type: object
                  restMethods:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        httpMethod:
                          type: string
                        secured:
                          type: boolean
                        parameters:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              cname:
                                type: string
                              paramType:
                                type: string
                              dataType:
                                type: string
                              mandatory:
                                type: boolean
                              possibleValues:
                                type: array
                                items:
                                  type: string
                              multivalue:
                                type: boolean
                              summary:
                                type: string
                              description:
                                type: string
                        summary:
                          type: string
                        requestBody:
                          type: object
                        tags:
                          type: array
                          items:
                            type: string
                        responses:
                          type: object
                          properties:
                            key:
                              type: object
                              properties:
                                summary:
                                  type: string
                  responses:
                    type: object
                    properties:
                      key:
                        type: object
                        properties:
                          summary:
                            type: string
    Groups:
      type: object
      properties:
        groupName:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              apiId:
                type: string
              description:
                type: string
              id:
                type: string
              cname:
                type: string
              httpMethod:
                type: string
              parameters:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    cname:
                      type: string
                    paramType:
                      type: string
                    dataType:
                      type: string
                    mandatory:
                      type: boolean
                    possibleValues:
                      type: array
                      items:
                        type: string
                    multivalue:
                      type: boolean
                    summary:
                      type: string
                    description:
                      type: string
              summary:
                type: string
              requestBody:
                type: object
              tags:
                type: array
                items:
                  type: string
              responses:
                type: object
                properties:
                  key:
                    type: object
                    properties:
                      summary:
                        type: string

    APISummary:
      type: object
      properties:
        id:
          type: string
          description: Unique identification of API
        name:
          type: string
          description: Name of the API
        description:
          type: string
          description: Summary of the API
        version:
          type: string
          description: Version of the API
        type:
          type: string
          description: Type of the API
          enum:
            - REST
            - ODATA
            - SOAP
        externalRefKey:
          type: string
          description: Reference key of the API
        providerRef:
          type: string
          description: Provider reference key
        systemVersion:
          type: string
          description: Internal version reference
        versionFamilyRef:
          type: string
          description: Version family group unique GUID
        icon:
          type: object
          properties:
            url:
              type: string
              description: location of an icon file
            type:
              type: string
        communities:
          type: array
          items:
            type: string
            description: GUID of the communities
        attachments:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Name of the attachment file
              uri:
                type: string
                description: REST path to download the file
        maturityStatus:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              cname:
                type: string
        policies:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Name of the policy
              summary:
                type: string
              description:
                type: string
        securitySchemes:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                description: Type of the security scheme
              name:
                type: string
              in:
                type: string
        endpointIds:
          type: array
          items:
            type: string
            description: GUID of the endpoint object
        rating:
          type: integer
          description: Rating of an API
        resourceIds:
          type: array
          items:
            type: string
            description: GUID of an resource object
        componentIds:
          type: array
          items:
            type: string
            description: GUID of an component object
        hybrid:
          type: boolean
          description: Determines is it an hybrid API. Example REST on SOAP API
    Topic:
      type: object
      required:
        - name
      properties:
        owner:
          type: string
        id:
          type: string
        modified:
          type: string
        created:
          type: string
        flagged:
          type: boolean
        content:
          type: object
          properties:
            value:
              type: string
            type:
              type: string
        comments:
          type: integer
        pinned:
          type: boolean
        stream:
          type: object
          properties:
            type:
              type: string
            id:
              type: string
        tags:
          type: array
          items:
            type: string
    Package:
      type: object
      required:
        - name
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        providerRef:
          type: string
        deprecated:
          type: boolean
        icon:
          type: object
        communities:
          type: array
          items:
            type: string
        apis:
          type: array
          items:
            type: string
        plans:
          type: array
          items:
            type: string
        externalRefKey:
          type: string

    Application:
      type: object
      properties:
        id:
          type: string
          description: Unique identification of Application
        name:
          type: string
          description: Name of the Application
        owner:
          type: string
          description: owner of the Application
        description:
          type: string
          description: Description of the Application
        apis:
          type: array
          description: APIS associated with the Application
          items:
            type: string
        stage:
          type: string
          description: Stage from which Application is published
        packageId:
          type: string
          description: Id of package associated with the Application
        planId:
          type: string
          description: Id of plan associated with the Application
        app_type:
          type: string
          description: Type of Application
          enum:
            - API
            - SUBSCRIPTION
        access:
          $ref: '#/components/schemas/AccessControlList'
        details:
          $ref: '#/components/schemas/Details'
    Subscription:
      type: object
      properties:
        id:
          type: string
          description: Unique identification of Application
        name:
          type: string
          description: Name of the Application
        owner:
          type: string
          description: owner of the Application
        description:
          type: string
          description: Description of the Application
        apis:
          type: array
          description: APIS associated with the Application
          items:
            type: string
        stage:
          type: string
          description: Stage from which Application is published
        status:
          type: string
          description: Status of an Application
        deleted:
          type: boolean
        packageId:
          type: string
          description: Id of package associated with the Application
        planId:
          type: string
          description: Id of plan associated with the Application
        app_type:
          type: string
          description: Type of Application
          enum:
            - API
            - SUBSCRIPTION
        access:
          $ref: '#/components/schemas/AccessControlList'
        details:
          $ref: '#/components/schemas/Details'
    AccessControlList:
      type: object
      description: Applications access information.
      properties:
        TEAMS_REF:
          type: string
          description: Refernce Id of Team
        created:
          type: string
          format: date
          description: Created date
        modified:
          type: string
          format: date
          description: Modified date
        teams:
          type: array
          description: Teams associated with the Application
          items:
            type: string
        users:
          type: array
          description: Users associated with the Application
          items:
            type: string
    Details:
      type: object
      description: Access  details of application.
      properties:
        IdentifierType:
          type: string
          description: Type of access detail
          enum:
            - APIKey
            - OAuth2
            - JWT

        ApplicationCredential:
          type: object

        APIKeyCredential:
          type: object
          properties:
            expiry:
              type: string
              format: date
              description: expiry date
            apiKey:
              type: string
              description: Key for the api

        JwtCredential:
          type: object
          properties:
            claimsets:
              type: array
              items:
                $ref: '#/components/schemas/ClaimSet'

        OAuthCredential:
          type: object
          properties:
            clientId:
              type: string
              description: Unique identification of the client
            clientSecret:
              type: string
              description: Secret key of the client
            token_lifetime:
              type: integer
              description: Lifetime of the token
            token_refresh_limit:
              type: integer
              description: No of times refresh of the token is allowed
            scopes:
              type: array
              description: Scope of this token
              items:
                type: string
            authorization_uris:
              type: array
              description: authorization_uris
              items:
                type: string
            access_token_uris:
              type: array
              description: access_token_uris
              items:
                type: string
            redirect_uris:
              type: array
              description: redirect_uris
              items:
                type: string
            refreshtoken_uris:
              type: array
              description: refreshtoken_uris
              items:
                type: string
    ClaimSet:
      type: object
      properties:
        name:
          type: string
          description: Name of the Claim Set
        claims:
          type: array
          items:
            type: string
    TryAPIRequest:
      type: object
      properties:
        operation:
          type: string
        endpoint:
          type: string
        headers:
          type: object
          additionalProperties: true
        body:
          $ref: '#/components/schemas/TryoutBody'
        type:
          type: string
      required:
        - operation
        - endpoint
        - headers
        - body
        - type
    TryoutBody:
      anyOf:
        - $ref: '#/components/schemas/SoapTryoutBody'
        - $ref: '#/components/schemas/RestTryoutBody'
    SoapTryoutBody:
      type: object
      properties:
        request_type:
          type: string
        payload:
          type: string
        namespaceUri:
          type: object
          additionalProperties: true
        customHeader:
          type: object
          properties:
            namespaceUri:
              type: object
              additionalProperties: true
            headerContent:
              type: string
        security:
          type: object
          properties:
            wssUserToken:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                  required:
                    - username
                    - password
                addnonce:
                  type: boolean
                addcreate:
                  type: boolean
                passwordType:
                  type: string
                  enum:
                    - PASSWORD_TEXT
                    - PASSWORD_DIGEST
            wssSamlAssertion:
              type: object
              properties:
                assertion:
                  type: string
      required:
        - request_type
        - payload
    RestTryoutBody:
      type: object
      additionalProperties: true
    TryAPIResponse:
      type: object
      properties:
        headers:
          type: object
          additionalProperties: true
        response:
          type: object
          properties:
            type:
              type: string
            response:
              type: string
            contentType:
              type: string
          required:
            - type
            - response
            - contentType
        status:
          type: object
          properties:
            code:
              type: integer
            reason:
              type: string
          required:
            - code
            - reason
        metrics:
          type: object
          properties:
            time:
              type: integer
            ip:
              type: string
          required:
            - time
            - ip
      required:
        - headers
        - response
        - status
        - metrics
    PatchDTO:
      type: object
      properties:
        api:
          allOf:
            - $ref: '#/components/schemas/PatchDefinition'
            - type: object
              properties:
                apiId:
                  type: string
                methods:
                  type: object
                  additionalProperties: true
                paths:
                  type: object
                  additionalProperties: true
        paths:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/PatchDefinition'
              - type: object
                properties:
                  path:
                    type: string
                  methodsMap:
                    type: object
                    additionalProperties: true
        methods:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/PatchDefinition'
              - type: object
                properties:
                  path:
                    type: string
                  operation:
                    type: string
                    enum:
                      - POST
                      - PUT
                      - GET
                      - DELETE
                      - PATCH
                      - HEAD
                      - OPTIONS
                      - SOAP11
                      - SOAP1
    PatchDefinition:
      type: object
      properties:
        insert:
          type: array
          items:
            $ref: '#/components/schemas/PatchStep'
        update:
          type: array
          items:
            $ref: '#/components/schemas/PatchStep'
        delete:
          type: array
          items:
            $ref: '#/components/schemas/PatchStep'
    PatchStep:
      type: object
      properties:
        attribute:
          type: string
          oneOf:
            - enum:
                - NAME
                - SUMMARY
                - DESCRIPTION
                - ICON
                - TAG
                - CATEGORIES
                - BUSINESS_TERMS
                - MATURITY_STATUS
                - ATTACHMENT
        locale:
          type: string
        value:
          type: string

  examples:
    CreatedResponse:
      value:
        id: 52c0b766-8bdc-4932-93f2-c7bcb8a16750
        _self: /rest/v1/files/52c0b766-8bdc-4932-93f2-c7bcb8a16750
    PatchPayload:
      value:
        api:
          update:
            - attribute: NAME
              locale: en
              value: Modified name
          insert:
            - attribute: ATTACHMENT
              value: /rest/v1/files/5d248c0b-4ec7-4eb5-b514-7c2e726afb4d
    UpdatePreference:
      value:
        code: 200
        message: Preferences updated successfully
    UpdateState:
      value:
        code: 200
        message: Lifecycle state is updated successfully
    InvalidStateUpdate:
      value:
        code: 400
        message: Invalid state transition from 'RETIRED' state to 'LIVE' state
    401:
      value:
        code: 401
        message: Invalid credentials
    403:
      value:
        code: 403
        message: Insufficient privileges
    404:
      value:
        code: 404
        message: Unable to find the requested API
    400:
      value:
        code: 400
        message: Invalid file
    Community:
      value:
        - id: 3bdf8005-5685-3ef5-b132-de4681963fb6
          name: New Commnunity
          description: This community has been created newly
          owner: 52c0b766-8bdc-4932-93f2-c7bcb8a16750
          apis:
            - 80b2c6d2-30e5-4b2f-82ce-07f9205941cb
            - ebf986ac-cb6c-405b-b047-67202706c42e
          groups:
            - 568ecf56-5fdc-4d2a-a3f7-64a6d824a21d
          users:
            - 52c0b766-8bdc-4932-93f2-c7bcb8a16750
            - 6b8e787f-142d-4675-901d-21999b8dc6e2
    Topic:
      value:
        owner: 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
        id: 8e38ee64-2306-4208-823a-ac9aab5cc43b
        modified: 1617013155719
        created: 1617013155719
        flagged: false
        stream:
          type: API
          id: d6376456-9d08-4a3e-b44d-7f40bb206d51
        content:
          value: '{"ops":[{"insert":"TestTopic2\n"}]}'
          type: rich
        pinned: false
        person:
          id: 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
          firstName: Administrator
          lastName: System
        comments: 0
    TopicSummary:
      value:
        owner: 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
        id: 8e38ee64-2306-4208-823a-ac9aab5cc43b
        modified: 1617013155719
        created: 1617013155719
        flagged: false
        stream:
          type: API
          id: d6376456-9d08-4a3e-b44d-7f40bb206d51
        content:
          value: '{"ops":[{"insert":"TestTopic2\n"}]}'
          type: rich
        pinned: false
        person:
          id: 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
          firstName: Administrator
          lastName: System
        comments: 0
    Application:
      value:
        result:
          - name: HTTPApp
            owner: 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
            id: 21236a05-dbd0-44cd-a62d-df16b7798892
            providerRef: a1b3a59c-0639-4260-a9a6-c75c78fcb62d
            access:
              teams: [ ]
              users: [ ]
            apis:
              - d6376456-9d08-4a3e-b44d-7f40bb206d51
              - 58436a0d-df78-4c9b-968f-2d8d1c082283
            credentials:
              - expiry: null
                apiKey: f0d88156-e62b-4679-8519-ef40365c4155
                type: APIKey
              - clientId: 9e99de65-7168-48b7-8af3-578882417cf0
                clientSecret: b5cfadb5-dc56-4fbe-8912-c4a369e831c9
            scopes: [ ]
            tokenLifeTime: 3600
            tokenRefreshLimit: 0
            authorizationUris:
              - 'http://host.docker.internal:5555/invoke/pub.apigateway.oauth2/authorize'
            accessTokenUris:
              - 'http://host.docker.internal:5555/invoke/pub.apigateway.oauth2/getAccessToken'
            redirectUris:
              - /rest/v1/oauth/callback
            refreshTokenUris:
              - 'http://host.docker.internal:5555/invoke/pub.oauth/refreshAccessToken'
            type: OAuth2
            claimsets:
              - name: JWT default claims set
                claims:
                  - key: app_id
                    value: cc4ef914-3e6b-439b-bed6-2fd63af3ead2
              - accesstoken_uris: null
                type: JWT
            status: LIVE
            slots:
              $stage: API Portal
            deleted: false
            externalRefKey: cc4ef914-3e6b-439b-bed6-2fd63af3ead2
            app_type: API
        count: 1
        _links:
          _self: /rest/v1/apis/cb996fe0-95c5-4ba3-8212-148ddd99c15b/applications?page=0
    Subscription:
      value:
        result:
          - name: PlanSubscribe
            owner: 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
            id: a8660172-7ad4-491c-8a51-3b6dcb64f9e1
            providerRef: a1b3a59c-0639-4260-a9a6-c75c78fcb62d
            access:
              teams: [ ]
              users: [ ]
            apis: [ ]
            packageId: 41ed0fb4-3c9e-47b4-aab0-119c674c997f
            planId: 4738b319-7de5-47e9-b869-1967a042e075
            credentials:
              - expiry: null
                apiKey: 2f757170-4a3f-47ca-b4ac-5845ad40ec43
                type: APIKey
              - clientId: 39ae0aee-67d5-4e62-bb95-2bab469317e1
                clientSecret: 4c24dbb6-a8f7-4b16-88cb-9ab6526067cd
                scopes: [ ]
                tokenLifeTime: 3600
                tokenRefreshLimit: 0
                authorizationUris:
                  - 'http://host.docker.internal:5555/invoke/pub.apigateway.oauth2/authorize'
                accessTokenUris:
                  - 'http://host.docker.internal:5555/invoke/pub.apigateway.oauth2/getAccessToken'
                redirectUris:
                  - /rest/v1/oauth/callback
                refreshTokenUris:
                  - 'http://host.docker.internal:5555/invoke/pub.oauth/refreshAccessToken'
                type: OAuth2
            status: LIVE
            slots:
              $stage: API Portal
            deleted: false
            externalRefKey: 30f1a040-b76f-4bd5-99b7-f18c0c5c9f6e
            app_type: SUBSCRIPTION
        count: 1
        _links:
          _self: /rest/v1/apis/cb996fe0-95c5-4ba3-8212-148ddd99c15b/subscriptions?page=0
    RatingRequest:
      value:
        rating: 3
    RatingResponse:
      value:
        total: 3
        average: 3.5
        rating: 4
    SearchResponseTopicSummary:
      value:
        result:
          - owner: 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
            id: 8e38ee64-2306-4208-823a-ac9aab5cc43b
            modified: 1617013155719
            created: 1617013155719
            flagged: false
            stream:
              type: API
              id: d6376456-9d08-4a3e-b44d-7f40bb206d51
            content:
              value: '{"ops":[{"insert":"TestTopic2\n"}]}'
              type: rich
            pinned: false
            person:
              id: 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
              firstName: Administrator
              lastName: System
            comments: 0
        count: 1
        _links:
          _self: /rest/v1/apis/cb996fe0-95c5-4ba3-8212-148ddd99c15b/topics?page=0
    SearchResponsePackageSummary:
      value:
        result:
          - id: 41ed0fb4-3c9e-47b4-aab0-119c674c997f
            name: TestPkg
            description: TestDesc
            providerRef: a1b3a59c-0639-4260-a9a6-c75c78fcb62d
            deprecated: false
            icon: null
            communities:
              - 3bdf8005-5685-3ef5-b132-de4681963fb6
            apis:
              - d6376456-9d08-4a3e-b44d-7f40bb206d51
            plans:
              - 4738b319-7de5-47e9-b869-1967a042e075
            externalRefKey: 0f74a7e2-058c-42d5-b162-9a078dbcc390
        count: 1
        _links:
          _self: /rest/v1/apis/cb996fe0-95c5-4ba3-8212-148ddd99c15b/packages?page=0
    SOAPTryRequest:
      value:
        operation: SOAP11
        endpoint: 'http://VMSIQADEM0O01:4444/ws/Calculator/1'
        headers:
          SOAPAction: 'http://tempuri.org/Add'
        body:
          request_type: soap
          payload: '<tem:Add xmlns:tem="http://tempuri.org/"><tem:intA>2</tem:intA><tem:intB>-3</tem:intB></tem:Add>'
          namespaceUri:
            tem: 'http://tempuri.org'
          security:
            wssUserToken:
              username: Administrator
              password: manage
              addnonce: true
              addcreate: true
              passwordType: PASSWORD_TEXT
            wssSamlAssertion:
              assertion: <saml2>......</saml2>
          customHeader:
            - namespaceUri:
                tem: 'http://tempuri.org'
              headerContent: <sample>...</sample>
        type: SOAP
    RestTryRequest:
      value:
        type: REST
        operation: POST
        endpoint: 'http://petstore.swagger.io/v2'
        resource: /pet
        headers:
          Content-Type: application/xml
        body:
          request_type: raw
          payload: <Pet><name>siyaan</name><status>available</status></Pet>
    TryAPIResponse:
      value:
        headers:
          Cache-Control:
            - max-age=0
          X-AspNet-Version:
            - 2.0.50727
          Content-Length:
            - '326'
          X-Powered-By:
            - ASP.NET
          Content-Type:
            - application/xml; charset=utf-8
        response:
          type: text
          response: '<?xml version="1.0" encoding="UTF-8"?><soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soap:Body><AddResponse xmlns="http://tempuri.org/"><AddResult>-1</AddResult></AddResponse></soap:Body></soap:Envelope>'
        status:
          code: 200
          reason: OK
        metrics:
          time: 956
          ip: x.x.x.x
    Groups:
      value:
        store:
          - name: getOrderById
            id: 9ae7f7a9-37d5-40fb-9385-5e1e982ffc6e
            cname: getOrderById
            parameters:
              - name: orderId
                cname: orderId
                paramType: Path
                dataType: integer
                mandatory: true
                possibleValues:
                  - ''
                multivalue: false
                summary: ID of pet that needs to be fetched
                description: ID of pet that needs to be fetched
            tags:
              - store
            requestBody: { }
            responses:
              '200':
                content:
                  application/json:
                    schema: "{\r\n  \"$ref\" : \"#/components/schemas/Order\"\r\n}"
                    example: '{"petId":2091656554,"quantity":979438708,"id":375377123,"shipDate":"2021-03-01T08:26:03+0530","complete":false,"status":"approved"}'
                summary: successful operation
                description: successful operation
              '400':
                summary: Invalid ID supplied
                description: Invalid ID supplied
              '404':
                summary: Order not found
                description: Order not found
            httpMethod: GET
            communities:
              - 3bdf8005-5685-3ef5-b132-de4681963fb6
            apiId: d85a544b-5c55-4bc8-b888-ebe7923726b3
            summary: For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions
            description: For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions
          - name: deleteOrder
            id: 5a945724-d251-45f0-9f7c-8740b51034db
            cname: deleteOrder
            parameters:
              - name: orderId
                cname: orderId
                paramType: Path
                dataType: integer
                mandatory: true
                possibleValues:
                  - ''
                multivalue: false
                summary: ID of the order that needs to be deleted
                description: ID of the order that needs to be deleted
            tags:
              - store
            requestBody: { }
            responses:
              '400':
                summary: Invalid ID supplied
                description: Invalid ID supplied
              '404':
                summary: Order not found
                description: Order not found
            httpMethod: DELETE
            communities:
              - 3bdf8005-5685-3ef5-b132-de4681963fb6
            apiId: d85a544b-5c55-4bc8-b888-ebe7923726b3
            summary: For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors
            description: For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors
          - name: getInventory
            id: 63fcfcd3-e87f-42ae-9d3e-a7ea4339cb1c
            cname: getInventory
            tags:
              - store
            requestBody: { }
            responses:
              '200':
                content:
                  application/json:
                    schema: "{\r\n  \"type\" : \"object\",\r\n  \"additionalProperties\" : {\r\n    \"type\" : \"integer\",\r\n    \"format\" : \"int32\"\r\n  }\r\n}"
                    example: '{}'
                summary: successful operation
                description: successful operation
            httpMethod: GET
            communities:
              - 3bdf8005-5685-3ef5-b132-de4681963fb6
            apiId: d85a544b-5c55-4bc8-b888-ebe7923726b3
            summary: Returns a map of status codes to quantities
            description: Returns a map of status codes to quantities
          - name: placeOrder
            id: c453c98d-e8e1-4196-8b77-ed06f9189f6d
            cname: placeOrder
            tags:
              - store
            requestBody:
              content:
                application/json:
                  schema: "{\r\n  \"$ref\" : \"#/components/schemas/Order\"\r\n}"
                  example: '{"petId":1933050918,"quantity":1706702615,"id":1944751911,"shipDate":"2021-03-18T01:28:49+0530","complete":true,"status":"delivered"}'
              summary: order placed for purchasing the pet
              description: order placed for purchasing the pet
            responses:
              '200':
                content:
                  application/json:
                    schema: "{\r\n  \"$ref\" : \"#/components/schemas/Order\"\r\n}"
                    example: '{"petId":806630507,"quantity":281406806,"id":433125620,"shipDate":"2021-03-08T18:31:36+0530","complete":false,"status":"delivered"}'
                summary: successful operation
                description: successful operation
              '400':
                summary: Invalid Order
                description: Invalid Order
            httpMethod: POST
            communities:
              - 3bdf8005-5685-3ef5-b132-de4681963fb6
            apiId: d85a544b-5c55-4bc8-b888-ebe7923726b3
            summary: ''
            description: ''
        user:
          - name: loginUser
            id: 7723e28f-442f-40f8-a9f1-fdd9a8404a93
            cname: loginUser
            parameters:
              - name: username
                cname: username
                paramType: Query
                dataType: string
                mandatory: true
                possibleValues:
                  - ''
                multivalue: false
                summary: The user name for login
                description: The user name for login
              - name: password
                cname: password
                paramType: Query
                dataType: string
                mandatory: true
                possibleValues:
                  - ''
                multivalue: false
                summary: The password for login in clear text
                description: The password for login in clear text
            tags:
              - user
            requestBody: { }
            responses:
              '200':
                content:
                  application/xml:
                    schema: "{\r\n  \"type\" : \"string\"\r\n}"
                summary: successful operation
                description: successful operation
              '400':
                summary: Invalid username/password supplied
                description: Invalid username/password supplied
            httpMethod: GET
            communities:
              - 3bdf8005-5685-3ef5-b132-de4681963fb6
            apiId: d85a544b-5c55-4bc8-b888-ebe7923726b3
            summary: ''
            description: ''
          - name: logoutUser
            id: 493e1baf-939f-46dc-bfa1-4b9ac9ff12a0
            cname: logoutUser
            tags:
              - user
            requestBody: { }
            responses:
              default:
                summary: successful operation
                description: successful operation
            httpMethod: GET
            communities:
              - 3bdf8005-5685-3ef5-b132-de4681963fb6
            apiId: d85a544b-5c55-4bc8-b888-ebe7923726b3
            summary: ''
            description: ''
          - name: updateUser
            id: 940b5fd0-eb26-4c7b-adb9-16e253f58ac0
            cname: updateUser
            parameters:
              - name: username
                cname: username
                paramType: Path
                dataType: string
                mandatory: true
                possibleValues:
                  - ''
                multivalue: false
                summary: name that need to be updated
                description: name that need to be updated
            tags:
              - user
            requestBody:
              content:
                application/json:
                  schema: "{\r\n  \"$ref\" : \"#/components/schemas/User\"\r\n}"
                  example: '{"firstName":"arGSUmuEnfMe","lastName":"V","password":"nNoHiOiU","userStatus":547873592,"phone":"prUtWLvOjLtD","id":112109356,"email":"AYwSUGNvIS","username":"YVkDLONXnH"}'
              summary: Updated user object
              description: Updated user object
            responses:
              '400':
                summary: Invalid user supplied
                description: Invalid user supplied
              '404':
                summary: User not found
                description: User not found
            httpMethod: PUT
            communities:
              - 3bdf8005-5685-3ef5-b132-de4681963fb6
            apiId: d85a544b-5c55-4bc8-b888-ebe7923726b3
            summary: This can only be done by the logged in user.
            description: This can only be done by the logged in user.
          - name: createUsersWithListInput
            id: f3ae4dc2-54e3-4ff8-9ada-2331beee5a4c
            cname: createUsersWithListInput
            tags:
              - user
            requestBody:
              content:
                application/json:
                  schema: "{\r\n  \"type\" : \"array\",\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/User\"\r\n  }\r\n}"
                  example: '[{"firstName":"pRq","lastName":"OlWgvieVG","password":"EVskbADtVPbd","userStatus":1460906548,"phone":"tpAeTvXoHcdA","id":921663143,"email":"","username":"SLRlhEGt"}]'
              summary: List of user object
              description: List of user object
            responses:
              default:
                summary: successful operation
                description: successful operation
            httpMethod: POST
            communities:
              - 3bdf8005-5685-3ef5-b132-de4681963fb6
            apiId: d85a544b-5c55-4bc8-b888-ebe7923726b3
            summary: ''
            description: ''
          - name: deleteUser
            id: 832880b8-4bb5-4705-998d-833f6617ba07
            cname: deleteUser
            parameters:
              - name: username
                cname: username
                paramType: Path
                dataType: string
                mandatory: true
                possibleValues:
                  - ''
                multivalue: false
                summary: The name that needs to be deleted
                description: The name that needs to be deleted
            tags:
              - user
            requestBody: { }
            responses:
              '400':
                summary: Invalid username supplied
                description: Invalid username supplied
              '404':
                summary: User not found
                description: User not found
            httpMethod: DELETE
            communities:
              - 3bdf8005-5685-3ef5-b132-de4681963fb6
            apiId: d85a544b-5c55-4bc8-b888-ebe7923726b3
            summary: This can only be done by the logged in user.
            description: This can only be done by the logged in user.
          - name: createUser
            id: 6ae7ff55-fec2-44c8-9b74-9e189b50d9e4
            cname: createUser
            tags:
              - user
            requestBody:
              content:
                application/json:
                  schema: "{\r\n  \"$ref\" : \"#/components/schemas/User\"\r\n}"
                  example: '{"firstName":"nTEFdKRUjQUtEo","lastName":"PdmvMbmrSpwgv","password":"OGvmFNYKwGX","userStatus":853852705,"phone":"","id":1079525661,"email":"","username":"PsVd"}'
              summary: Created user object
              description: Created user object
            responses:
              default:
                summary: successful operation
                description: successful operation
            httpMethod: POST
            communities:
              - 3bdf8005-5685-3ef5-b132-de4681963fb6
            apiId: d85a544b-5c55-4bc8-b888-ebe7923726b3
            summary: This can only be done by the logged in user.
            description: This can only be done by the logged in user.
          - name: createUsersWithArrayInput
            id: b4db6f5e-468a-4119-9401-51bffddb3dce
            cname: createUsersWithArrayInput
            tags:
              - user
            requestBody:
              content:
                application/json:
                  schema: "{\r\n  \"type\" : \"array\",\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/User\"\r\n  }\r\n}"
                  example: '[{"firstName":"lYssYloAupJF","lastName":"","password":"KXokO","userStatus":704607110,"phone":"qCt","id":344298476,"email":"tniTDCRkG","username":"r"}]'
              summary: List of user object
              description: List of user object
            responses:
              default:
                summary: successful operation
                description: successful operation
            httpMethod: POST
            communities:
              - 3bdf8005-5685-3ef5-b132-de4681963fb6
            apiId: d85a544b-5c55-4bc8-b888-ebe7923726b3
            summary: ''
            description: ''
          - name: getUserByName
            id: 10bb3053-fa3d-4427-aea4-50857962a9bb
            cname: getUserByName
            parameters:
              - name: username
                cname: username
                paramType: Path
                dataType: string
                mandatory: true
                possibleValues:
                  - ''
                multivalue: false
                summary: 'The name that needs to be fetched. Use user1 for testing. '
                description: 'The name that needs to be fetched. Use user1 for testing. '
            tags:
              - user
            requestBody: { }
            responses:
              '200':
                content:
                  application/json:
                    schema: "{\r\n  \"$ref\" : \"#/components/schemas/User\"\r\n}"
                    example: '{"firstName":"EV","lastName":"RhMH","password":"dcoXbVdGgc","userStatus":1921012345,"phone":"xHB","id":1298931298,"email":"vsLqux","username":"YHme"}'
                summary: successful operation
                description: successful operation
              '400':
                summary: Invalid username supplied
                description: Invalid username supplied
              '404':
                summary: User not found
                description: User not found
            httpMethod: GET
            communities:
              - 3bdf8005-5685-3ef5-b132-de4681963fb6
            apiId: d85a544b-5c55-4bc8-b888-ebe7923726b3
            summary: ''
            description: ''
        pet:
          - name: addPet
            id: f87bfc61-eed0-455c-892b-9dd1bca650e1
            cname: addPet
            tags:
              - pet
            requestBody:
              content:
                application/xml:
                  schema: "{\r\n  \"$ref\" : \"#/components/schemas/Pet\"\r\n}"
                  example: '{"photoUrls":["IjNnqXXUOTDWKS"],"name":"uYsyGXqMfvp","id":176486166,"category":{"name":"DhjRvSmxibe","id":1754543776},"tags":[{"name":"xRcAgIYKPrdcg","id":1152663264}],"status":"available"}'
              summary: Pet object that needs to be added to the store
              description: Pet object that needs to be added to the store
            responses:
              '405':
                summary: Invalid input
                description: Invalid input
            httpMethod: POST
            communities:
              - 3bdf8005-5685-3ef5-b132-de4681963fb6
            apiId: d85a544b-5c55-4bc8-b888-ebe7923726b3
            summary: ''
            description: ''
          - name: findPetsByStatus
            id: 87306151-4b75-47f5-b34c-3e7dca601b91
            cname: findPetsByStatus
            parameters:
              - name: status
                cname: status
                paramType: Query
                dataType: array
                mandatory: true
                possibleValues:
                  - ''
                multivalue: true
                summary: Status values that need to be considered for filter
                description: Status values that need to be considered for filter
            tags:
              - pet
            requestBody: { }
            responses:
              '200':
                content:
                  application/xml:
                    schema: "{\r\n  \"type\" : \"array\",\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Pet\"\r\n  }\r\n}"
                    example: '[{"photoUrls":["LpbTTUWbHo"],"name":"eGKBC","id":2069487412,"category":{"name":"","id":943168332},"tags":[{"name":"oBw","id":1678754362}],"status":"available"}]'
                summary: successful operation
                description: successful operation
              '400':
                summary: Invalid status value
                description: Invalid status value
            httpMethod: GET
            communities:
              - 3bdf8005-5685-3ef5-b132-de4681963fb6
            apiId: d85a544b-5c55-4bc8-b888-ebe7923726b3
            summary: Multiple status values can be provided with comma separated strings
            description: Multiple status values can be provided with comma separated strings
          - name: uploadFile
            id: b990fd23-ef4d-4a1a-81a1-86bf652aeb53
            cname: uploadFile
            parameters:
              - name: petId
                cname: petId
                paramType: Path
                dataType: integer
                mandatory: true
                possibleValues:
                  - ''
                multivalue: false
                summary: ID of pet to update
                description: ID of pet to update
            tags:
              - pet
            requestBody:
              content:
                multipart/form-data:
                  schema: "{\r\n  \"type\" : \"object\",\r\n  \"properties\" : {\r\n    \"additionalMetadata\" : {\r\n      \"type\" : \"string\",\r\n      \"description\" : \"Additional data to pass to server\",\r\n      \"readOnly\" : false\r\n    },\r\n    \"file\" : {\r\n      \"type\" : \"string\",\r\n      \"description\" : \"file to upload\",\r\n      \"format\" : \"binary\",\r\n      \"readOnly\" : false\r\n    }\r\n  }\r\n}"
                  example: '{"additionalMetadata":"uMneWuIKTjC","file":"xUYuRRNyuY"}'
              summary: null
              description: null
            responses:
              '200':
                content:
                  application/json:
                    schema: "{\r\n  \"$ref\" : \"#/components/schemas/ApiResponse\"\r\n}"
                    example: '{"code":1072914794,"type":"","message":"B"}'
                summary: successful operation
                description: successful operation
            httpMethod: POST
            communities:
              - 3bdf8005-5685-3ef5-b132-de4681963fb6
            apiId: d85a544b-5c55-4bc8-b888-ebe7923726b3
            summary: ''
            description: ''
          - name: updatePet
            id: 33b568e1-8a6d-4255-b606-f301a99da033
            cname: updatePet
            tags:
              - pet
            requestBody:
              content:
                application/json:
                  schema: "{\r\n  \"$ref\" : \"#/components/schemas/Pet\"\r\n}"
                  example: '{"photoUrls":["GLt"],"name":"YdcajshytXt","id":2123834021,"category":{"name":"RkAGlAratgiFr","id":1681833846},"tags":[{"name":"p","id":1741871321}],"status":"sold"}'
              summary: Pet object that needs to be added to the store
              description: Pet object that needs to be added to the store
            responses:
              '400':
                summary: Invalid ID supplied
                description: Invalid ID supplied
              '404':
                summary: Pet not found
                description: Pet not found
              '405':
                summary: Validation exception
                description: Validation exception
            httpMethod: PUT
            communities:
              - 3bdf8005-5685-3ef5-b132-de4681963fb6
            apiId: d85a544b-5c55-4bc8-b888-ebe7923726b3
            summary: ''
            description: ''
          - name: getPetById
            id: e4c8cef8-3a86-4783-850d-769f0e12e567
            cname: getPetById
            parameters:
              - name: petId
                cname: petId
                paramType: Path
                dataType: integer
                mandatory: true
                possibleValues:
                  - ''
                multivalue: false
                summary: ID of pet to return
                description: ID of pet to return
            tags:
              - pet
            requestBody: { }
            responses:
              '200':
                content:
                  application/xml:
                    schema: "{\r\n  \"$ref\" : \"#/components/schemas/Pet\"\r\n}"
                    example: '{"photoUrls":["jnKMMdVgeA"],"name":"gVmONCHhKNFKW","id":2003919670,"category":{"name":"JWrySeqSmTBhff","id":351568518},"tags":[{"name":"nqAUcsw","id":1158993365}],"status":"pending"}'
                summary: successful operation
                description: successful operation
              '400':
                summary: Invalid ID supplied
                description: Invalid ID supplied
              '404':
                summary: Pet not found
                description: Pet not found
            httpMethod: GET
            communities:
              - 3bdf8005-5685-3ef5-b132-de4681963fb6
            apiId: d85a544b-5c55-4bc8-b888-ebe7923726b3
            summary: Returns a single pet
            description: Returns a single pet
          - name: findPetsByTags
            id: a90d057a-7e82-4860-80e5-a91d90b62e1c
            cname: findPetsByTags
            parameters:
              - name: tags
                cname: tags
                paramType: Query
                dataType: array
                mandatory: true
                possibleValues:
                  - ''
                multivalue: true
                summary: Tags to filter by
                description: Tags to filter by
            tags:
              - pet
            requestBody: { }
            responses:
              '200':
                content:
                  application/xml:
                    schema: "{\r\n  \"type\" : \"array\",\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Pet\"\r\n  }\r\n}"
                    example: '[{"photoUrls":["OuNessQX"],"name":"QgRWiPDy","id":757660868,"category":{"name":"AVNEDMxIFN","id":1940122294},"tags":[{"name":"bNbpvVOnP","id":105438341}],"status":"available"}]'
                summary: successful operation
                description: successful operation
              '400':
                summary: Invalid tag value
                description: Invalid tag value
            httpMethod: GET
            communities:
              - 3bdf8005-5685-3ef5-b132-de4681963fb6
            apiId: d85a544b-5c55-4bc8-b888-ebe7923726b3
            summary: 'Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.'
            description: 'Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.'
          - name: deletePet
            id: 496d2037-b49c-4968-88ee-c6fd6279fc76
            cname: deletePet
            parameters:
              - name: api_key
                cname: api_key
                paramType: Header
                dataType: string
                mandatory: false
                possibleValues:
                  - ''
                multivalue: false
                summary: null
                description: null
              - name: petId
                cname: petId
                paramType: Path
                dataType: integer
                mandatory: true
                possibleValues:
                  - ''
                multivalue: false
                summary: Pet id to delete
                description: Pet id to delete
            tags:
              - pet
            requestBody: { }
            responses:
              '400':
                summary: Invalid ID supplied
                description: Invalid ID supplied
              '404':
                summary: Pet not found
                description: Pet not found
            httpMethod: DELETE
            communities:
              - 3bdf8005-5685-3ef5-b132-de4681963fb6
            apiId: d85a544b-5c55-4bc8-b888-ebe7923726b3
            summary: ''
            description: ''
          - name: updatePetWithForm
            id: 89ef042a-12e2-49b1-a28a-f2c4e566949b
            cname: updatePetWithForm
            parameters:
              - name: petId
                cname: petId
                paramType: Path
                dataType: integer
                mandatory: true
                possibleValues:
                  - ''
                multivalue: false
                summary: ID of pet that needs to be updated
                description: ID of pet that needs to be updated
            tags:
              - pet
            requestBody:
              content:
                application/x-www-form-urlencoded:
                  schema: "{\r\n  \"type\" : \"object\",\r\n  \"properties\" : {\r\n    \"name\" : {\r\n      \"type\" : \"string\",\r\n      \"description\" : \"Updated name of the pet\",\r\n      \"readOnly\" : false\r\n    },\r\n    \"status\" : {\r\n      \"type\" : \"string\",\r\n      \"description\" : \"Updated status of the pet\",\r\n      \"readOnly\" : false\r\n    }\r\n  }\r\n}"
                  example: '{"name":"EHXqAhfEElpR","status":"PTc"}'
              summary: null
              description: null
            responses:
              '405':
                summary: Invalid input
                description: Invalid input
            httpMethod: POST
            communities:
              - 3bdf8005-5685-3ef5-b132-de4681963fb6
            apiId: d85a544b-5c55-4bc8-b888-ebe7923726b3
            summary: ''
            description: ''
    API:
      value:
        name: Swagger Petstore
        id: 9beb59b8-25eb-477c-8148-207216cb716a
        type: REST
        version: 1.0.0
        icon: 0ec25b14-2fbf-4239-a635-68c3b14af444
        systemVersion: '1.0'
        versionFamilyRef: b2e4b4e0-ce9b-41ef-833a-ae9f1a30245d
        communities:
          - 3bdf8005-5685-3ef5-b132-de4681963fb6
        tags:
          - pets
        endPoints:
          - name: 'http://petstore.swagger.io/v1'
            baseUrl: 'http://petstore.swagger.io/v1'
        attachments:
          - name: OpenApi_Petstore.yaml
            uri: fcb66d45-958f-426b-b872-1515f1240b57
        apiProperties:
          - name: License Name
            key: License Name
            value: MIT
        resources:
          - name: /pets
            id: 6643a60b-4a8a-4604-bb40-1cb5a66ddbff
            path: /pets
            restMethods:
              - name: createPets
                tags:
                  - pets
                requestBody: { }
                responses:
                  '201':
                    summary: Null response
                  default:
                    summary: unexpected error
                httpMethod: POST
                secured: false
                summary: Create a pet
              - name: listPets
                parameters:
                  - name: limit
                    paramType: Query
                    dataType: integer
                    mandatory: false
                    multivalue: false
                    description: How many items to return at one time (max 100)
                tags:
                  - pets
                requestBody: { }
                responses:
                  '200':
                    headers:
                      - name: x-next
                        paramType: Header
                        dataType: string
                        description: A link to the next page of responses
                    summary: An paged array of pets
                  default:
                    summary: unexpected error
                httpMethod: GET
                secured: false
                summary: List all pets
            protected: false
          - name: '/pets/{petId}'
            id: f61899a6-a5f6-415a-9b4f-59b447b40a06
            path: '/pets/{petId}'
            restMethods:
              - name: showPetById
                parameters:
                  - name: petId
                    paramType: Path
                    dataType: string
                    mandatory: true
                    multivalue: false
                    description: The id of the pet to retrieve
                tags:
                  - pets
                requestBody: { }
                responses:
                  '200':
                    summary: Expected response to a valid request
                  default:
                    summary: unexpected error
                httpMethod: GET
                secured: false
                summary: Info for a specific pet
            protected: false
        components:
          - schema:
              - type: object
                required:
                  - id
                  - name
                properties:
                  - name: id
                    type: trivial
                    format: int64
                  - name: name
                    type: trivial
                  - name: tag
                    type: trivial
              - type: array
                data_type: string
                items:
                  - type: trivial
              - type: object
                required:
                  - code
                  - message
                properties:
                  - name: code
                    type: trivial
                    format: int32
                  - name: message
                    type: trivial
        resourceIds:
          - 6643a60b-4a8a-4604-bb40-1cb5a66ddbff
          - f61899a6-a5f6-415a-9b4f-59b447b40a06
        hybrid: false
        protected: false
        secured: false
        externalRefKey: 85692458-5ad5-4280-90e2-a73c90f033a4
  parameters:
    apiId:
      name: id
      in: path
      description: Unique Identification of an API. Refers to the GUID of the API.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`
      required: true
      allowEmptyValue: false
      schema:
        type: string
    tryendpoint:
      name: x-tryout-endpoint
      in: header
      description: Endpoint of the API
      required: true
      allowEmptyValue: false
      schema:
        type: string
security:
  - accesstoken: [ ]
  - bearerAuth: [ ]
