{
	"info": {
		"_postman_id": "89528618-5076-4114-b415-271d18251a9e",
		"name": "webMethods Developer Portal APIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Administration",
			"item": [
				{
					"name": "Certificates",
					"item": [
						{
							"name": "Get all Certifiicates",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/certs",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"certs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Save  a certificate",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "files",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/certs",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"certs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a certificate",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/certs/8366e778-e804-4178-bd55-b1ea28a9560b",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"certs",
										"8366e778-e804-4178-bd55-b1ea28a9560b"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a certificiate",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "File",
					"item": [
						{
							"name": "Create a file",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "files",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/files",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"files"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Flow",
					"item": [
						{
							"name": "Get suspended flows",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/flows/suspended",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"flows",
										"suspended"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "API Management",
			"item": [
				{
					"name": "Try API",
					"item": [
						{
							"name": "OAuth",
							"item": [
								{
									"name": "Create Token with Client credentials grant",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"cc grant token\",\r\n    \"scope\": \"Read\",\r\n    \"applicationId\": \"55de08f7-9db9-4d60-b478-2355fa2520d9\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://{{host}}/rest/v1/oauth/tokens",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"path": [
												"rest",
												"v1",
												"oauth",
												"tokens"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create OAuth state",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"implicit token\",\r\n    \"applicationId\": \"b07b133d-46c9-480b-bf6f-f3b3de669940\",\r\n    \"grantType\": \"implicit\",\r\n    \"authorizationUri\": \"https://SAG-BTKPWT2:7777/invoke/pub.apigateway.oauth2/authorize\",\r\n    \"accessUri\": \"https://SAG-BTKPWT2:7777/invoke/pub.apigateway.oauth2/getAccessToken\",\r\n    \"redirectUri\": \"http://localhost:18101/portal/rest/v1/oauth/callback\",\r\n    \"clientId\": \"1a57e392-e7ad-44dd-b878-cfffa3a4e9e7\",\r\n    \"clientSecret\": \"2a1382b3-ac9e-45f7-bb59-0b371d293d21\",\r\n    \"scope\": \"Read\",\r\n    \"credentialsIn\": \"HEADER\"\r\n}\r\n\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://{{host}}/rest/v1/oauth/tokens/state",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"path": [
												"rest",
												"v1",
												"oauth",
												"tokens",
												"state"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "SOAP API Tryout",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"operation\": \"SOAP11\",\r\n    \"endpoint\": \"http://dneonline.com/calculator.asmx\",\r\n    \"headers\": {\r\n        \"SOAPAction\": \"http://tempuri.org/Add\"\r\n    },\r\n    \"body\": {\r\n        \"request_type\": \"soap\",\r\n        \"payload\": \"<Add xmlns=\\\"http://tempuri.org/\\\"> <intA>10</intA> <intB>19</intB> </Add>\",\r\n        \"namespaceUri\": {\r\n            \"tem\": \"http://tempuri.org\"\r\n        },\r\n        \"security\": {\r\n            \"namespaceUri\": {\r\n                \"tem\": \"http://tempuri.org\"\r\n            }\r\n        }\r\n    },\r\n    \"type\": \"SOAP\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/apis/a7ff704a-b4e2-434e-829b-083d6a8c0ebf/try",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"apis",
										"a7ff704a-b4e2-434e-829b-083d6a8c0ebf",
										"try"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get API tryout history",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/apis/a7ff704a-b4e2-434e-829b-083d6a8c0ebf/try/history",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"apis",
										"a7ff704a-b4e2-434e-829b-083d6a8c0ebf",
										"try",
										"history"
									]
								}
							},
							"response": []
						},
						{
							"name": "REST API Tryout -  GET Request with Query",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\" : \"REST\",\r\n    \"operation\": \"GET\",\r\n    \"endpoint\": \"http://petstore.swagger.io/v2\",\r\n    \"resource\" : \"/pet/findByStatus\",\r\n    \"params\": {\r\n        \"status\" : [\"sold\"]\r\n    },\r\n    \"headers\" : {\r\n        \"Accept\" : \"application/json\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/apis/d50d9fa8-63c0-4fa7-85e6-efec973419f6/try",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"apis",
										"d50d9fa8-63c0-4fa7-85e6-efec973419f6",
										"try"
									]
								}
							},
							"response": []
						},
						{
							"name": "REST API Tryout -  GET Request with Path Param",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\" : \"REST\",\r\n    \"operation\": \"GET\",\r\n    \"endpoint\": \"http://petstore.swagger.io/v2\",\r\n    \"resource\" : \"/pet/{id}\",\r\n    \"variables\": {\r\n        \"id\" : \"1\"\r\n    },\r\n    \"headers\" : {\r\n        \"Accept\" : \"application/json\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/apis/d50d9fa8-63c0-4fa7-85e6-efec973419f6/try",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"apis",
										"d50d9fa8-63c0-4fa7-85e6-efec973419f6",
										"try"
									]
								}
							},
							"response": []
						},
						{
							"name": "REST API Tryout -  POST Request  - RAW",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\" : \"REST\",\r\n    \"operation\": \"POST\",\r\n    \"endpoint\": \"http://petstore.swagger.io/v2\",\r\n    \"resource\" : \"/pet\",\r\n    \"headers\" : {\r\n        \"Content-Type\" : \"application/xml\"\r\n    },\r\n    \"body\": {\r\n        \"request_type\": \"raw\",\r\n        \"payload\": \"<Pet><name>siyaan</name><status>available</status></Pet>\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/apis/d50d9fa8-63c0-4fa7-85e6-efec973419f6/try",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"apis",
										"d50d9fa8-63c0-4fa7-85e6-efec973419f6",
										"try"
									]
								}
							},
							"response": []
						},
						{
							"name": "REST API Tryout -  PUT Request - RAW",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\" : \"REST\",\r\n    \"operation\": \"PUT\",\r\n    \"endpoint\": \"https://jsonplaceholder.typicode.com\",\r\n    \"resource\" : \"/posts/{id}\",\r\n    \"variables\" : {\r\n        \"id\" : \"1\"\r\n    },\r\n    \"headers\" : {\r\n        \"Content-Type\" : \"application/json\"\r\n    },\r\n    \"body\": {\r\n        \"request_type\": \"raw\",\r\n        \"payload\": \"{\\\"title\\\" : \\\"test\\\",\\\"body\\\" : \\\"this is my body\\\"}\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/apis/d50d9fa8-63c0-4fa7-85e6-efec973419f6/try",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"apis",
										"d50d9fa8-63c0-4fa7-85e6-efec973419f6",
										"try"
									]
								}
							},
							"response": []
						},
						{
							"name": "REST API Tryout -  PATCH Request - RAW",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\" : \"REST\",\r\n    \"operation\": \"PATCH\",\r\n    \"endpoint\": \"https://jsonplaceholder.typicode.com\",\r\n    \"resource\" : \"/posts/{id}\",\r\n    \"variables\" : {\r\n        \"id\" : \"1\"\r\n    },\r\n    \"headers\" : {\r\n        \"Content-Type\" : \"application/json\"\r\n    },\r\n    \"body\": {\r\n        \"request_type\": \"raw\",\r\n        \"payload\": \"{\\\"title\\\" : \\\"test\\\"}\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/apis/d50d9fa8-63c0-4fa7-85e6-efec973419f6/try",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"apis",
										"d50d9fa8-63c0-4fa7-85e6-efec973419f6",
										"try"
									]
								}
							},
							"response": []
						},
						{
							"name": "REST API Tryout -  DELETE Request",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\" : \"REST\",\r\n    \"operation\": \"DELETE\",\r\n    \"endpoint\": \"https://jsonplaceholder.typicode.com\",\r\n    \"resource\" : \"/posts/{id}\",\r\n    \"variables\" : {\r\n        \"id\" : \"1\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/apis/d50d9fa8-63c0-4fa7-85e6-efec973419f6/try",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"apis",
										"d50d9fa8-63c0-4fa7-85e6-efec973419f6",
										"try"
									]
								}
							},
							"response": []
						},
						{
							"name": "REST API Tryout -  URL Encoded",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\" : \"REST\",\r\n    \"operation\": \"POST\",\r\n    \"endpoint\": \"http://petstore.swagger.io/v2\",\r\n    \"resource\" : \"/pets/{id}\",\r\n    \"variables\" : {\r\n        \"id\" : \"1\"\r\n    },\r\n    \"headers\" : {\r\n        \"Content-Type\" : \"application/x-www-form-urlencoded\",\r\n        \"Accept\" : \"application/json\"\r\n    },\r\n     \"body\": {\r\n        \"request_type\": \"urlencoded\",\r\n        \"payload\": [\r\n            {\r\n                \"key\": \"name\",\r\n                \"value\": \"puggie\",\r\n                \"type\" : \"text\"\r\n            },\r\n            {\r\n                \"key\": \"status\",\r\n                \"value\": \"available\",\r\n                \"type\" : \"text\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/apis/d50d9fa8-63c0-4fa7-85e6-efec973419f6/try",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"apis",
										"d50d9fa8-63c0-4fa7-85e6-efec973419f6",
										"try"
									]
								}
							},
							"response": []
						},
						{
							"name": "REST API Tryout -  Form Submit",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\" : \"REST\",\r\n    \"operation\": \"POST\",\r\n    \"endpoint\": \"https://postman-echo.com\",\r\n    \"resource\" : \"/post\",\r\n    \"headers\" : {\r\n        \"Content-Type\" : \"multipart/form-data\"\r\n    },\r\n     \"body\": {\r\n        \"request_type\": \"multipart\",\r\n        \"payload\": [\r\n            {\r\n                \"key\": \"foo1\",\r\n                \"value\": \"bar1\",\r\n                \"type\" : \"text\"\r\n            },\r\n            {\r\n                \"key\": \"foo2\",\r\n                \"value\": \"bar2\",\r\n                \"type\" : \"text\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/apis/d50d9fa8-63c0-4fa7-85e6-efec973419f6/try",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"apis",
										"d50d9fa8-63c0-4fa7-85e6-efec973419f6",
										"try"
									]
								}
							},
							"response": []
						},
						{
							"name": "REST API Tryout - POST Multipart File request",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-tryout-endpoint",
										"value": "https://file.io/?expires=1w",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/C:/Users/graj/Desktop/tryout/engagementanalytics.pdf"
										}
									]
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/apis/595c2ff7-c13d-4389-a322-9c9a4cea1c5a/fileTypeTry",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"apis",
										"595c2ff7-c13d-4389-a322-9c9a4cea1c5a",
										"fileTypeTry"
									]
								}
							},
							"response": []
						},
						{
							"name": "REST API Tryout - POST Binary Request",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-tryout-endpoint",
										"value": "http://localhost:2345/binaryupload",
										"type": "text"
									}
								],
								"body": {
									"mode": "file",
									"file": {
										"src": "/C:/Users/graj/Desktop/tryout/petapi.json"
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/apis/595c2ff7-c13d-4389-a322-9c9a4cea1c5a/fileTypeTry",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"apis",
										"595c2ff7-c13d-4389-a322-9c9a4cea1c5a",
										"fileTypeTry"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "API Details",
					"item": [
						{
							"name": "Get API By ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://{{host}}/rest/v1/apis/754eeb5d-9fae-4e77-a29a-72afb8b335f8",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"apis",
										"754eeb5d-9fae-4e77-a29a-72afb8b335f8"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the API Resources by ID (For REST)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://{{host}}/rest/v1/resources/754eeb5d-9fae-4e77-a29a-72afb8b335f8",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"resources",
										"754eeb5d-9fae-4e77-a29a-72afb8b335f8"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the API Methods by ID (For REST)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://{{host}}/rest/v1/methods/754eeb5d-9fae-4e77-a29a-72afb8b335f8",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"methods",
										"754eeb5d-9fae-4e77-a29a-72afb8b335f8"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get API by method tags grouping",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://{{host}}/rest/v1/apis/754eeb5d-9fae-4e77-a29a-72afb8b335f8/grpups",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"apis",
										"754eeb5d-9fae-4e77-a29a-72afb8b335f8",
										"grpups"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get All APIs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{host}}/rest/v1/apis/",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get APIs count",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://{{host}}/rest/v1/apis/_count",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis",
								"_count"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get APIs using filter",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://{{host}}/rest/v1/apis/filter",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis",
								"filter"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete API by ID",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/apis/754eeb5d-9fae-4e77-a29a-72afb8b335f8",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis",
								"754eeb5d-9fae-4e77-a29a-72afb8b335f8"
							]
						}
					},
					"response": []
				},
				{
					"name": "Import / Publish API by File",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "data",
									"type": "file",
									"src": []
								},
								{
									"key": "type",
									"value": "acdl",
									"type": "text"
								},
								{
									"key": "async",
									"value": "false",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/apis",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Import / Publish API by URL",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "url",
									"value": "http://dneonline.com/calculator.asmx?wsdl",
									"type": "text"
								},
								{
									"key": "type",
									"value": "wsdl",
									"type": "text"
								},
								{
									"key": "async",
									"value": "false",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/apis",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Import / Publish API by Content",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "api-content",
									"value": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<wsdl:definitions xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:tm=\"http://microsoft.com/wsdl/mime/textMatching/\" xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:mime=\"http://schemas.xmlsoap.org/wsdl/mime/\" xmlns:tns=\"http://tempuri.org/\" xmlns:s=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://schemas.xmlsoap.org/wsdl/soap12/\" xmlns:http=\"http://schemas.xmlsoap.org/wsdl/http/\" targetNamespace=\"http://tempuri.org/\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\">\n  <wsdl:types>\n    <s:schema elementFormDefault=\"qualified\" targetNamespace=\"http://tempuri.org/\">\n      <s:element name=\"Add\">\n        <s:complexType>\n          <s:sequence>\n            <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"intA\" type=\"s:int\" />\n            <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"intB\" type=\"s:int\" />\n          </s:sequence>\n        </s:complexType>\n      </s:element>\n      <s:element name=\"AddResponse\">\n        <s:complexType>\n          <s:sequence>\n            <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"AddResult\" type=\"s:int\" />\n          </s:sequence>\n        </s:complexType>\n      </s:element>\n      <s:element name=\"Subtract\">\n        <s:complexType>\n          <s:sequence>\n            <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"intA\" type=\"s:int\" />\n            <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"intB\" type=\"s:int\" />\n          </s:sequence>\n        </s:complexType>\n      </s:element>\n      <s:element name=\"SubtractResponse\">\n        <s:complexType>\n          <s:sequence>\n            <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"SubtractResult\" type=\"s:int\" />\n          </s:sequence>\n        </s:complexType>\n      </s:element>\n      <s:element name=\"Multiply\">\n        <s:complexType>\n          <s:sequence>\n            <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"intA\" type=\"s:int\" />\n            <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"intB\" type=\"s:int\" />\n          </s:sequence>\n        </s:complexType>\n      </s:element>\n      <s:element name=\"MultiplyResponse\">\n        <s:complexType>\n          <s:sequence>\n            <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"MultiplyResult\" type=\"s:int\" />\n          </s:sequence>\n        </s:complexType>\n      </s:element>\n      <s:element name=\"Divide\">\n        <s:complexType>\n          <s:sequence>\n            <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"intA\" type=\"s:int\" />\n            <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"intB\" type=\"s:int\" />\n          </s:sequence>\n        </s:complexType>\n      </s:element>\n      <s:element name=\"DivideResponse\">\n        <s:complexType>\n          <s:sequence>\n            <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"DivideResult\" type=\"s:int\" />\n          </s:sequence>\n        </s:complexType>\n      </s:element>\n    </s:schema>\n  </wsdl:types>\n  <wsdl:message name=\"AddSoapIn\">\n    <wsdl:part name=\"parameters\" element=\"tns:Add\" />\n  </wsdl:message>\n  <wsdl:message name=\"AddSoapOut\">\n    <wsdl:part name=\"parameters\" element=\"tns:AddResponse\" />\n  </wsdl:message>\n  <wsdl:message name=\"SubtractSoapIn\">\n    <wsdl:part name=\"parameters\" element=\"tns:Subtract\" />\n  </wsdl:message>\n  <wsdl:message name=\"SubtractSoapOut\">\n    <wsdl:part name=\"parameters\" element=\"tns:SubtractResponse\" />\n  </wsdl:message>\n  <wsdl:message name=\"MultiplySoapIn\">\n    <wsdl:part name=\"parameters\" element=\"tns:Multiply\" />\n  </wsdl:message>\n  <wsdl:message name=\"MultiplySoapOut\">\n    <wsdl:part name=\"parameters\" element=\"tns:MultiplyResponse\" />\n  </wsdl:message>\n  <wsdl:message name=\"DivideSoapIn\">\n    <wsdl:part name=\"parameters\" element=\"tns:Divide\" />\n  </wsdl:message>\n  <wsdl:message name=\"DivideSoapOut\">\n    <wsdl:part name=\"parameters\" element=\"tns:DivideResponse\" />\n  </wsdl:message>\n  <wsdl:portType name=\"CalculatorSoap\">\n    <wsdl:operation name=\"Add\">\n      <wsdl:documentation xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\">Adds two integers. This is a test WebService. ©DNE Online</wsdl:documentation>\n      <wsdl:input message=\"tns:AddSoapIn\" />\n      <wsdl:output message=\"tns:AddSoapOut\" />\n    </wsdl:operation>\n    <wsdl:operation name=\"Subtract\">\n      <wsdl:input message=\"tns:SubtractSoapIn\" />\n      <wsdl:output message=\"tns:SubtractSoapOut\" />\n    </wsdl:operation>\n    <wsdl:operation name=\"Multiply\">\n      <wsdl:input message=\"tns:MultiplySoapIn\" />\n      <wsdl:output message=\"tns:MultiplySoapOut\" />\n    </wsdl:operation>\n    <wsdl:operation name=\"Divide\">\n      <wsdl:input message=\"tns:DivideSoapIn\" />\n      <wsdl:output message=\"tns:DivideSoapOut\" />\n    </wsdl:operation>\n  </wsdl:portType>\n  <wsdl:binding name=\"CalculatorSoap\" type=\"tns:CalculatorSoap\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" />\n    <wsdl:operation name=\"Add\">\n      <soap:operation soapAction=\"http://tempuri.org/Add\" style=\"document\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n    <wsdl:operation name=\"Subtract\">\n      <soap:operation soapAction=\"http://tempuri.org/Subtract\" style=\"document\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n    <wsdl:operation name=\"Multiply\">\n      <soap:operation soapAction=\"http://tempuri.org/Multiply\" style=\"document\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n    <wsdl:operation name=\"Divide\">\n      <soap:operation soapAction=\"http://tempuri.org/Divide\" style=\"document\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:binding name=\"CalculatorSoap12\" type=\"tns:CalculatorSoap\">\n    <soap12:binding transport=\"http://schemas.xmlsoap.org/soap/http\" />\n    <wsdl:operation name=\"Add\">\n      <soap12:operation soapAction=\"http://tempuri.org/Add\" style=\"document\" />\n      <wsdl:input>\n        <soap12:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap12:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n    <wsdl:operation name=\"Subtract\">\n      <soap12:operation soapAction=\"http://tempuri.org/Subtract\" style=\"document\" />\n      <wsdl:input>\n        <soap12:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap12:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n    <wsdl:operation name=\"Multiply\">\n      <soap12:operation soapAction=\"http://tempuri.org/Multiply\" style=\"document\" />\n      <wsdl:input>\n        <soap12:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap12:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n    <wsdl:operation name=\"Divide\">\n      <soap12:operation soapAction=\"http://tempuri.org/Divide\" style=\"document\" />\n      <wsdl:input>\n        <soap12:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap12:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:service name=\"Calculator\">\n    <wsdl:port name=\"CalculatorSoap\" binding=\"tns:CalculatorSoap\">\n      <soap:address location=\"http://dneonline.com/calculator.asmx\" />\n    </wsdl:port>\n    <wsdl:port name=\"CalculatorSoap12\" binding=\"tns:CalculatorSoap12\">\n      <soap12:address location=\"http://dneonline.com/calculator.asmx\" />\n    </wsdl:port>\n  </wsdl:service>\n</wsdl:definitions>",
									"type": "text"
								},
								{
									"key": "type",
									"value": "wsdl",
									"type": "text"
								},
								{
									"key": "async",
									"value": "false",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/apis",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Re-publish API by File",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "data",
									"type": "file",
									"src": []
								},
								{
									"key": "type",
									"value": "acdl",
									"type": "text"
								},
								{
									"key": "async",
									"value": "false",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/apis/754eeb5d-9fae-4e77-a29a-72afb8b335f8",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis",
								"754eeb5d-9fae-4e77-a29a-72afb8b335f8"
							]
						}
					},
					"response": []
				},
				{
					"name": "Re-publish API by URL",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "url",
									"value": "http://dneonline.com/calculator.asmx?wsdl",
									"type": "text"
								},
								{
									"key": "type",
									"value": "wsdl",
									"type": "text"
								},
								{
									"key": "async",
									"value": "false",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/apis/754eeb5d-9fae-4e77-a29a-72afb8b335f8",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis",
								"754eeb5d-9fae-4e77-a29a-72afb8b335f8"
							]
						}
					},
					"response": []
				},
				{
					"name": "Re-publish API by Content",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "api-content",
									"value": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<wsdl:definitions xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:tm=\"http://microsoft.com/wsdl/mime/textMatching/\" xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:mime=\"http://schemas.xmlsoap.org/wsdl/mime/\" xmlns:tns=\"http://tempuri.org/\" xmlns:s=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://schemas.xmlsoap.org/wsdl/soap12/\" xmlns:http=\"http://schemas.xmlsoap.org/wsdl/http/\" targetNamespace=\"http://tempuri.org/\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\">\n  <wsdl:types>\n    <s:schema elementFormDefault=\"qualified\" targetNamespace=\"http://tempuri.org/\">\n      <s:element name=\"Add\">\n        <s:complexType>\n          <s:sequence>\n            <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"intA\" type=\"s:int\" />\n            <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"intB\" type=\"s:int\" />\n          </s:sequence>\n        </s:complexType>\n      </s:element>\n      <s:element name=\"AddResponse\">\n        <s:complexType>\n          <s:sequence>\n            <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"AddResult\" type=\"s:int\" />\n          </s:sequence>\n        </s:complexType>\n      </s:element>\n      <s:element name=\"Subtract\">\n        <s:complexType>\n          <s:sequence>\n            <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"intA\" type=\"s:int\" />\n            <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"intB\" type=\"s:int\" />\n          </s:sequence>\n        </s:complexType>\n      </s:element>\n      <s:element name=\"SubtractResponse\">\n        <s:complexType>\n          <s:sequence>\n            <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"SubtractResult\" type=\"s:int\" />\n          </s:sequence>\n        </s:complexType>\n      </s:element>\n      <s:element name=\"Multiply\">\n        <s:complexType>\n          <s:sequence>\n            <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"intA\" type=\"s:int\" />\n            <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"intB\" type=\"s:int\" />\n          </s:sequence>\n        </s:complexType>\n      </s:element>\n      <s:element name=\"MultiplyResponse\">\n        <s:complexType>\n          <s:sequence>\n            <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"MultiplyResult\" type=\"s:int\" />\n          </s:sequence>\n        </s:complexType>\n      </s:element>\n      <s:element name=\"Divide\">\n        <s:complexType>\n          <s:sequence>\n            <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"intA\" type=\"s:int\" />\n            <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"intB\" type=\"s:int\" />\n          </s:sequence>\n        </s:complexType>\n      </s:element>\n      <s:element name=\"DivideResponse\">\n        <s:complexType>\n          <s:sequence>\n            <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"DivideResult\" type=\"s:int\" />\n          </s:sequence>\n        </s:complexType>\n      </s:element>\n    </s:schema>\n  </wsdl:types>\n  <wsdl:message name=\"AddSoapIn\">\n    <wsdl:part name=\"parameters\" element=\"tns:Add\" />\n  </wsdl:message>\n  <wsdl:message name=\"AddSoapOut\">\n    <wsdl:part name=\"parameters\" element=\"tns:AddResponse\" />\n  </wsdl:message>\n  <wsdl:message name=\"SubtractSoapIn\">\n    <wsdl:part name=\"parameters\" element=\"tns:Subtract\" />\n  </wsdl:message>\n  <wsdl:message name=\"SubtractSoapOut\">\n    <wsdl:part name=\"parameters\" element=\"tns:SubtractResponse\" />\n  </wsdl:message>\n  <wsdl:message name=\"MultiplySoapIn\">\n    <wsdl:part name=\"parameters\" element=\"tns:Multiply\" />\n  </wsdl:message>\n  <wsdl:message name=\"MultiplySoapOut\">\n    <wsdl:part name=\"parameters\" element=\"tns:MultiplyResponse\" />\n  </wsdl:message>\n  <wsdl:message name=\"DivideSoapIn\">\n    <wsdl:part name=\"parameters\" element=\"tns:Divide\" />\n  </wsdl:message>\n  <wsdl:message name=\"DivideSoapOut\">\n    <wsdl:part name=\"parameters\" element=\"tns:DivideResponse\" />\n  </wsdl:message>\n  <wsdl:portType name=\"CalculatorSoap\">\n    <wsdl:operation name=\"Add\">\n      <wsdl:documentation xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\">Adds two integers. This is a test WebService. ©DNE Online</wsdl:documentation>\n      <wsdl:input message=\"tns:AddSoapIn\" />\n      <wsdl:output message=\"tns:AddSoapOut\" />\n    </wsdl:operation>\n    <wsdl:operation name=\"Subtract\">\n      <wsdl:input message=\"tns:SubtractSoapIn\" />\n      <wsdl:output message=\"tns:SubtractSoapOut\" />\n    </wsdl:operation>\n    <wsdl:operation name=\"Multiply\">\n      <wsdl:input message=\"tns:MultiplySoapIn\" />\n      <wsdl:output message=\"tns:MultiplySoapOut\" />\n    </wsdl:operation>\n    <wsdl:operation name=\"Divide\">\n      <wsdl:input message=\"tns:DivideSoapIn\" />\n      <wsdl:output message=\"tns:DivideSoapOut\" />\n    </wsdl:operation>\n  </wsdl:portType>\n  <wsdl:binding name=\"CalculatorSoap\" type=\"tns:CalculatorSoap\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" />\n    <wsdl:operation name=\"Add\">\n      <soap:operation soapAction=\"http://tempuri.org/Add\" style=\"document\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n    <wsdl:operation name=\"Subtract\">\n      <soap:operation soapAction=\"http://tempuri.org/Subtract\" style=\"document\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n    <wsdl:operation name=\"Multiply\">\n      <soap:operation soapAction=\"http://tempuri.org/Multiply\" style=\"document\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n    <wsdl:operation name=\"Divide\">\n      <soap:operation soapAction=\"http://tempuri.org/Divide\" style=\"document\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:binding name=\"CalculatorSoap12\" type=\"tns:CalculatorSoap\">\n    <soap12:binding transport=\"http://schemas.xmlsoap.org/soap/http\" />\n    <wsdl:operation name=\"Add\">\n      <soap12:operation soapAction=\"http://tempuri.org/Add\" style=\"document\" />\n      <wsdl:input>\n        <soap12:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap12:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n    <wsdl:operation name=\"Subtract\">\n      <soap12:operation soapAction=\"http://tempuri.org/Subtract\" style=\"document\" />\n      <wsdl:input>\n        <soap12:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap12:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n    <wsdl:operation name=\"Multiply\">\n      <soap12:operation soapAction=\"http://tempuri.org/Multiply\" style=\"document\" />\n      <wsdl:input>\n        <soap12:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap12:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n    <wsdl:operation name=\"Divide\">\n      <soap12:operation soapAction=\"http://tempuri.org/Divide\" style=\"document\" />\n      <wsdl:input>\n        <soap12:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap12:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:service name=\"Calculator\">\n    <wsdl:port name=\"CalculatorSoap\" binding=\"tns:CalculatorSoap\">\n      <soap:address location=\"http://dneonline.com/calculator.asmx\" />\n    </wsdl:port>\n    <wsdl:port name=\"CalculatorSoap12\" binding=\"tns:CalculatorSoap12\">\n      <soap12:address location=\"http://dneonline.com/calculator.asmx\" />\n    </wsdl:port>\n  </wsdl:service>\n</wsdl:definitions>",
									"type": "text"
								},
								{
									"key": "type",
									"value": "wsdl",
									"type": "text"
								},
								{
									"key": "async",
									"value": "false",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/apis/754eeb5d-9fae-4e77-a29a-72afb8b335f8",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis",
								"754eeb5d-9fae-4e77-a29a-72afb8b335f8"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_PublishStatus",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "data",
									"type": "file",
									"src": []
								},
								{
									"key": "type",
									"value": "acdl",
									"type": "text"
								},
								{
									"key": "async",
									"value": "false",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/apis/status/47a2cb3f-9612-4567-91b6-fa4a5dba4f19",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis",
								"status",
								"47a2cb3f-9612-4567-91b6-fa4a5dba4f19"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get versions of API By Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/apis/a8e8a660-1865-4f97-83ee-ddd8911639b0/versions",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis",
								"a8e8a660-1865-4f97-83ee-ddd8911639b0",
								"versions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get stages of API By Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/apis/534dbbb7-67bb-414f-bf8b-0177c53f4f3a/stages",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis",
								"534dbbb7-67bb-414f-bf8b-0177c53f4f3a",
								"stages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Communities linked with API",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://{{host}}/rest/v1/apis/53488d75-a3f3-4e57-8f1e-0dd46ed1fa2f/communities",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis",
								"53488d75-a3f3-4e57-8f1e-0dd46ed1fa2f",
								"communities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Packages",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://{{host}}/rest/v1/apis/53488d75-a3f3-4e57-8f1e-0dd46ed1fa2f/packages",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis",
								"53488d75-a3f3-4e57-8f1e-0dd46ed1fa2f",
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Application - Direct",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/apis/1dea2206-d0b4-4aac-b5ee-7130489b2ae3/applications",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis",
								"1dea2206-d0b4-4aac-b5ee-7130489b2ae3",
								"applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Application - Subscribed",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/apis/1dea2206-d0b4-4aac-b5ee-7130489b2ae3/subscriptions",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis",
								"1dea2206-d0b4-4aac-b5ee-7130489b2ae3",
								"subscriptions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Topics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/apis/1dea2206-d0b4-4aac-b5ee-7130489b2ae3/topics",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis",
								"1dea2206-d0b4-4aac-b5ee-7130489b2ae3",
								"topics"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get followers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{host}}/rest/v1/apis/5adaed5e-befe-4954-b988-2853f63550f6/followers",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis",
								"5adaed5e-befe-4954-b988-2853f63550f6",
								"followers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get followers count",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{host}}/rest/v1/apis/17f82fcc-a8cc-4f7c-b8a9-3c0632eb9e01/followers/_count",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis",
								"17f82fcc-a8cc-4f7c-b8a9-3c0632eb9e01",
								"followers",
								"_count"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add/Remove follower",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/apis/5adaed5e-befe-4954-b988-2853f63550f6/followers",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis",
								"5adaed5e-befe-4954-b988-2853f63550f6",
								"followers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Rate an API",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"rating\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/apis/4c2a4956-3eea-4ea5-b74c-9408ed82a9f2/rate",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis",
								"4c2a4956-3eea-4ea5-b74c-9408ed82a9f2",
								"rate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the rating of an API",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/apis/4c2a4956-3eea-4ea5-b74c-9408ed82a9f2/rate",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis",
								"4c2a4956-3eea-4ea5-b74c-9408ed82a9f2",
								"rate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Export to OpenAPI spec",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/apis/715e6192-4048-49f7-bf0e-96a848791b0f/export",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis",
								"715e6192-4048-49f7-bf0e-96a848791b0f",
								"export"
							],
							"query": [
								{
									"key": "type",
									"value": "yaml",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Applications to link to the given API",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/apis/1dea2206-d0b4-4aac-b5ee-7130489b2ae3/applications/available",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis",
								"1dea2206-d0b4-4aac-b5ee-7130489b2ae3",
								"applications",
								"available"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update view preference",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "1234",
									"type": "string"
								},
								{
									"key": "username",
									"value": "consumer1",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/apis/3644a47c-a7fe-4b26-89d2-e37ba0428c2f/preferences?type=SOAP",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis",
								"3644a47c-a7fe-4b26-89d2-e37ba0428c2f",
								"preferences"
							],
							"query": [
								{
									"key": "type",
									"value": "SOAP"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit an API",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"api\": {\r\n        \"update\": [\r\n            {\r\n                \"attribute\": \"NAME\",\r\n                \"locale\": \"en\",\r\n                \"value\": \"Name modified\"\r\n            }\r\n        ],\r\n        \"insert\": [\r\n            {\r\n                \"attribute\": \"ATTACHMENT\",\r\n                \"value\": \"/portal/rest/v1/files/52c0b766-8bdc-4932-93f2-c7bcb8a16750\"\r\n            }\r\n        ]\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/apis/3644a47c-a7fe-4b26-89d2-e37ba0428c2f/edits",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis",
								"3644a47c-a7fe-4b26-89d2-e37ba0428c2f",
								"edits"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update the logo",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/apis/3644a47c-a7fe-4b26-89d2-e37ba0428c2f/logo",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis",
								"3644a47c-a7fe-4b26-89d2-e37ba0428c2f",
								"logo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new attachments",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/apis/3644a47c-a7fe-4b26-89d2-e37ba0428c2f/attachments",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis",
								"3644a47c-a7fe-4b26-89d2-e37ba0428c2f",
								"attachments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify the lifecycyle state of an API",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/apis/3644a47c-a7fe-4b26-89d2-e37ba0428c2f/state?targetState=LIVE",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"apis",
								"3644a47c-a7fe-4b26-89d2-e37ba0428c2f",
								"state"
							],
							"query": [
								{
									"key": "targetState",
									"value": "LIVE"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Approval Management",
			"item": [
				{
					"name": "Approve/Reject",
					"item": [
						{
							"name": "All pending approvals",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/approvals/request",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"approvals",
										"request"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Id - particular approval",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/approvals/request/1",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"approvals",
										"request",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Approve Request {id}",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/approvals/request/1/approve",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"approvals",
										"request",
										"1",
										"approve"
									]
								}
							},
							"response": []
						},
						{
							"name": "Approve multiple request",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[]"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/approvals/request/approve",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"approvals",
										"request",
										"approve"
									]
								}
							},
							"response": []
						},
						{
							"name": "Reject Reqeust {id}",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/approvals/request/1/reject",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"approvals",
										"request",
										"1",
										"reject"
									]
								}
							},
							"response": []
						},
						{
							"name": "Reject mutiple reqeust",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[]"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/approvals/request/reject",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"approvals",
										"request",
										"reject"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Flows",
					"item": [
						{
							"name": "Create a Flow",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"New Flow\",\r\n    \"description\": \"Flow with multilevel approval\",\r\n    \"steps\": [\r\n        {\r\n            \"approver\": [\r\n                {\r\n                    \"id\": \"200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4\",\r\n                    \"name\": \"Administrator\"\r\n                }\r\n            ],\r\n            \"approver_type\": \"USER\",\r\n            \"mode\": \"EVERYONE\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/approvals/",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"approvals",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a flow",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"My application approval flow\",\r\n    \"description\": \"Flow with multilevel approval\",\r\n    \"steps\": [\r\n        {\r\n            \"approver\": [\r\n                {\r\n                    \"id\": \"200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4\",\r\n                    \"name\": \"Administrator\"\r\n                }\r\n            ],\r\n            \"approver_type\": \"USER\",\r\n            \"mode\": \"EVERYONE\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/approvals/b6128472-52ae-4225-8d8d-b44fe8a94bb5",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"approvals",
										"b6128472-52ae-4225-8d8d-b44fe8a94bb5"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all flows",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/approvals/",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"approvals",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a flow by id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/approvals/25f83788-4db7-439a-acb0-ae4225d65e42",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"approvals",
										"25f83788-4db7-439a-acb0-ae4225d65e42"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get all flow instance",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/approvals/instance?status=COMPLETED",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"approvals",
								"instance"
							],
							"query": [
								{
									"key": "status",
									"value": "COMPLETED"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all approval requests of a step",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/approvals/instance/step/024e0e68-a7ce-4931-9464-2d2a92c0bae1/request",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"approvals",
								"instance",
								"step",
								"024e0e68-a7ce-4931-9464-2d2a92c0bae1",
								"request"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all approval request trace of a flow",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/approvals/instance/b2e58c4d-6fe4-4e09-8f07-c9d2c4862272/trace",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"approvals",
								"instance",
								"b2e58c4d-6fe4-4e09-8f07-c9d2c4862272",
								"trace"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Onboarding approval flow",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/approval/policy?type=USER_CREATION",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"approval",
								"policy"
							],
							"query": [
								{
									"key": "type",
									"value": "USER_CREATION"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Onboarding approval flow",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"policies\": [\r\n        {\r\n            \"type\": \"INTERNAL_APPROVAL\",\r\n            \"parameters\": {\r\n                \"flow_id\": \"b6128472-52ae-4225-8d8d-b44fe8a94bb5\"\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"EMAIL_VERIFICATION\",\r\n            \"parameters\": {\r\n                \"expiry\": \"2d\"\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"EXTERNAL_APPROVAL\",\r\n            \"parameters\": {\r\n                \"expiry\": \"10d\"\r\n            }\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/approval/policy?type=USER_CREATION",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"approval",
								"policy"
							],
							"query": [
								{
									"key": "type",
									"value": "USER_CREATION"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Application approval flow",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/approval/policy?type=APPLICATION_CREATION",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"approval",
								"policy"
							],
							"query": [
								{
									"key": "type",
									"value": "APPLICATION_CREATION"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Application approval flow",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "xsrf-token",
								"value": "wi78rt24cL-jKzqtY-QVv2Ejk3r41IkYL056unlF7SE",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"policies\": [\r\n        {\r\n            \"type\": \"EXTERNAL_APPROVAL\",\r\n            \"parameters\": {\r\n                \"expiry\": \"10d\"\r\n            }\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/approval/policy?type=APPLICATION_CREATION&enableForRegistration=true",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"approval",
								"policy"
							],
							"query": [
								{
									"key": "type",
									"value": "APPLICATION_CREATION"
								},
								{
									"key": "enableForRegistration",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get API Registration approval flow",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/approval/policy?type=APPLICATION_API_REGISTRATION",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"approval",
								"policy"
							],
							"query": [
								{
									"key": "type",
									"value": "APPLICATION_API_REGISTRATION"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "workflow endpoints"
		},
		{
			"name": "Application Management",
			"item": [
				{
					"name": "User Request Management",
					"item": [
						{
							"name": "Create Application Creation Request",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"context\": {\n        \"name\": \"App100\",\n        \"description\": \"This application is used for building Hotel app\",\n        \"apis\": [\n            \"208eefed-aee7-478d-9504-f04978bdfbc7\"\n        ],\n        \"redirect_uris\": [\n            \"http://localhost:18101\"\n        ],\n        \"custom\": {\n            \"email\": \"abc@xyz.com\"\n        }\n    },\n    \"type\": \"APPLICATION_CREATION_REQUEST\"\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/requests",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"requests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Scope Increase Request",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"context\": {\n        \"application\": \"a09c1a81-7f16-4cb2-a1de-87edf9ac3ba7\",\n        \"apis\": [\n            \"208eefed-aee7-478d-9504-f04978bdfbc7\"\n        ]\n    },\n    \"type\": \"APPLICATION_API_REGISTRATION_REQUEST\"\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/requests",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"requests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Update Request",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"context\": {\n        \"application\": \"18c44cd9-0cd4-4a07-b068-f42541b02a01\",\n        \"redirect_uris\": [\n            \"http://localhost:18101/updated\"\n        ]\n    },\n    \"type\": \"APPLICATION_UPDATE_REQUEST\"\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/requests",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"requests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Deletion Request",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"context\": {\r\n        \"application\": \"a09c1a81-7f16-4cb2-a1de-87edf9ac3ba7\"\r\n    },\r\n    \"type\": \"APPLICATION_DELETION_REQUEST\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/requests",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"requests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Revoke Request",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"context\": {\n        \"application\": \"a09c1a81-7f16-4cb2-a1de-87edf9ac3ba7\",\n        \"apis\": [\n            \"208eefed-aee7-478d-9504-f04978bdfbc7\"\n        ]\n    },\n    \"type\": \"APPLICATION_API_DEREGISTRATION_REQUEST\"\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/requests",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"requests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Subscription Revoke Request",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"context\": {\n        \"application\": \"18c44cd9-0cd4-4a07-b068-f42541b02a01\"\n    },\n    \"type\": \"SUBSCRIPTION_REVOKE_REQUEST\"\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/requests",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"requests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Subscription Creation Request",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"context\": {\n        \"name\": \"Subtoken3\",\n        \"description\": \"This application is used for building Hotel app\",\n        \"plan\": \"d5adf283-f394-45b6-8d7a-2f85290c6219\",\n        \"package\": \"5811a0e3-3996-4ddc-b467-1bae52a0688c\",\n        \"redirect_uris\": [\n            \"http://localhost:18101\"\n        ]\n    },\n    \"type\": \"SUBSCRIPTION_CREATION_REQUEST\"\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/requests",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"requests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Pending Requests by type",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/requests/pending?type=SUBSCRIPTION_CREATION_REQUEST",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"requests",
										"pending"
									],
									"query": [
										{
											"key": "type",
											"value": "SUBSCRIPTION_CREATION_REQUEST"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get My Requests of type",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/requests?type=SUBSCRIPTION_CREATION_REQUEST",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"requests"
									],
									"query": [
										{
											"key": "type",
											"value": "SUBSCRIPTION_CREATION_REQUEST"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Request by Id",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/requests/3035d2c4-c9ae-46da-bebf-b26b269fa0f4",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"requests",
										"3035d2c4-c9ae-46da-bebf-b26b269fa0f4"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get request trace",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/requests/9a61eef0-e4e8-4320-8a05-3231f336acab/trace",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"requests",
										"9a61eef0-e4e8-4320-8a05-3231f336acab",
										"trace"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete user request",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/requests/3035d2c4-c9ae-46da-bebf-b26b269fa0f4",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"requests",
										"3035d2c4-c9ae-46da-bebf-b26b269fa0f4"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get Application by Id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/applications/f64c2a29-a5fd-4416-b79a-656f6bbe45a3",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"applications",
								"f64c2a29-a5fd-4416-b79a-656f6bbe45a3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all user requests",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/applications/f64c2a29-a5fd-4416-b79a-656f6bbe45a3/requests",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"applications",
								"f64c2a29-a5fd-4416-b79a-656f6bbe45a3",
								"requests"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create an Application",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Test app1\",\r\n    \"summary\": \"This application is used for building Hotel app\",\r\n    \"description\": \"Description of this Application for Hotel\"\r\n}"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/applications/",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"applications",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Application by Id",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Test app1\",\r\n    \"subscription\": false,\r\n    \"isowner\": false,\r\n    \"details\": [],\r\n    \"summary\": \"This application is used for building Hotel app\",\r\n    \"description\": \"Description of this Application for Hotel\"\r\n}"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/applications/044f7957-f122-4b17-85c1-dc380692737c",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"applications",
								"044f7957-f122-4b17-85c1-dc380692737c"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all applications",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/applications",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "List all applications by admin",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/applications/_all",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"applications",
								"_all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Application by id",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/applications/80fe2e50-9e85-46b9-9287-9311186c6832",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"applications",
								"80fe2e50-9e85-46b9-9287-9311186c6832"
							]
						}
					},
					"response": []
				},
				{
					"name": "Share wtih Team, User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\n\t\"teams\": [],\n\t\"users\": []\n\t\n}"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/applications/80fe2e50-9e85-46b9-9287-9311186c6832/share",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"applications",
								"80fe2e50-9e85-46b9-9287-9311186c6832",
								"share"
							]
						}
					},
					"response": []
				},
				{
					"name": "UnShare wtih Team, User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\n\t\"teams\": [],\n\t\"users\": []\n\t\n}"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/applications/80fe2e50-9e85-46b9-9287-9311186c6832/share",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"applications",
								"80fe2e50-9e85-46b9-9287-9311186c6832",
								"share"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Jwt Token",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "username",
									"type": "text"
								},
								{
									"key": "password",
									"value": "password",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/applications/2c3c2be5-9140-4fa5-b2b0-e317a439e821/jwt",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"applications",
								"2c3c2be5-9140-4fa5-b2b0-e317a439e821",
								"jwt"
							]
						}
					},
					"response": []
				},
				{
					"name": "List my tokens",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/applications/55de08f7-9db9-4d60-b478-2355fa2520d9/tokens?type=JWT",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"applications",
								"55de08f7-9db9-4d60-b478-2355fa2520d9",
								"tokens"
							],
							"query": [
								{
									"key": "type",
									"value": "JWT"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a token by id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/applications/55de08f7-9db9-4d60-b478-2355fa2520d9/tokens/f64c2a29-a5fd-4416-b79a-656f6bbe45a3",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"applications",
								"55de08f7-9db9-4d60-b478-2355fa2520d9",
								"tokens",
								"f64c2a29-a5fd-4416-b79a-656f6bbe45a3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get scopes",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "manage",
									"type": "string"
								},
								{
									"key": "username",
									"value": "Administrator",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/applications/688a4e6e-5173-4463-b360-cffeb7b16d94/scopes",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"applications",
								"688a4e6e-5173-4463-b360-cffeb7b16d94",
								"scopes"
							],
							"query": [
								{
									"key": "apiId",
									"value": "9f63a24c-e515-43f5-bdab-81af6405f2c0",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Collaboration Management",
			"item": [
				{
					"name": "Topic Management",
					"item": [
						{
							"name": "Get topic by Id",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/topics/59d97968-7b25-4964-a0b7-d783ba910db2",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"topics",
										"59d97968-7b25-4964-a0b7-d783ba910db2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a topic for an API",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"content\" : {\r\n    \t\"type\" : \"simple\",\r\n    \t\"value\" : \"This is a topic\"\r\n    },\r\n    \"tags\": [\"tag1\",\"tag2\"]\r\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/apis/1871506d-6d2e-4b75-9f4f-0d50ead0ed71/topics",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"apis",
										"1871506d-6d2e-4b75-9f4f-0d50ead0ed71",
										"topics"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a topic for a Package",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"content\" : {\r\n    \t\"type\" : \"simple\",\r\n    \t\"value\" : \"This is a topic\"\r\n    },\r\n    \"tags\": [\"tag1\",\"tag2\"]\r\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/packages/1871506d-6d2e-4b75-9f4f-0d50ead0ed71/topics",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"packages",
										"1871506d-6d2e-4b75-9f4f-0d50ead0ed71",
										"topics"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a topic for a custom asset instance",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "Administrator",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"content\" : {\r\n    \t\"type\" : \"simple\",\r\n    \t\"value\" : \"This is a topic\"\r\n    },\r\n    \"tags\": [\"tag1\",\"tag2\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/types/feature/instances/66786b4a-d743-4aa2-bdde-c46c2620c980/topics",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"types",
										"feature",
										"instances",
										"66786b4a-d743-4aa2-bdde-c46c2620c980",
										"topics"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update topic by Id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"tags\": [\"tag1\",\"tag2\"]\r\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/topics/bcf9cc27-f820-4393-b7c3-d3a0c8469d66",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"topics",
										"bcf9cc27-f820-4393-b7c3-d3a0c8469d66"
									]
								}
							},
							"response": []
						},
						{
							"name": "UpVote a topic",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/topics/59d97968-7b25-4964-a0b7-d783ba910db2/upvote",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"topics",
										"59d97968-7b25-4964-a0b7-d783ba910db2",
										"upvote"
									]
								}
							},
							"response": []
						},
						{
							"name": "No of Upvotes",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/topics/59d97968-7b25-4964-a0b7-d783ba910db2/upvote/_count",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"topics",
										"59d97968-7b25-4964-a0b7-d783ba910db2",
										"upvote",
										"_count"
									]
								}
							},
							"response": []
						},
						{
							"name": "DownVote a topic",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/topics/59d97968-7b25-4964-a0b7-d783ba910db2/downvote",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"topics",
										"59d97968-7b25-4964-a0b7-d783ba910db2",
										"downvote"
									]
								}
							},
							"response": []
						},
						{
							"name": "No of DownVotes",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/topics/59d97968-7b25-4964-a0b7-d783ba910db2/downvote/_count",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"topics",
										"59d97968-7b25-4964-a0b7-d783ba910db2",
										"downvote",
										"_count"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flag a topic",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/topics/b4706fea-500e-4c28-a355-42d44b59301f/flag",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"topics",
										"b4706fea-500e-4c28-a355-42d44b59301f",
										"flag"
									]
								}
							},
							"response": []
						},
						{
							"name": "No of Flags",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/topics/b4706fea-500e-4c28-a355-42d44b59301f/flag/_count",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"topics",
										"b4706fea-500e-4c28-a355-42d44b59301f",
										"flag",
										"_count"
									]
								}
							},
							"response": []
						},
						{
							"name": "Accept Flag on a topic",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/topics/b4706fea-500e-4c28-a355-42d44b59301f/flagged",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"topics",
										"b4706fea-500e-4c28-a355-42d44b59301f",
										"flagged"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pin a topic",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/topics/ab9cca54-29f6-4d8f-b28e-4939e171c9e8/pin",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"topics",
										"ab9cca54-29f6-4d8f-b28e-4939e171c9e8",
										"pin"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get total no of upvotes,downvotes,flags",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/topics/b4706fea-500e-4c28-a355-42d44b59301f/_count",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"topics",
										"b4706fea-500e-4c28-a355-42d44b59301f",
										"_count"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete topic by id",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/topics/f3be0f7e-b46e-43ad-92ab-18f0098f7376",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"topics",
										"f3be0f7e-b46e-43ad-92ab-18f0098f7376"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Comment Management",
					"item": [
						{
							"name": "Get all comments of a topic",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/topics/c7293834-35f8-4798-941b-e6aff55e78dd/comments",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"topics",
										"c7293834-35f8-4798-941b-e6aff55e78dd",
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a comment",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": {\n        \"value\": \"My new topic\",\n        \"type\": \"simple\"\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/topics/b4706fea-500e-4c28-a355-42d44b59301f/comments",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"topics",
										"b4706fea-500e-4c28-a355-42d44b59301f",
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update comment by id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": {\n        \"value\": \"My new topic\",\n        \"type\": \"simple\"\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/topics/b4706fea-500e-4c28-a355-42d44b59301f/comments/c7293834-35f8-4798-941b-e6aff55e78dd",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"topics",
										"b4706fea-500e-4c28-a355-42d44b59301f",
										"comments",
										"c7293834-35f8-4798-941b-e6aff55e78dd"
									]
								}
							},
							"response": []
						},
						{
							"name": "UpVote a comment",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/topics/ac0b1e59-efed-48f8-b16b-e5954e7374f4/comments/ac0b1e59-efed-48f8-b16b-e5954e7374f4/upvote",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"topics",
										"ac0b1e59-efed-48f8-b16b-e5954e7374f4",
										"comments",
										"ac0b1e59-efed-48f8-b16b-e5954e7374f4",
										"upvote"
									]
								}
							},
							"response": []
						},
						{
							"name": "DownVote a comment",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/topics/ac0b1e59-efed-48f8-b16b-e5954e7374f4/comments/ac0b1e59-efed-48f8-b16b-e5954e7374f4/downvote",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"topics",
										"ac0b1e59-efed-48f8-b16b-e5954e7374f4",
										"comments",
										"ac0b1e59-efed-48f8-b16b-e5954e7374f4",
										"downvote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Flag a comment",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/topics/b4706fea-500e-4c28-a355-42d44b59301f/comments/c7293834-35f8-4798-941b-e6aff55e78dd/flag",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"topics",
										"b4706fea-500e-4c28-a355-42d44b59301f",
										"comments",
										"c7293834-35f8-4798-941b-e6aff55e78dd",
										"flag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Accept Flag on a comment",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/topics/b4706fea-500e-4c28-a355-42d44b59301f/comments/c7293834-35f8-4798-941b-e6aff55e78dd/flagged",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"topics",
										"b4706fea-500e-4c28-a355-42d44b59301f",
										"comments",
										"c7293834-35f8-4798-941b-e6aff55e78dd",
										"flagged"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a comment by id",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/topics/b4706fea-500e-4c28-a355-42d44b59301f/comments/c7293834-35f8-4798-941b-e6aff55e78dd",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"topics",
										"b4706fea-500e-4c28-a355-42d44b59301f",
										"comments",
										"c7293834-35f8-4798-941b-e6aff55e78dd"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete comment by id",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/topics/b4706fea-500e-4c28-a355-42d44b59301f/comments/c7293834-35f8-4798-941b-e6aff55e78dd",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"topics",
										"b4706fea-500e-4c28-a355-42d44b59301f",
										"comments",
										"c7293834-35f8-4798-941b-e6aff55e78dd"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Bookmark Management",
					"item": [
						{
							"name": "Bookmark a Topic",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/topics/bcf9cc27-f820-4393-b7c3-d3a0c8469d66/bookmarks",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"topics",
										"bcf9cc27-f820-4393-b7c3-d3a0c8469d66",
										"bookmarks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the bookmarked topics of the API",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/apis/754eeb5d-9fae-4e77-a29a-72afb8b335f8/bookmarks",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"apis",
										"754eeb5d-9fae-4e77-a29a-72afb8b335f8",
										"bookmarks"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get all collaboration that have a flag",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/collaboration/flags",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"collaboration",
								"flags"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all collaboration that flag has been accepted",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/collaboration/flagged",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"collaboration",
								"flagged"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Community Management",
			"item": [
				{
					"name": "Get all communities",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/communities/",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"communities",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Community",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Community\",\r\n    \"description\": \"This is the description of Community\",\r\n    \"users\": [\r\n        \"05842128-8aab-455a-ba34-ebe5864d13c7\",\r\n        \"0fe00765-dccd-4f40-a565-bc34982f88ef\"\r\n    ],\r\n    \"groups\": [\r\n        \"23b0ce88-3296-36be-b2a1-f470aee3f031\"\r\n    ],\r\n    \"apis\": [\r\n        \"23b0ce88-3296-36be-b2a1-f470aee3f031\"\r\n    ],\r\n    \"administrators\": [\r\n        \"23b0ce88-3296-36be-b2a1-f470aee3f031\"\r\n    ]\r\n}"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/communities/",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"communities",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Community",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Community_Mod\",\n    \"description\": \"This is the description of Community\",\n    \"users\": [\n        \"0fe00765-dccd-4f40-a565-bc34982f88ef\"\n    ],\n    \"groups\": [\n        \"23b0ce88-3296-36be-b2a1-f470aee3f031\"\n    ],\n    \"apis\": [\n        \"23b0ce88-3296-36be-b2a1-f470aee3f031\"\n    ],\n    \"administrators\": [\n        \"23b0ce88-3296-36be-b2a1-f470aee3f031\"\n    ]\n}"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/communities/5cdeb561-ca5f-4903-ba04-6c6099fa8bbe",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"communities",
								"5cdeb561-ca5f-4903-ba04-6c6099fa8bbe"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Community by Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/communities/05842128-8aab-455a-ba34-ebe5864d13c7",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"communities",
								"05842128-8aab-455a-ba34-ebe5864d13c7"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Community",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/communities/05842128-8aab-455a-ba34-ebe5864d13c7",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"communities",
								"05842128-8aab-455a-ba34-ebe5864d13c7"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change owner of a Community",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"a8ef0204-b46b-4ab4-97a7-2836f6d717cc\""
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/communities/745c62d9-5e88-45ea-9d2e-418ed56178cb/owner",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"communities",
								"745c62d9-5e88-45ea-9d2e-418ed56178cb",
								"owner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check if Id of community is public",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/communities/b6b80b4f-f20f-4a1b-9161-e493ebd3fca0/ispublic",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"communities",
								"b6b80b4f-f20f-4a1b-9161-e493ebd3fca0",
								"ispublic"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add groups with Community",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " [\"group3\",\"group4\"]"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/communities/c19a7819-4161-490e-8a1b-ddf1933b2d01/groups",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"communities",
								"c19a7819-4161-490e-8a1b-ddf1933b2d01",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get groups of Community",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/communities/745c62d9-5e88-45ea-9d2e-418ed56178cb/apis",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"communities",
								"745c62d9-5e88-45ea-9d2e-418ed56178cb",
								"apis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove groups from Community",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " [\"group3\",\"group4\"]"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/communities/c19a7819-4161-490e-8a1b-ddf1933b2d01/groups",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"communities",
								"c19a7819-4161-490e-8a1b-ddf1933b2d01",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add users with Community",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " [\"user1\",\"user2\"]"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/communities/745c62d9-5e88-45ea-9d2e-418ed56178cb/users",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"communities",
								"745c62d9-5e88-45ea-9d2e-418ed56178cb",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get users of Community",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/communities/745c62d9-5e88-45ea-9d2e-418ed56178cb/apis",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"communities",
								"745c62d9-5e88-45ea-9d2e-418ed56178cb",
								"apis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add users from Community",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " [\"user2\"]"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/communities/\"user2/users",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"communities",
								"\"user2",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add apis with Community",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\"f1e8531a-3190-440f-90aa-51fcc3b60d0b\"]"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/communities/c19a7819-4161-490e-8a1b-ddf1933b2d01/apis",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"communities",
								"c19a7819-4161-490e-8a1b-ddf1933b2d01",
								"apis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get apis of Community",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/communities/745c62d9-5e88-45ea-9d2e-418ed56178cb/apis",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"communities",
								"745c62d9-5e88-45ea-9d2e-418ed56178cb",
								"apis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove apis from Community",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\"f1e8531a-3190-440f-90aa-51fcc3b60d0b\"]"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/communities/c19a7819-4161-490e-8a1b-ddf1933b2d01/apis",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"communities",
								"c19a7819-4161-490e-8a1b-ddf1933b2d01",
								"apis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add packages to Community",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\"f1e8531a-3190-440f-90aa-51fcc3b60d0b\"]"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/communities/c19a7819-4161-490e-8a1b-ddf1933b2d01/packages",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"communities",
								"c19a7819-4161-490e-8a1b-ddf1933b2d01",
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get packages of Community",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/communities/745c62d9-5e88-45ea-9d2e-418ed56178cb/packages",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"communities",
								"745c62d9-5e88-45ea-9d2e-418ed56178cb",
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove packages from Community",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\"f1e8531a-3190-440f-90aa-51fcc3b60d0b\"]"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/communities/c19a7819-4161-490e-8a1b-ddf1933b2d01/packages",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"communities",
								"c19a7819-4161-490e-8a1b-ddf1933b2d01",
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get community administrators",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/communities/745c62d9-5e88-45ea-9d2e-418ed56178cb/administrators",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"communities",
								"745c62d9-5e88-45ea-9d2e-418ed56178cb",
								"administrators"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update community administrators",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": " [\"user1\",\"user2\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/communities/745c62d9-5e88-45ea-9d2e-418ed56178cb/administrators",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"communities",
								"745c62d9-5e88-45ea-9d2e-418ed56178cb",
								"administrators"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Configuration Management",
			"item": [
				{
					"name": "LDAP",
					"item": [
						{
							"name": "Add LDAP Settings",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"category\": \"LDAP_SETTINGS\",\r\n\r\n  \"properties\": [\r\n  {\r\n      \"key\": \"LDAP_MULTI_ACTIVE\",\r\n      \"value\": \"true\"\r\n    },\r\n\t {\r\n      \"key\": \"LDAP_CONNECTION_COUNT\",\r\n      \"value\": \"3\"\r\n    },\r\n\t{\r\n      \"key\": \"LDAP_ATTRIB_MEMBEROF_RESOLVEONLOGIN\",\r\n      \"value\": \"false\"\r\n    },\r\n  {\r\n  \r\n    \"key\": \"LDAP_ACTIVE\",\r\n    \"value\": \"true\"\r\n  },\r\n  {\r\n      \"key\": \"LDAP_SYNC_SKIPONFAULT\",\r\n      \"value\": \"true\"\r\n    },\r\n  {\r\n      \"key\": \"LDAP_AUTHENTICATION_ONLY\",\r\n      \"value\": \"false\"\r\n    },\r\n\t  {\r\n      \"key\": \"LDAP_SYNC_SEARCH_MEMBERS_BOTTOM_UP\",\r\n      \"value\": \"false\"\r\n    },\r\n\t{\r\n      \"key\": \"LDAP_SYNC_USE_DN_AS_GUID\",\r\n      \"value\": \"true\"\r\n    },\r\n\t{\r\n      \"key\": \"LDAP_USER_IMPORTONLOGIN\",\r\n      \"value\": \"true\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get LDAP Settings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/ldap_settings",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"ldap_settings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update LDAP Settings",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"properties\": [\n        {\n            \"key\": \"LDAP_CONNECTION_COUNT\",\n            \"value\": \"30\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/ldap_settings",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"ldap_settings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete LDAP Settings",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/ldap_settings",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"ldap_settings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add LDAP Connection",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"category\": \"LDAP_CONNECTION\",\r\n    \"properties\": [\r\n        {\r\n            \"key\": \"LDAP_ATTRIB_DN\",\r\n            \"value\": \"dn\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_ATTRIB_ROLENAME\",\r\n            \"value\": \"cn\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_ATTRIB_GUID\",\r\n            \"value\": \"objectGUID\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_ATTRIB_HASMEMBER\",\r\n            \"value\": \"member\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_ATTRIB_MEMBEROF\",\r\n            \"value\": \"memberOf\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_OBJECTCLASS_ATTRIB\",\r\n            \"value\": \"objectClass\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_ATTRIB_EMAIL\",\r\n            \"value\": \"mail\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_ATTRIB_FIRSTNAME\",\r\n            \"value\": \"cn\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_ATTRIB_LASTNAME\",\r\n            \"value\": \"sn\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_ATTRIB_USERNAME\",\r\n            \"value\": \"uid\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_ATTRIB_PHONE\",\r\n            \"value\": \"\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_ATTRIB_PICTURE\",\r\n            \"value\": \"\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_URL2\",\r\n            \"value\": \"ldap://daeapiprtldemo1.eur.ad.sag:10389\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_CONCURRENT_MAX\",\r\n            \"value\": \"0\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_CONNECTION_ID\",\r\n            \"value\": \"dap1\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_CONNECTION_NAME\",\r\n            \"value\": \"myldap\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_FILTER_ROLE\",\r\n            \"value\": \"\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_FILTER_PERSON\",\r\n            \"value\": \"\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_CUSTOMATTRS_ROLE\",\r\n            \"value\": \"\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_OBJECTCLASS_ROLE\",\r\n            \"value\": \"groupOfNames\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_SEARCHPATH_ROLE\",\r\n            \"value\": \"DC=example,DC=com\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_PAGESIZE\",\r\n            \"value\": \"9999\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_READ_TIMEOUT\",\r\n            \"value\": \"1800000\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_RECURSION_DEPTH\",\r\n            \"value\": \"0\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_REFERRAL\",\r\n            \"value\": \"follow\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_SEARCHPATH\",\r\n            \"value\": \"DC=example,DC=com\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_PASSWORD\",\r\n            \"value\": \"secret\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_USERNAME\",\r\n            \"value\": \"uid=admin,ou=system\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_TLS_CERTIFICATE_VERIFICATION\",\r\n            \"value\": \"true\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_TLS_HOST_VERIFICATION\",\r\n            \"value\": \"false\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_TLS_MODE\",\r\n            \"value\": \"STARTTLS\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_USE_TLS\",\r\n            \"value\": \"false\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_TIMEOUT\",\r\n            \"value\": \"18000\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_URL\",\r\n            \"value\": \"ldap://daeapiprtldemo1.eur.ad.sag:10389\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_CUSTOMATTRS_PERSON\",\r\n            \"value\": \"\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_OBJECTCLASS_USER\",\r\n            \"value\": \"inetOrgPerson\"\r\n        },\r\n        {\r\n            \"key\": \"LDAP_SEARCHPATH_USER\",\r\n            \"value\": \"DC=example,DC=com\"\r\n        }\r\n    ]\r\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get LDAP Connection",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/ldap_connection/dap1",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"ldap_connection",
										"dap1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a LDAP Connection",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \n    \"properties\": [\n        {\n            \"key\": \"LDAP_ATTRIB_LASTNAME\",\n            \"value\": \"lastName\"\n        },\n        {\n            \"key\": \"LDAP_ATTRIB_PICTURE\",\n            \"value\": \"thumpPicture\"\n        },\n        {\n            \"key\": \"LDAP_RECURSION_DEPTH\",\n            \"value\": \"1\"\n        },\n        {\n            \"key\": \"LDAP_REFERRAL\",\n            \"value\": \"follow\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/ldap_connection?id=dap1",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"ldap_connection"
									],
									"query": [
										{
											"key": "id",
											"value": "dap1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE an LDAP Connection",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/ldap_connection?id=dap1",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"ldap_connection"
									],
									"query": [
										{
											"key": "id",
											"value": "dap1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Import Users from LDAP",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"filter\": \"*\",\r\n    \"preview\": false,\r\n    \"item\": \"USERS\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/ldap_connection/dap1/import",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"ldap_connection",
										"dap1",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Import Groups from LDAP",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"filter\": \"*\",\r\n    \"preview\": false,\r\n    \"item\": \"GROUPS\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/ldap_connection/dap1/import",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"ldap_connection",
										"dap1",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Test LDAP Connection",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/ldap_connection/dap1/verify",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"ldap_connection",
										"dap1",
										"verify"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "OAUTH",
					"item": [
						{
							"name": "Oauth Provider",
							"item": [
								{
									"name": "Get OAuth Provider",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://{{host}}/rest/v1/configurations/oauth/TWITTER",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"path": [
												"rest",
												"v1",
												"configurations",
												"oauth",
												"TWITTER"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add OAuth Provider",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"category\": \"OAUTH\",\n    \"properties\": [\n       {\n            \"key\": \"OAUTH_PROVIDERS\",\n            \"value\": \"TWITTER\"\n        },\n        {\n            \"key\": \"OAUTH_API_KEYS\",\n            \"value\": \"Twitter\"\n        },\n        {\n            \"key\": \"OAUTH_API_SECRETS\",\n            \"value\": \"Twitter\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "http://{{host}}/rest/v1/configurations",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"path": [
												"rest",
												"v1",
												"configurations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update OAuth Provider",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"properties\": [\n        {\n            \"key\": \"OAUTH_API_KEYS\",\n            \"value\": \"key\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "http://{{host}}/rest/v1/configurations/oauth?id=TWITTER",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"path": [
												"rest",
												"v1",
												"configurations",
												"oauth"
											],
											"query": [
												{
													"key": "id",
													"value": "TWITTER"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete OAuth Provider",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "id",
												"value": "TWITTER",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://{{host}}/rest/v1/configurations/oauth?id=TWITTER",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"path": [
												"rest",
												"v1",
												"configurations",
												"oauth"
											],
											"query": [
												{
													"key": "id",
													"value": "TWITTER"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Get OAuth Configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/oauth",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"oauth"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add OAuth Configuration",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"category\": \"OAUTH\",\n    \"properties\": [\n        {\n            \"key\": \"OAUTH_ACTIVE\",\n            \"value\": \"true\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update OAuth Configuration",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"properties\": [\n        {\n            \"key\": \"OAUTH_ACTIVE\",\n            \"value\": \"false\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/oauth",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"oauth"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete OAuth Configuration",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/oauth",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"oauth"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "MFA",
					"item": [
						{
							"name": "Get MFA Configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/mfa",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"mfa"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add MFA Configuration",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"category\": \"MFA\",\n    \"properties\": [\n        {\n            \"key\": \"MFA_ACTIVE\",\n            \"value\": \"true\"\n        },\n        {\n            \"key\": \"MFA_CLOCK_SKEW\",\n            \"value\": \"5\"\n        }, \n        {\n        \t\"key\" :\"NOTIFICATION_OTPREQUESTED_ENABLED\",\n        \t\"value\" : true\n        },\n        {\n        \t\"key\" : \"NOTIFICATION_OTPREQUESTED_SUBJECT\",\n        \t\"value\" : \"Requested OTP\"\n        },\n        {\n        \t\"key\" : \"NOTIFICATION_OTPREQUESTED_MESSAGE\",\n        \t\"value\": \"Dear @user.givenName,\\n\\nYou have requested a one-time password for your account: \\n\\n\\tTenant: @tenant.name \\n\\n\\tUser name: @user.login\\n\\n\\tOne-time password: @user.password\\n\\nUse the one-time password within 30 seconds. Ignore this e-mail if you have not submitted any request.\\n\\nBest regards,\\nAPI Portal team\\n\\n*** This notification was sent automatically by API Management Solutions powered by webMethods. Please do not reply to this e-mail.***\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update MFA Configuration",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"properties\": [\n        {\n            \"key\": \"MFA_ACTIVE\",\n            \"value\": \"true\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/MFA",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"MFA"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete MFA Configuration",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/mfa",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"mfa"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PASSWORD_POLICY",
					"item": [
						{
							"name": "Add Password Policy",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"category\": \"PASSWORD_POLICY\",\r\n        \"properties\": [\r\n            {\r\n                \"key\": \"PWD_UPPERCASE_ALLOWED\",\r\n                \"value\": \"true\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_LOWERCASE_MIN\",\r\n                \"value\": \"0\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_RESET_CONFIRMATION_TTL\",\r\n                \"value\": \"30\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_SPECIAL_ALLOWED\",\r\n                \"value\": \"true\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_NUMERIC_MIN\",\r\n                \"value\": \"1\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_NUMERIC_ALLOWED\",\r\n                \"value\": \"true\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_LENGTH_MAX\",\r\n                \"value\": \"40\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_EXPIRY_DAYS\",\r\n                \"value\": \"30\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_EXPIRY_ACTIVE\",\r\n                \"value\": \"false\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_RESET_CONFIRMATION_ACTIVE\",\r\n                \"value\": \"true\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_SPECIAL_SET\",\r\n                \"value\": \"*$-+?_&=!%{}/\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_LENGTH_MIN\",\r\n                \"value\": \"8\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_CHANGE_FORCE_DIFFERENCE\",\r\n                \"value\": \"false\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_CHANGE_FORCE_ON_FIRST_LOGIN\",\r\n                \"value\": \"false\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_UPPERCASE_MIN\",\r\n                \"value\": \"1\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_SPECIAL_MIN\",\r\n                \"value\": \"1\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_CHANGE_FORCE_AFTER_RESET\",\r\n                \"value\": \"false\"\r\n            }\r\n        ]\r\n    }"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Password Policy Configuration",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"category\": \"PASSWORD_POLICY\",\r\n        \"properties\": [\r\n            {\r\n                \"key\": \"PWD_UPPERCASE_ALLOWED\",\r\n                \"value\": \"true\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_LOWERCASE_MIN\",\r\n                \"value\": \"0\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_RESET_CONFIRMATION_TTL\",\r\n                \"value\": \"30\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_SPECIAL_ALLOWED\",\r\n                \"value\": \"true\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_NUMERIC_MIN\",\r\n                \"value\": \"1\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_NUMERIC_ALLOWED\",\r\n                \"value\": \"true\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_LENGTH_MAX\",\r\n                \"value\": \"40\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_EXPIRY_DAYS\",\r\n                \"value\": \"30\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_EXPIRY_ACTIVE\",\r\n                \"value\": \"false\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_RESET_CONFIRMATION_ACTIVE\",\r\n                \"value\": \"true\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_SPECIAL_SET\",\r\n                \"value\": \"*$-+?_&=!%{}/\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_LENGTH_MIN\",\r\n                \"value\": \"8\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_CHANGE_FORCE_DIFFERENCE\",\r\n                \"value\": \"false\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_CHANGE_FORCE_ON_FIRST_LOGIN\",\r\n                \"value\": \"false\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_UPPERCASE_MIN\",\r\n                \"value\": \"0\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_SPECIAL_MIN\",\r\n                \"value\": \"0\"\r\n            },\r\n            {\r\n                \"key\": \"PWD_CHANGE_FORCE_AFTER_RESET\",\r\n                \"value\": \"false\"\r\n            }\r\n        ]\r\n    }"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/password_policy",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"password_policy"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Password Policy Configuration",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/password_policy",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"password_policy"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "SAML",
					"item": [
						{
							"name": "Add SAML Configuration",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"category\": \"SAML\",\n    \"properties\": [\n        {\n            \"key\": \"SAML_ACTIVE\",\n            \"value\": \"true\"\n        },\n        {\n            \"key\": \"SAML_IDENTITY_PROVIDER_SSO_URL\",\n            \"value\": \"https://localhost:8085/services/SAML\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SAML Configuration",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/saml",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"saml"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a SAML Configuration",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"category\": \"SAML\",\n    \"properties\": [\n        {\n            \"key\": \"SAML_SERVICE_PROVIDER_ID\",\n            \"value\": \"UMC@123\"\n        },\n        {\n            \"key\": \"SAML_IDENTITY_PROVIDER_SSO_URL\",\n            \"value\": \"https://localhost:8085/services/SAML/login\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/saml",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"saml"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE a SAML Configuration",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/saml",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"saml"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "SMTP",
					"item": [
						{
							"name": "Add SMTP Configuration",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"category\" :\"SMTP\",\r\n\t\r\n\t\t\"properties\": [\r\n\t\t\t{\r\n\t\t\t\"key\": \"NOTIFICATION_HOST\",\r\n\t\t\t\"value\": \"smtp.eur.ad.sag\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"key\": \"NOTIFICATION_PORT\",\r\n\t\t\t\"value\": \"25\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"key\": \"NOTIFICATION_SENDER\",\r\n\t\t\t\"value\": \"api-portal@softwareag.com\"\r\n\t\t}\r\n\t]\r\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve SMTP Configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/smtp",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"smtp"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update SMTP Configuration",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"category\" :\"SMTP\",\r\n\t\r\n\t\t\"properties\": [\r\n\t\t\t{\r\n\t\t\t\"key\": \"NOTIFICATION_HOST\",\r\n\t\t\t\"value\": \"smtp.eur.ad.sag\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"key\": \"NOTIFICATION_PORT\",\r\n\t\t\t\"value\": \"205\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"key\": \"NOTIFICATION_SENDER\",\r\n\t\t\t\"value\": \"prga@softwareag.com\"\r\n\t\t}\r\n\t]\r\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/smtp",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"smtp"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete SMTP Configuration",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/smtp",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"smtp"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "UMC General",
					"item": [
						{
							"name": "Get UMC General Configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/umc_general",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"umc_general"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update UMC general configuration",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"properties\": [\n        {\n            \"key\": \"KERBEROS_ACTIVE\",\n            \"value\": \"false\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/umc_general",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"umc_general"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update UMC general configuration Copy",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"category\": \"UMC_GENERAL\",\r\n    \"properties\": [\r\n        {\r\n            \"key\": \"KERBEROS_ALLOW_LOCAL_USERS\",\r\n            \"value\": \"false\"\r\n        },\r\n        {\r\n            \"key\": \"KERBEROS_KEYTAB\",\r\n            \"value\": \"\"\r\n        },\r\n        {\r\n            \"key\": \"LOADBALANCER_URL_HTTPS\",\r\n            \"value\": \"\"\r\n        },\r\n        {\r\n            \"key\": \"KERBEROS_REALM\",\r\n            \"value\": \"\"\r\n        },\r\n        {\r\n            \"key\": \"AUTH_LOCK_ENABLED\",\r\n            \"value\": \"false\"\r\n        },\r\n        {\r\n            \"key\": \"OTP_TTL\",\r\n            \"value\": \"300\"\r\n        },\r\n        {\r\n            \"key\": \"AUTH_LOCK_TTL\",\r\n            \"value\": \"60\"\r\n        },\r\n        {\r\n            \"key\": \"AUTH_LOCK_COUNTER_TTL\",\r\n            \"value\": \"60\"\r\n        },\r\n        {\r\n            \"key\": \"KERBEROS_KDC\",\r\n            \"value\": \"\"\r\n        },\r\n        {\r\n            \"key\": \"AUTH_LOCK_COUNTER_LIMIT\",\r\n            \"value\": \"5\"\r\n        },\r\n        {\r\n            \"key\": \"LOADBALANCER_URL_HTTP\",\r\n            \"value\": \"\"\r\n        },\r\n        {\r\n            \"key\": \"KERBEROS_DEBUG\",\r\n            \"value\": \"false\"\r\n        },\r\n        {\r\n            \"key\": \"OTP_ACTIVE\",\r\n            \"value\": \"true\"\r\n        },\r\n        {\r\n            \"key\": \"LOADBALANCER_URL\",\r\n            \"value\": \"http://localhost:18101\"\r\n        },\r\n        {\r\n            \"key\": \"KERBEROS_CONFIGFILE\",\r\n            \"value\": \"\"\r\n        },\r\n        {\r\n            \"key\": \"KERBEROS_TENANT\",\r\n            \"value\": \"default\"\r\n        },\r\n        {\r\n            \"key\": \"KERBEROS_ACTIVE\",\r\n            \"value\": \"false\"\r\n        },\r\n        {\r\n            \"key\": \"KERBEROS_SPN\",\r\n            \"value\": \"\"\r\n        },\r\n        {\r\n            \"key\": \"KERBEROS_VALIDATE_USERNAME\",\r\n            \"value\": \"false\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete UMC General Configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Email Templates",
					"item": [
						{
							"name": "List All Email Templates",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/email-templates",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"email-templates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve configuration details of an email template",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/email-templates/APPROVAL_PENDING",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"email-templates",
										"APPROVAL_PENDING"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update the configurations of an email template",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": false,\n    \"message\": \"<html>\\r\\n\\r\\n<br>\\r\\nHello ${recipient.name},\\r\\n\\r\\n<br><br>\\r\\n\\r\\nA new request by <b> ${originator.name} </b> needs your review and approval.\\r\\n<br><br>\\r\\nYou can click the link ${loadbalancer.url}/approvals/pending to see your pending approval(s).\\r\\n\\r\\n<br><br>\\r\\n\\r\\nBest Regards,<br>\\r\\nAPI Portal Team\\r\\n<br><br>\\r\\n\\r\\n*** This notification was sent automatically. Do not reply to this email.***\\r\\n<br>\\r\\n</html>\\r\\n\",\n    \"subject\": \"Approval request pending\",\n    \"type\": \"html\"\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/email-templates/APPROVAL_PENDING",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"email-templates",
										"APPROVAL_PENDING"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Read-only",
					"item": [
						{
							"name": "Enable/Disable the read-only mode",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/readonly?enable=true",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"readonly"
									],
									"query": [
										{
											"key": "enable",
											"value": "true"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "LCM",
					"item": [
						{
							"name": "Get Lifecycle Model of a type",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/lcm?type=API",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"lcm"
									],
									"query": [
										{
											"key": "type",
											"value": "API"
										}
									]
								},
								"description": "Gets the lifecycle model configuration (the defined lifecycle states and its allowed transition details) of a type (API/PACKAGE)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Features",
					"item": [
						{
							"name": "LCM",
							"item": [
								{
									"name": "Enable LCM feature",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"7d489dca-396d-443b-9377-2cea4285f128\",\r\n    \"category\": \"FEATURE_LOOKUP\",\r\n    \"properties\": [\r\n        {\r\n            \"key\": \"life_cycle_enabled\",\r\n            \"value\": \"true\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://{{host}}/rest/v1/configurations/FEATURE_LOOKUP",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"path": [
												"rest",
												"v1",
												"configurations",
												"FEATURE_LOOKUP"
											]
										}
									},
									"response": []
								},
								{
									"name": "Disable LCM feature",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"7d489dca-396d-443b-9377-2cea4285f128\",\r\n    \"category\": \"FEATURE_LOOKUP\",\r\n    \"properties\": [\r\n        {\r\n            \"key\": \"life_cycle_enabled\",\r\n            \"value\": \"false\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://{{host}}/rest/v1/configurations/FEATURE_LOOKUP",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"path": [
												"rest",
												"v1",
												"configurations",
												"FEATURE_LOOKUP"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "CORS",
					"item": [
						{
							"name": "Add CORS origins",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "Administrator",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"category\": \"CORS_SETTINGS\",\r\n    \"properties\": [\r\n        {\r\n            \"key\": \"cors_origins\",\r\n            \"value\": \"http://myserver:8080, https://remote-dev-portal-server.com\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update CORS origins",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "Administrator",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"category\": \"CORS_SETTINGS\",\r\n    \"properties\": [\r\n        {\r\n            \"key\": \"cors_origins\",\r\n            \"value\": \"http://myserver:8080, https://remote-dev-portal-server1.com, https://remote-dev-portal-server2.com\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/CORS_SETTINGS?id=936fab53-d94e-4656-bfd7-d90941ac0d2a",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"CORS_SETTINGS"
									],
									"query": [
										{
											"key": "id",
											"value": "936fab53-d94e-4656-bfd7-d90941ac0d2a"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete CORS Origins",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "Administrator",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/configurations/CORS_SETTINGS?id=936fab53-d94e-4656-bfd7-d90941ac0d2a",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"configurations",
										"CORS_SETTINGS"
									],
									"query": [
										{
											"key": "id",
											"value": "936fab53-d94e-4656-bfd7-d90941ac0d2a"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get Configuration by Category",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/configurations/flow_settings",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"configurations",
								"flow_settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create application email configuration",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"category\" :\"APPLICATION_EMAIL_CONFIGURATION\",\r\n\t\r\n\t\t\"properties\": [\r\n\t\t\t{\r\n\t\t\t\"key\": \"APPLICATION_SHARED_SUBJECT\",\r\n\t\t\t\"value\": \"An Application has been shared\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"key\": \"APPLICATION_SHARED_MESSAGE\",\r\n\t\t\t\"value\": \"Hello ${user.name}, \\\\n\\\\n  An application  ${application.name} has been shared to you by ${application.owner}.  \\\\n\\\\n \\\\n\\\\n Best Regards,\\\\nAPI Cloud Team \\\\n\\\\n  *** This notification was sent automatically. Do not reply to this email.***\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"key\": \"APPLICATION_REVOKED_SUBJECT\",\r\n\t\t\t\"value\": \"Application access has been revoked\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"key\":\"APPLICATION_REVOKED_MESSAGE\",\r\n\t\t\t\"value\": \"Hello ${user.name},\\\\n\\\\n ${application.name} application access has been revoked by the owner \\\\n\\\\n \\\\n\\\\n Best Regards,\\\\nAPI Cloud Team \\\\n\\\\n *** This notification was sent automatically. Do not reply to this email.***\"\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/configurations",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"configurations"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Custom Asset Management",
			"item": [
				{
					"name": "Type Management",
					"item": [
						{
							"name": "Create new type",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "Administrator",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"ticket\",\r\n  \"fields\": [\r\n    {\r\n      \"name\": \"Title\",\r\n      \"type\": \"STRING\",\r\n      \"mandatory\": true\r\n    },\r\n    {\r\n      \"name\": \"Content\",\r\n      \"type\": \"TEXT\",\r\n      \"mandatory\": true\r\n    },\r\n    {\r\n      \"name\": \"Assigned_to\",\r\n      \"type\": \"STRING\",\r\n      \"mandatory\": true\r\n    },\r\n    {\r\n      \"name\": \"Ticket_No\",\r\n      \"type\": \"NUMBER\",\r\n      \"mandatory\": false\r\n    }\r\n  ]\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/types",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"types"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a type",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "Administrator",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/types/ticket",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"types",
										"ticket"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all types",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/types",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"types"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get types using filters",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "Administrator",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"criterias\": [\r\n    {\r\n      \"field\": \"name\",\r\n      \"values\": [\r\n        \"ticket\"\r\n      ],\r\n      \"operation\": \"EQUALS\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/types/search",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"types",
										"search"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a type",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "Administrator",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"ticket\",\r\n  \"fields\": [\r\n    {\r\n      \"name\": \"Title\",\r\n      \"type\": \"STRING\",\r\n      \"mandatory\": true\r\n    },\r\n    {\r\n      \"name\": \"Content\",\r\n      \"type\": \"TEXT\",\r\n      \"mandatory\": true\r\n    },\r\n    {\r\n      \"name\": \"Assigned_to\",\r\n      \"type\": \"STRING\",\r\n      \"mandatory\": true\r\n    },\r\n    {\r\n      \"name\": \"Ticket_No\",\r\n      \"type\": \"NUMBER\",\r\n      \"mandatory\": false\r\n    },\r\n    {\r\n      \"name\": \"Resolved\",\r\n      \"type\": \"BOOLEAN\",\r\n      \"mandatory\": false\r\n    },\r\n    {\r\n      \"name\": \"Issue_details_doc\",\r\n      \"type\": \"FILE\",\r\n      \"mandatory\": false\r\n    },\r\n    {\r\n      \"name\": \"Issue_screenshot\",\r\n      \"type\": \"IMAGE\",\r\n      \"mandatory\": false\r\n    }\r\n  ]\r\n\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/types/ticket",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"types",
										"ticket"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set default value for file field",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "Administrator",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/types/ticket/fields/Issue_details_doc",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"types",
										"ticket",
										"fields",
										"Issue_details_doc"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set default value for image field",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "Administrator",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/types/ticket/fields/Issue_screenshot",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"types",
										"ticket",
										"fields",
										"Issue_screenshot"
									]
								}
							},
							"response": []
						},
						{
							"name": "total number of types",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/types/_count",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"types",
										"_count"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a type",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "Administrator",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/types/ticket",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"types",
										"ticket"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Instance Management",
					"item": [
						{
							"name": "Create asset for a type",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "Administrator",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Issue with updating user profile picture\",\r\n  \"Title\": \"Issue with updating user profile picture\",\r\n  \"Content\": \"New picture not gets updated....\",\r\n  \"Ticket_No\" : 99,\r\n  \"Assigned_to\": \"X\",\r\n  \"Resolved\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/types/ticket/instances",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"types",
										"ticket",
										"instances"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the asset",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "Administrator",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/types/feature/instances/0c17c3fc-46a0-4c20-85c0-47c76d94b13e",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"types",
										"feature",
										"instances",
										"0c17c3fc-46a0-4c20-85c0-47c76d94b13e"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all assets of a type",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/types/feature/instances",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"types",
										"feature",
										"instances"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get asset by filter",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "Administrator",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"criterias\": [\r\n    {\r\n      \"field\": \"name\",\r\n      \"values\": [\r\n        \"user profile\"\r\n      ],\r\n      \"operation\": \"CONTAINS\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/types/ticket/instances/search",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"types",
										"ticket",
										"instances",
										"search"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update an asset",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "Administrator",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Issue with updating user profile picture\",\r\n  \"Title\": \"Issue with updating user profile picture\",\r\n  \"Content\": \"New picture not gets updated....\",\r\n  \"Ticket_No\" : 99,\r\n  \"Assigned_to\": \"Y\",\r\n  \"Resolved\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/types/ticket/instances/5b6a2b2e-168f-4d74-875b-f7ed961029e5",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"types",
										"ticket",
										"instances",
										"5b6a2b2e-168f-4d74-875b-f7ed961029e5"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update file field for an asset",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "Administrator",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/types/ticket/instances/5b6a2b2e-168f-4d74-875b-f7ed961029e5/fields/Issue_details_doc",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"types",
										"ticket",
										"instances",
										"5b6a2b2e-168f-4d74-875b-f7ed961029e5",
										"fields",
										"Issue_details_doc"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update image field of an asset",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "Administrator",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/types/ticket/instances/5b6a2b2e-168f-4d74-875b-f7ed961029e5/fields/Issue_screenshot",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"types",
										"ticket",
										"instances",
										"5b6a2b2e-168f-4d74-875b-f7ed961029e5",
										"fields",
										"Issue_screenshot"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update logo for an asset",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "Administrator",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/types/ticket/instances/5b6a2b2e-168f-4d74-875b-f7ed961029e5/logo",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"types",
										"ticket",
										"instances",
										"5b6a2b2e-168f-4d74-875b-f7ed961029e5",
										"logo"
									]
								}
							},
							"response": []
						},
						{
							"name": "Total assets for a type",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/types/ticket/instances/_count",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"types",
										"ticket",
										"instances",
										"_count"
									]
								}
							},
							"response": []
						},
						{
							"name": "Topics of an asset",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "Administrator",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/types/ticket/instances/5b6a2b2e-168f-4d74-875b-f7ed961029e5/topics",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"types",
										"ticket",
										"instances",
										"5b6a2b2e-168f-4d74-875b-f7ed961029e5",
										"topics"
									]
								}
							},
							"response": []
						},
						{
							"name": "Follow/Un-follow the asset",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "Administrator",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/types/ticket/instances/66786b4a-d743-4aa2-bdde-c46c2620c980/followers",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"types",
										"ticket",
										"instances",
										"66786b4a-d743-4aa2-bdde-c46c2620c980",
										"followers"
									]
								}
							},
							"response": []
						},
						{
							"name": "All followers of an asset",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "Administrator",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/types/ticket/instances/66786b4a-d743-4aa2-bdde-c46c2620c980/followers",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"types",
										"ticket",
										"instances",
										"66786b4a-d743-4aa2-bdde-c46c2620c980",
										"followers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Total number of followers for an asset",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "Administrator",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/types/ticket/instances/66786b4a-d743-4aa2-bdde-c46c2620c980/followers/_count",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"types",
										"ticket",
										"instances",
										"66786b4a-d743-4aa2-bdde-c46c2620c980",
										"followers",
										"_count"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bookmarked topics of an asset",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "Administrator",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/types/ticket/instances/66786b4a-d743-4aa2-bdde-c46c2620c980/bookmarks",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"types",
										"ticket",
										"instances",
										"66786b4a-d743-4aa2-bdde-c46c2620c980",
										"bookmarks"
									]
								}
							},
							"response": []
						},
						{
							"name": "add new attachments",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "Administrator",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/C:/Users/rashan/OneDrive - Software AG/Desktop/apiportal-notes.txt"
										}
									]
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/types/ticket/instances/66786b4a-d743-4aa2-bdde-c46c2620c980/attachments",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"types",
										"ticket",
										"instances",
										"66786b4a-d743-4aa2-bdde-c46c2620c980",
										"attachments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete an asset",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "Administrator",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/types/ticket/instances/66786b4a-d743-4aa2-bdde-c46c2620c980",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"types",
										"ticket",
										"instances",
										"66786b4a-d743-4aa2-bdde-c46c2620c980"
									]
								}
							},
							"response": []
						},
						{
							"name": "Rate an asset",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"rating\": 5\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/apis/4c2a4956-3eea-4ea5-b74c-9408ed82a9f2/rate",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"apis",
										"4c2a4956-3eea-4ea5-b74c-9408ed82a9f2",
										"rate"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Data Management",
			"item": [
				{
					"name": "Backup data",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "manage",
									"type": "string"
								},
								{
									"key": "username",
									"value": "administrator",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "xsrf-token",
								"value": "VbOuuiSA6K8YNWvN2D8Dl-I9sUU9GVM8bFZBMjVScFo",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"modules\": [\"User\",\"Collaboration\",\"Theme\",\"Core\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/data/backup/",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"data",
								"backup",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Restore data",
					"protocolProfileBehavior": {
						"followAuthorizationHeader": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "manage",
									"type": "string"
								},
								{
									"key": "username",
									"value": "administrator",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "xsrf-token",
								"type": "text",
								"value": "VbOuuiSA6K8YNWvN2D8Dl-I9sUU9GVM8bFZBMjVScFo"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/y509291/OneDrive - Software AG/Desktop/back1"
								},
								{
									"key": "modules",
									"value": "User,Core,Theme,Collaboration",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/data/restore",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"data",
								"restore"
							]
						}
					},
					"response": []
				},
				{
					"name": "Download backup",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "manage",
									"type": "string"
								},
								{
									"key": "username",
									"value": "administrator",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "xsrf-token",
								"value": "VbOuuiSA6K8YNWvN2D8Dl-I9sUU9GVM8bFZBMjVScFo",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/data/status/fd83b446-4fd4-4a18-b820-133ef5cb702b/backup",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"data",
								"status",
								"fd83b446-4fd4-4a18-b820-133ef5cb702b",
								"backup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get backup/restore progress",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "manage",
									"type": "string"
								},
								{
									"key": "username",
									"value": "administrator",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "xsrf-token",
								"value": "VbOuuiSA6K8YNWvN2D8Dl-I9sUU9GVM8bFZBMjVScFo",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/data/status/fd83b446-4fd4-4a18-b820-133ef5cb702b",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"data",
								"status",
								"fd83b446-4fd4-4a18-b820-133ef5cb702b"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Event Management",
			"item": [
				{
					"name": "Event APIs",
					"item": [
						{
							"name": "Get events",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "administrator",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/events?to=2021-09-17&from=2021-09-16&limit=20&system=UMC",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"events"
									],
									"query": [
										{
											"key": "type",
											"value": "USER_CREATION,USER_UPDATE",
											"disabled": true
										},
										{
											"key": "to",
											"value": "2021-09-17"
										},
										{
											"key": "from",
											"value": "2021-09-16"
										},
										{
											"key": "limit",
											"value": "20"
										},
										{
											"key": "system",
											"value": "UMC"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Purge events",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "administrator",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/events?from=2021-09-05&to=2021-09-17&system=UMC",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"events"
									],
									"query": [
										{
											"key": "from",
											"value": "2021-09-05"
										},
										{
											"key": "to",
											"value": "2021-09-17"
										},
										{
											"key": "system",
											"value": "UMC"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get event by id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/events/0418de06-3888-4c56-a828-9f98c5256d27",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"events",
										"0418de06-3888-4c56-a828-9f98c5256d27"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Webhook APIs",
					"item": [
						{
							"name": "Create a hook [Basic Auth]",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"url\": \"http://localhost:8086/events\",\r\n    \"parameters\": {\r\n    \t\"authentication\": \"BASIC\",\r\n        \"username\": \"system\",\r\n        \"password\": \"sss\"\r\n    },\r\n    \"subscriptions\":[\"API_PUBLISH_EVENT\"]\r\n}\r\n"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/hooks",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"hooks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Provider Hook",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"url\": \"http://localhost:8086/events\",\r\n    \"configuration_type\": \"PROVIDER\",\r\n    \"parameters\": {\r\n    \t\"authentication\": \"BASIC\",\r\n        \"username\": \"system\",\r\n        \"password\": \"sss\"\r\n    },\r\n    \"subscriptions\":[\"API_PUBLISH_EVENT\"]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/hooks",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"hooks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a hook [SSL]",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"url\": \"http://localhost:8086/events\",\r\n    \"parameters\": {\r\n        \"authentication\": \"SSL\",\r\n        \"type\": \"jks\",\r\n        \"file_id\": \"1234\",\r\n        \"password\": \"sss\"\r\n    },\r\n    \"subscriptions\": [\"API_PUBLISH_EVENT\"]\r\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/hooks",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"hooks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get by id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/hooks/550c52c8-7812-4f69-ac1d-7951351b5c88",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"hooks",
										"550c52c8-7812-4f69-ac1d-7951351b5c88"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all webhooks",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/hooks",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"hooks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update hook by id",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"url\": \"http://localhost:8086/events\",\r\n    \"parameters\": {\r\n    \t\"authentication\": \"BASIC\",\r\n        \"username\": \"system\",\r\n        \"password\": \"sss\"\r\n    },\r\n    \"subscriptions\":[\"API_PUBLISH_EVENT\"]\r\n}\r\n"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/hooks/a1dbe144-8e6b-4f91-a4e5-053f87543c77",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"hooks",
										"a1dbe144-8e6b-4f91-a4e5-053f87543c77"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete hook by id",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/hooks/0398c383-9f7d-41ac-adc4-24ea5735d9e1",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"hooks",
										"0398c383-9f7d-41ac-adc4-24ea5735d9e1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get events",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/hooks/events",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"hooks",
										"events"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Package Management",
			"item": [
				{
					"name": "Create package",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"SoftwareAG APIPortal\",\n    \"summary\": \"This is the summary of Package\",\n    \"description\": \"This is the description of Package\",\n    \"apis\": [\n        \"c2e38064-a94d-4195-8e99-07a9bfeeeac9\",\n        \"be5e4369-9241-45e4-a50b-0f513b98dcfe\"\n    ],\n    \"plans\": [\n        \"a31fcbe0-ad63-4a8a-a283-c776efc8d1df\"\n    ],\n    \"providers\": [\n        \"be5e4369-9241-45e4-a50b-0f513b98dcfe\"\n    ]\n}"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/packages",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all packages",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/packages",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get package by Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/packages/8f924f7c-15db-40a6-91a1-3900bb2318d4",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"packages",
								"8f924f7c-15db-40a6-91a1-3900bb2318d4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete package",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/packages/8f924f7c-15db-40a6-91a1-3900bb2318d4",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"packages",
								"8f924f7c-15db-40a6-91a1-3900bb2318d4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update package",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"SoftwareAG APIPortal\",\n    \"summary\": \"This is the summary of Package\",\n    \"description\": \"This is the description of Package\",\n    \"apis\": [\n        \"c2e38064-a94d-4195-8e99-07a9bfeeeac9\",\n        \"be5e4369-9241-45e4-a50b-0f513b98dcfe\"\n    ],\n    \"plans\": [\n        \"a31fcbe0-ad63-4a8a-a283-c776efc8d1df\"\n    ],\n    \"providers\": [\n        \"be5e4369-9241-45e4-a50b-0f513b98dcfe\"\n    ]\n}"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/packages/a4b08e01-da0e-4aa8-b8c5-aa4890a701a6",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"packages",
								"a4b08e01-da0e-4aa8-b8c5-aa4890a701a6"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add APIs to package",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"f1e8531a-3190-440f-90aa-51fcc3b60d0b\"]"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/packages/c19a7819-4161-490e-8a1b-ddf1933b2d01/apis",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"packages",
								"c19a7819-4161-490e-8a1b-ddf1933b2d01",
								"apis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove APIs from package",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"f1e8531a-3190-440f-90aa-51fcc3b60d0b\"]"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/packages/c19a7819-4161-490e-8a1b-ddf1933b2d01/apis",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"packages",
								"c19a7819-4161-490e-8a1b-ddf1933b2d01",
								"apis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Plans to package",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"f1e8531a-3190-440f-90aa-51fcc3b60d0b\"]"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/packages/c19a7819-4161-490e-8a1b-ddf1933b2d01/plans",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"packages",
								"c19a7819-4161-490e-8a1b-ddf1933b2d01",
								"plans"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove plans from package",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"f1e8531a-3190-440f-90aa-51fcc3b60d0b\"]"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/packages/c19a7819-4161-490e-8a1b-ddf1933b2d01/plans",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"packages",
								"c19a7819-4161-490e-8a1b-ddf1933b2d01",
								"plans"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get APIS",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/packages/8f924f7c-15db-40a6-91a1-3900bb2318d4/apis",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"packages",
								"8f924f7c-15db-40a6-91a1-3900bb2318d4",
								"apis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Plans",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/packages/8f924f7c-15db-40a6-91a1-3900bb2318d4/plans",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"packages",
								"8f924f7c-15db-40a6-91a1-3900bb2318d4",
								"plans"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Communities",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/packages/8f924f7c-15db-40a6-91a1-3900bb2318d4/communities",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"packages",
								"8f924f7c-15db-40a6-91a1-3900bb2318d4",
								"communities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Topics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/packages/8f924f7c-15db-40a6-91a1-3900bb2318d4/topics",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"packages",
								"8f924f7c-15db-40a6-91a1-3900bb2318d4",
								"topics"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get followers ",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/packages/edf3ae6c-f1e4-4429-909e-7afa349bf4e7/followers",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"packages",
								"edf3ae6c-f1e4-4429-909e-7afa349bf4e7",
								"followers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get followers count",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/packages/7e0b64a7-46bf-4881-9e18-5ec64e6d7f97/followers/_count",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"packages",
								"7e0b64a7-46bf-4881-9e18-5ec64e6d7f97",
								"followers",
								"_count"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add/Remove follower",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/packages/edf3ae6c-f1e4-4429-909e-7afa349bf4e7/followers",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"packages",
								"edf3ae6c-f1e4-4429-909e-7afa349bf4e7",
								"followers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Rate a Package",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"rating\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/packages/edf3ae6c-f1e4-4429-909e-7afa349bf4e7/rate",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"packages",
								"edf3ae6c-f1e4-4429-909e-7afa349bf4e7",
								"rate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get rating of a Package",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/packages/edf3ae6c-f1e4-4429-909e-7afa349bf4e7/rate",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"packages",
								"edf3ae6c-f1e4-4429-909e-7afa349bf4e7",
								"rate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify the lifecycle state of a Package",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/packages/3644a47c-a7fe-4b26-89d2-e37ba0428c2f/state?targetState=LIVE",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"packages",
								"3644a47c-a7fe-4b26-89d2-e37ba0428c2f",
								"state"
							],
							"query": [
								{
									"key": "targetState",
									"value": "LIVE"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Plan Management",
			"item": [
				{
					"name": "Create a Plan",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Gold Plan\",\n    \"summary\": \"Summary of gold plan\",\n    \"description\": \"Description of gold plan\",\n    \"cost\": {\n        \"currency\": \"US\",\n        \"value\": \"100\",\n        \"duration\": \"hour\"\n    },\n    \"terms\": \"Subject to terms and conditions\",\n    \"license\": \"Apache 2.0 Licensed\",\n    \"enforcements\": [\n        {\n            \"name\": \"Throttling\",\n            \"properties\": [\n                {\n                    \"key\": \"Maximum Request Quota\",\n                    \"value\": \"100\"\n                },\n                {\n                    \"key\": \"Validation Interval\",\n                    \"value\": \"3 minutes\"\n                },\n                {\n                    \"key\": \"Violation Message\",\n                    \"value\": \"Hard limit crossed\"\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/plans",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"plans"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all plans",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/plans",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"plans"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a Plan by Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/plans/8f924f7c-15db-40a6-91a1-3900bb2318d4",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"plans",
								"8f924f7c-15db-40a6-91a1-3900bb2318d4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a Plan by Id",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Gold Plan 1\",\n    \"summary\": \"Summary of gold plan\",\n    \"description\": \"Description of gold plan\",\n    \"cost\": {\n        \"currency\": \"US\",\n        \"value\": \"90\",\n        \"duration\": \"hour\"\n    },\n    \"terms\": \"New terms and conditions\",\n    \"license\": \"Apache 2.0 Licensed\",\n    \"enforcements\": [\n        {\n            \"name\": \"Throttling\",\n            \"properties\": [\n                {\n                    \"key\": \"Maximum Request Quota\",\n                    \"value\": \"120\"\n                },\n                {\n                    \"key\": \"Validation Interval\",\n                    \"value\": \"3 minutes\"\n                },\n                {\n                    \"key\": \"Violation Message\",\n                    \"value\": \"Hard limit crossed\"\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/plans/8f924f7c-15db-40a6-91a1-3900bb2318d4",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"plans",
								"8f924f7c-15db-40a6-91a1-3900bb2318d4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Plan by Id",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/plans/8f924f7c-15db-40a6-91a1-3900bb2318d4",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"plans",
								"8f924f7c-15db-40a6-91a1-3900bb2318d4"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Provider Management",
			"item": [
				{
					"name": "Create a Provider",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Provider1\",\r\n    \"version\": \"10.5\",\r\n    \"external_key_provider\": false,\r\n    \"credentials\": \"QWRtaW5pc3RyYXRvcjptYW5hZ2U=\",\r\n    \"apiportaluuid\": \"cc050c1c-3d29-4121-b1be-bf0e85c3ce3c\",\r\n    \"notificationPlugins\": [\r\n        {\r\n            \"id\": \"HTTP\",\r\n            \"pluginParameters\": {\r\n                \"com.aris.umc.apiportal.external.event.notify.endpoint\": \"http://sag-56hpwt2.eur.ad.sag:5555/portal/rest/apigateway/accesstokens\",\r\n                \"com.aris.umc.apiportal.external.event.notify.method\": \"POST\",\r\n                \"com.aris.umc.apiportal.external.event.notify.contentType\": \"application/json\"\r\n            }\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/providers",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"providers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Provider by Id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/providers/f64c2a29-a5fd-4416-b79a-656f6bbe45a3",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"providers",
								"f64c2a29-a5fd-4416-b79a-656f6bbe45a3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Provider by Id",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Provider1\",\r\n    \"version\": \"10.5\",\r\n    \"external_key_provider\": false,\r\n    \"shortDescription\": \"desc updated\",\r\n    \"credentials\": \"QWRtaW5pc3RyYXRvcjptYW5hZ2U=\",\r\n    \"notificationPlugins\": [\r\n        {\r\n            \"id\": \"HTTP\",\r\n            \"pluginParameters\": {\r\n                \"com.aris.umc.apiportal.external.event.notify.endpoint\": \"http://sag-56hpwt2.eur.ad.sag:5555/portal/rest/apigateway/accesstokens\",\r\n                \"com.aris.umc.apiportal.external.event.notify.method\": \"POST\",\r\n                \"com.aris.umc.apiportal.external.event.notify.contentType\": \"application/json\"\r\n            }\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/providers/80fe2e50-9e85-46b9-9287-9311186c6832",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"providers",
								"80fe2e50-9e85-46b9-9287-9311186c6832"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all providers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/providers/",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"providers",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete provider by id",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/providers/80fe2e50-9e85-46b9-9287-9311186c6832",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"providers",
								"80fe2e50-9e85-46b9-9287-9311186c6832"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Provider apis",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/providers/f64c2a29-a5fd-4416-b79a-656f6bbe45a3/apis",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"providers",
								"f64c2a29-a5fd-4416-b79a-656f6bbe45a3",
								"apis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unlink API from Provider",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"35b9d621-0c41-4c76-8bee-974524894d99\"]"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/providers/706e886c-4c15-4a0e-a8d9-d10cb8479e89/apis",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"providers",
								"706e886c-4c15-4a0e-a8d9-d10cb8479e89",
								"apis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Link API to Provider",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"35b9d621-0c41-4c76-8bee-974524894d99\"]"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/providers/706e886c-4c15-4a0e-a8d9-d10cb8479e89/apis",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"providers",
								"706e886c-4c15-4a0e-a8d9-d10cb8479e89",
								"apis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Packages",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/providers/068274cd-90b1-4a86-aaf8-821a2282b7cb/packages",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"providers",
								"068274cd-90b1-4a86-aaf8-821a2282b7cb",
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Link Packages to Provider",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"35b9d621-0c41-4c76-8bee-974524894d99\"]"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/providers/706e886c-4c15-4a0e-a8d9-d10cb8479e89/packages",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"providers",
								"706e886c-4c15-4a0e-a8d9-d10cb8479e89",
								"packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unlink Packages from Provider",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"35b9d621-0c41-4c76-8bee-974524894d99\"]"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/providers/706e886c-4c15-4a0e-a8d9-d10cb8479e89/packages",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"providers",
								"706e886c-4c15-4a0e-a8d9-d10cb8479e89",
								"packages"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Team Management",
			"item": [
				{
					"name": "Create a Team",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Team Silicon\",\n    \"summary\": \"Summary of team silicon\",\n    \"description\": \"Description of team silicon\"\n}"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/teams",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"teams"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get my Teams",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/teams",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"teams"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a Team by Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/teams/8f924f7c-15db-40a6-91a1-3900bb2318d4",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"teams",
								"8f924f7c-15db-40a6-91a1-3900bb2318d4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a Team by Id",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Team Titans\",\n    \"summary\": \"Summary of team Titans\",\n    \"description\": \"Description of team Titans\",\n    \"users\": [\n        \"userId1\",\n        \"userId2\"\n    ]\n}"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/teams/8f924f7c-15db-40a6-91a1-3900bb2318d4",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"teams",
								"8f924f7c-15db-40a6-91a1-3900bb2318d4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Team by Id",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/teams/8f924f7c-15db-40a6-91a1-3900bb2318d4",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"teams",
								"8f924f7c-15db-40a6-91a1-3900bb2318d4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the users of a Team",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/teams/8f924f7c-15db-40a6-91a1-3900bb2318d4/users",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"teams",
								"8f924f7c-15db-40a6-91a1-3900bb2318d4",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update the users of a Team",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"54b53072-540e-3eb8-b8e9-343e71f28176\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/teams/8f924f7c-15db-40a6-91a1-3900bb2318d4/users",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"teams",
								"8f924f7c-15db-40a6-91a1-3900bb2318d4",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete the users of a Team",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"memberId1\",\n    \"memberId2\"\n]"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/teams/8f924f7c-15db-40a6-91a1-3900bb2318d4/users",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"teams",
								"8f924f7c-15db-40a6-91a1-3900bb2318d4",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the applications of a Team",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/teams/8f924f7c-15db-40a6-91a1-3900bb2318d4/applications",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"teams",
								"8f924f7c-15db-40a6-91a1-3900bb2318d4",
								"applications"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User Management",
			"item": [
				{
					"name": "Login",
					"item": [
						{
							"name": "OAuth",
							"item": [
								{
									"name": "Get active OAuth providers",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://{{host}}/rest/v1/oauth/providers",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"path": [
												"rest",
												"v1",
												"oauth",
												"providers"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "SSO",
							"item": [
								{
									"name": "Get SSO details",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://{{host}}/rest/v1/saml/active",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"path": [
												"rest",
												"v1",
												"saml",
												"active"
											]
										}
									},
									"response": []
								},
								{
									"name": "Init SSO Login",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://{{host}}/rest/v1/saml/initsso",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"path": [
												"rest",
												"v1",
												"saml",
												"initsso"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login with SSO",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "SAMLResponse",
													"value": "some xml saml response",
													"type": "text"
												},
												{
													"key": "RelayState",
													"value": "relay state value",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://{{host}}/rest/v1/saml/initsso",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"path": [
												"rest",
												"v1",
												"saml",
												"initsso"
											]
										}
									},
									"response": []
								},
								{
									"name": "Init SSO Logout",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://{{host}}/rest/v1/saml/initslo?tenant=tenantname",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"path": [
												"rest",
												"v1",
												"saml",
												"initslo"
											],
											"query": [
												{
													"key": "tenant",
													"value": "tenantname"
												},
												{
													"key": "SAMLResponse",
													"value": "some xml saml response",
													"disabled": true
												},
												{
													"key": "RelayState",
													"value": "relay state value",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout with SSO",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "SAMLResponse",
													"value": "some xml saml response",
													"type": "text"
												},
												{
													"key": "RelayState",
													"value": "relay state value",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://{{host}}/rest/v1/saml/initslo",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"path": [
												"rest",
												"v1",
												"saml",
												"initslo"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "MFA",
							"item": [
								{
									"name": "Get MFA Status",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://{{host}}/rest/v1/mfa/active",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"path": [
												"rest",
												"v1",
												"mfa",
												"active"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Login",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"Administrator\",\n\t\"password\": \"manage\"\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/login",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Send otp",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"prga@softwareag.com\",\n    \"password\": \"prga\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{host}}/rest/v1/login/sendotp",
									"protocol": "https",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"login",
										"sendotp"
									]
								}
							},
							"response": []
						},
						{
							"name": "Logout",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/logout",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"logout"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Password policy",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/passwordpolicy",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"passwordpolicy"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Password before Logging in",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/changepassword?userName=username&oldPassword=abc&newPassword=xyz",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"changepassword"
									],
									"query": [
										{
											"key": "userName",
											"value": "username"
										},
										{
											"key": "oldPassword",
											"value": "abc"
										},
										{
											"key": "newPassword",
											"value": "xyz"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Email verification",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/verify?id=54b53072-540e-3eb8-b8e9-343e71f28176",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"verify"
									],
									"query": [
										{
											"key": "id",
											"value": "54b53072-540e-3eb8-b8e9-343e71f28176"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Resend email verification",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/email/verify?email=abc@xyz.com",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"email",
										"verify"
									],
									"query": [
										{
											"key": "email",
											"value": "abc@xyz.com"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Group",
					"item": [
						{
							"name": "Get all Groups",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/groups?allowLDAP=false",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"groups"
									],
									"query": [
										{
											"key": "allowLDAP",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Group By ID",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/groups/8ad53d34-550a-35f8-ac0b-c540aa751dbf",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"groups",
										"8ad53d34-550a-35f8-ac0b-c540aa751dbf"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Group",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"API Provider Group\",\r\n    \"description\": \"Group of API Provider\"\r\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/groups",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Group",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"API Provider Group_Mod\",\r\n    \"description\": \"Group of API Provider\"\r\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/groups/7dead6ba-d7f3-321d-a5c9-971dc33b73fd",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"groups",
										"7dead6ba-d7f3-321d-a5c9-971dc33b73fd"
									]
								}
							},
							"response": []
						},
						{
							"name": "Assign Users to Group",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " [\"user1\",\"user2\",\"user3\"]"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/groups/23b0ce88-3296-36be-b2a1-f470aee3f031/users",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"groups",
										"23b0ce88-3296-36be-b2a1-f470aee3f031",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Group",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/groups/8ad53d34-550a-35f8-ac0b-c540aa751dbf",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"groups",
										"8ad53d34-550a-35f8-ac0b-c540aa751dbf"
									]
								}
							},
							"response": []
						},
						{
							"name": "Unassign Users from a Group",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " [\"user1\",\"user2\",\"user3\"]"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/groups/9870271b-5413-3053-b5b3-12f97a513552/users",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"groups",
										"9870271b-5413-3053-b5b3-12f97a513552",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Assigned Users of a Group",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/groups/23b0ce88-3296-36be-b2a1-f470aee3f031/users",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"groups",
										"23b0ce88-3296-36be-b2a1-f470aee3f031",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Assign/Unassign privileges",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"assigned\": {\r\n        \"ROLE_CONSUMER\": true,\r\n        \"ROLE_ADMINISTRATOR\": false,\r\n        \"ROLE_PROVIDER\": true\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/groups/1f1e5beb-6d56-4979-87e1-df0514fba1ee/permissions",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"groups",
										"1f1e5beb-6d56-4979-87e1-df0514fba1ee",
										"permissions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get group privileges",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/groups/1f1e5beb-6d56-4979-87e1-df0514fba1ee/permissions",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"groups",
										"1f1e5beb-6d56-4979-87e1-df0514fba1ee",
										"permissions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sync Ldap Group",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/groups/1f1e5beb-6d56-4979-87e1-df0514fba1ee/sync",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"groups",
										"1f1e5beb-6d56-4979-87e1-df0514fba1ee",
										"sync"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "User",
					"item": [
						{
							"name": "Get all Users",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/users/",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"users",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create User",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"prga\",\r\n    \"password\":\"prga\",\r\n    \"firstname\": \"prga\",\r\n    \"lastname\": \"prga\",\r\n    \"email\":\"prga@softwareag.com\"\r\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/users",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update User",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"system2_Mod\",\r\n    \"firstname\": \"Administrator\",\r\n    \"lastname\": \"System\",\r\n    \"tenant\": \"default\"\r\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/users/3453ferg4t3tt4",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"users",
										"3453ferg4t3tt4"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete User",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://{{host}}/rest/v1/users/1f1e5beb-6d56-4979-87e1-df0514fba1ee",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"users",
										"1f1e5beb-6d56-4979-87e1-df0514fba1ee"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User By ID",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/users/1f1e5beb-6d56-4979-87e1-df0514fba1ee",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"users",
										"1f1e5beb-6d56-4979-87e1-df0514fba1ee"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Self",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"system2_Mod\",\r\n    \"firstname\": \"Administrator\",\r\n    \"lastname\": \"System\",\r\n    \"tenant\": \"default\",\r\n    \"createdOn\": \"2020-02-11 09:18\",\r\n    \"modifiedOn\": \"2020-02-11 09:18\"\r\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/users/self",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"users",
										"self"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get self roles",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/users/self/privileges",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"users",
										"self",
										"privileges"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Password",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "oldPassword",
											"value": "omg1",
											"type": "text"
										},
										{
											"key": "newPassword",
											"value": "n1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/users/updatepassword",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"users",
										"updatepassword"
									],
									"query": [
										{
											"key": "oldPassword",
											"value": "n1",
											"disabled": true
										},
										{
											"key": "newPassword",
											"value": "omg1",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Change password by Admin",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/users/1f1e5beb-6d56-4979-87e1-df0514fba1ee/updatepassword",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"users",
										"1f1e5beb-6d56-4979-87e1-df0514fba1ee",
										"updatepassword"
									],
									"query": [
										{
											"key": "newPassword",
											"value": "password",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Email",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "password",
											"value": "test",
											"type": "text"
										},
										{
											"key": "email",
											"value": "abc@abc.com",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/users/updateemail",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"users",
										"updateemail"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Profile Picture",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/C:/Users/y509291/Downloads/img1.jpg"
										}
									]
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/users/updatepicture",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"users",
										"updatepicture"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Profile Picture",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://{{host}}/rest/v1/users/200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4/picture",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"users",
										"200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4",
										"picture"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Password",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "omg1"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/users/verifypassword",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"users",
										"verifypassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "Regenerate otp secret",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/users/otpsecret",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"users",
										"otpsecret"
									]
								}
							},
							"response": []
						},
						{
							"name": "Regenerate secret by Admin",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/users/8658b490-1a65-3633-bf46-e32bb8176d82/otpsecret",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"users",
										"8658b490-1a65-3633-bf46-e32bb8176d82",
										"otpsecret"
									]
								}
							},
							"response": []
						},
						{
							"name": "Reset Password",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"token\": \"eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1ODc5OTU5NDEsImp0aSI6IlEzeHZnNlA4VTNLdjZ2YlRFN1paaGNKaG1ybi0wd0J3cnBUTTlfSGF1X3hYVXZ2bExJdjNjeXB1X3VNczZRMmViamRXZHpuRSIsInN1YiI6InB0aGEiLCJ0ZW4iOiJkZWZhdWx0IiwiYXBpIjpmYWxzZSwia25kIjoiT05FVElNRSJ9.RNqWFqePp8FFW8I87M6qUbwDt02nq_kUK4ZI3ume4qk\",\n\t\"password\": \"123abc@\"\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/resetpassword",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"resetpassword"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Forgot Password",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/forgotpassword?userName=developer1",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"forgotpassword"
									],
									"query": [
										{
											"key": "userName",
											"value": "developer1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify session token",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"token\": \"eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1ODc5OTU5NDEsImp0aSI6IlEzeHZnNlA4VTNLdjZ2YlRFN1paaGNKaG1ybi0wd0J3cnBUTTlfSGF1X3hYVXZ2bExJdjNjeXB1X3VNczZRMmViamRXZHpuRSIsInN1YiI6InB0aGEiLCJ0ZW4iOiJkZWZhdWx0IiwiYXBpIjpmYWxzZSwia25kIjoiT05FVElNRSJ9.RNqWFqePp8FFW8I87M6qUbwDt02nq_kUK4ZI3ume4qk\"\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/validatesession",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"validatesession"
									]
								}
							},
							"response": []
						},
						{
							"name": "Password Policy",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://{{host}}/rest/v1/passwordpolicy",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"passwordpolicy"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Follow Streams",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://{{host}}/rest/v1/users/follows",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"users",
										"follows"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Notification Preference",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"INAPP\": {\r\n        \"TOPIC_CREATED\": \"OFF\",\r\n        \"COMMENT_CREATED\": \"INSTANT\",\r\n        \"APPROVAL_PENDING\": \"INSTANT\"\r\n    },\r\n    \"EMAIL\": {\r\n        \"TOPIC_CREATED\": \"INSTANT\",\r\n        \"COMMENT_CREATED\": \"OFF\",\r\n        \"APPROVAL_PENDING\": \"INSTANT\"\r\n    }\r\n}"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/users/preferences",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"users",
										"preferences"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Notification Preference",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/users/preferences",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"users",
										"preferences"
									]
								}
							},
							"response": []
						},
						{
							"name": "Assign/Unassign Privileges",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"assigned\": {\r\n        \"ROLE_CONSUMER\": true,\r\n        \"ROLE_ADMINISTRATOR\": false,\r\n        \"ROLE_PROVIDER\": true\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/users/1f1e5beb-6d56-4979-87e1-df0514fba1ee/permissions",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"users",
										"1f1e5beb-6d56-4979-87e1-df0514fba1ee",
										"permissions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get user privileges",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/users/1f1e5beb-6d56-4979-87e1-df0514fba1ee/permissions",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"users",
										"1f1e5beb-6d56-4979-87e1-df0514fba1ee",
										"permissions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sync Ldap User",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/users/1f1e5beb-6d56-4979-87e1-df0514fba1ee/sync",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"users",
										"1f1e5beb-6d56-4979-87e1-df0514fba1ee",
										"sync"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get communities",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/users/self/communities",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"users",
										"self",
										"communities"
									]
								},
								"description": "List all communities of the loged in User"
							},
							"response": []
						},
						{
							"name": "Assign groups to an user",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "administrator",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " [\"1a6cebe9-a842-3a78-b98e-3a17c2ac7553\",\"6dcd557a-2118-3623-8196-5025b95fc18d\"]"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/users/a8a15bca-2cb1-3be0-ba71-0f778aced8a7/groups",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"users",
										"a8a15bca-2cb1-3be0-ba71-0f778aced8a7",
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "Unassign groups from an user",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "administrator",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " [\"1a6cebe9-a842-3a78-b98e-3a17c2ac7553\",\"6dcd557a-2118-3623-8196-5025b95fc18d\"]"
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/users/a8a15bca-2cb1-3be0-ba71-0f778aced8a7/groups",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"users",
										"a8a15bca-2cb1-3be0-ba71-0f778aced8a7",
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Usage Report Preference",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/rest/v1/users/preferences/reports",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"users",
										"preferences",
										"reports"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Usage Report Preference",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"reportFrequency\": [\r\n        \"DAILY\",\r\n        \"MONTHLY\",\r\n        \"WEEKLY\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/users/preferences/reports",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"users",
										"preferences",
										"reports"
									]
								}
							},
							"response": []
						},
						{
							"name": "anonymize users",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "manage",
											"type": "string"
										},
										{
											"key": "username",
											"value": "Administrator",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"testUser1\",\"testUser2\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/rest/v1/users/anonymize",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"rest",
										"v1",
										"users",
										"anonymize"
									]
								},
								"description": "After deleting the user(s) from the developer portal, those user(s) can be anonymized by the administrator using this endpoint with the user names / login names."
							},
							"response": []
						}
					]
				},
				{
					"name": "Signup",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"test@gmail.com\",\n\t\"password\": \"test\",\n\t\"firstname\" :\"test\",\n\t\"lastname\" :\"test\",\n\t\"email\" : \"test@gmail.com\"\n}"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/signup",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"signup"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Notification Management",
			"item": [
				{
					"name": "Get all notifications",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/notifications/",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"notifications",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get count of unread notifications",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/notifications/_count",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"notifications",
								"_count"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update notification status",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"23b0ce88-3296-36be-b2a1-f470aee3f031\",\n    \"23b0ce88-3296-36be-b2a1-f470aee3f032\"\n]"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/notifications?status=UNREAD",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"notifications"
							],
							"query": [
								{
									"key": "status",
									"value": "UNREAD"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete notifications",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " [\"05842128-8aab-455a-ba34-ebe5864d13c7\",\"05842128-8aab-455a-ba34-ebe5864d1397\"]"
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/notifications",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"notifications"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Search",
			"item": [
				{
					"name": "Search APIs",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"conjunction\": \"AND\",\r\n    \"criterias\": [\r\n        {\r\n            \"field\": \"name\",\r\n            \"values\": [\r\n                \"BookWizard\"\r\n            ],\r\n            \"operation\": \"CONTAINS\"\r\n        },\r\n        {\r\n            \"field\": \"description\",\r\n            \"values\": [\r\n                \"My API : Book Wizard API\"\r\n            ],\r\n            \"operation\": \"CONTAINS\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/search/basic?type=api",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"search",
								"basic"
							],
							"query": [
								{
									"key": "type",
									"value": "api"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search protected APIs of Provider",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"conjunction\": \"AND\",\r\n    \"criterias\": [\r\n        {\r\n            \"field\": \"providerRef\",\r\n            \"values\": [\r\n                \"1e6af881-87dd-4436-b76a-00c285ed70f8\"\r\n            ],\r\n            \"operation\": \"CONTAINS\"\r\n        },\r\n        {\r\n            \"field\": \"securitySchemes\",\r\n            \"values\": [\r\n                \"APIKEY\",\r\n                \"OAUTH2\"\r\n            ],\r\n            \"operation\": \"EQUALS\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/search/basic?type=api",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"search",
								"basic"
							],
							"query": [
								{
									"key": "type",
									"value": "api"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Communities",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"conjunction\": \"OR\",\r\n  \"criterias\": [\r\n    {\r\n      \"field\": \"name\",\r\n      \"values\": [\r\n        \"CommunityA\"\r\n      ],\r\n      \"operation\": \"EQUALS\"\r\n    },\r\n    {\r\n      \"field\": \"description\",\r\n      \"values\": [\r\n        \"Description\"\r\n      ],\r\n      \"operation\": \"CONTAINS\"\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/search/basic?type=community",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"search",
								"basic"
							],
							"query": [
								{
									"key": "type",
									"value": "community"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Users by Role",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"criterias\": [\r\n    {\r\n      \"field\": \"role\",\r\n      \"values\": [\r\n        \"API Consumer\"\r\n      ],\r\n      \"operation\": \"EQUALS\"\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/search/basic?type=user",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"search",
								"basic"
							],
							"query": [
								{
									"key": "type",
									"value": "user"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Users by Name",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"criterias\": [\r\n    {\r\n      \"field\": \"name\",\r\n      \"values\": [\r\n        \"ProviderUser1\"\r\n      ],\r\n      \"operation\": \"CONTAINS\"\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/search/basic?type=user",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"search",
								"basic"
							],
							"query": [
								{
									"key": "type",
									"value": "user"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Groups",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"criterias\": [\r\n    {\r\n      \"field\": \"name\",\r\n      \"values\": [\r\n        \"ConsumerGroup1\"\r\n      ],\r\n      \"operation\": \"EQUALS\"\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/search/basic?type=group",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"search",
								"basic"
							],
							"query": [
								{
									"key": "type",
									"value": "group"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Packages",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"conjunction\": \"AND\",\r\n  \"criterias\": [\r\n    {\r\n      \"field\": \"name\",\r\n      \"values\": [\r\n        \"PublicPackageA\"\r\n      ],\r\n      \"operation\": \"CONTAINS\"\r\n    },\r\n    {\r\n      \"field\": \"description\",\r\n      \"values\": [\r\n        \"Description of PublicPackageA\"\r\n      ],\r\n      \"operation\": \"CONTAINS\"\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/search/basic?type=package",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"search",
								"basic"
							],
							"query": [
								{
									"key": "type",
									"value": "package"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search by Keyword",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/search?q=*",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "*"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search by Keyword (advanced)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/rest/v1/search/advanced?q=*&type=package",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"search",
								"advanced"
							],
							"query": [
								{
									"key": "q",
									"value": "*"
								},
								{
									"key": "type",
									"value": "package"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Teams",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"conjunction\": \"AND\",\r\n  \"criterias\": [\r\n    {\r\n      \"field\": \"name\",\r\n      \"values\": [\r\n        \"*\"\r\n      ],\r\n      \"operation\": \"CONTAINS\"\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/rest/v1/search/basic?type=community",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"rest",
								"v1",
								"search",
								"basic"
							],
							"query": [
								{
									"key": "type",
									"value": "community"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Health and Monitoring",
			"item": [
				{
					"name": "Overall Health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/portal/rest/v1/health",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"portal",
								"rest",
								"v1",
								"health"
							]
						},
						"description": "Request can be made without authorization to get only the overall status"
					},
					"response": []
				},
				{
					"name": "Detailed Health",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "manage",
									"type": "string"
								},
								{
									"key": "username",
									"value": "Administrator",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/portal/rest/v1/health",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"portal",
								"rest",
								"v1",
								"health"
							]
						},
						"description": "Authorization header need to be sent to get the complete details"
					},
					"response": []
				},
				{
					"name": "Liveness probe",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/portal/rest/v1/health/liveness",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"portal",
								"rest",
								"v1",
								"health",
								"liveness"
							]
						},
						"description": "Endpoint can be used in K8s deployment"
					},
					"response": []
				},
				{
					"name": "Readiness probe",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/portal/rest/v1/health/readiness",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"portal",
								"rest",
								"v1",
								"health",
								"readiness"
							]
						},
						"description": "Endpoint can be used in K8s deployment"
					},
					"response": []
				},
				{
					"name": "About application",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/portal/rest/v1/info",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"portal",
								"rest",
								"v1",
								"info"
							]
						},
						"description": "Endpoint will get you application build details"
					},
					"response": []
				},
				{
					"name": "Prometheus consumption",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/portal/rest/v1/prometheus",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"portal",
								"rest",
								"v1",
								"prometheus"
							]
						},
						"description": "Endpoint can be configured in prometheus for monitoring the application"
					},
					"response": []
				},
				{
					"name": "Environment settings",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "manage",
									"type": "string"
								},
								{
									"key": "username",
									"value": "Administrator",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/portal/rest/v1/env",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"portal",
								"rest",
								"v1",
								"env"
							]
						},
						"description": "Endpoint to get application and system environment settings details"
					},
					"response": []
				},
				{
					"name": "Metrics",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "manage",
									"type": "string"
								},
								{
									"key": "username",
									"value": "Administrator",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/portal/rest/v1/metrics",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"portal",
								"rest",
								"v1",
								"metrics"
							]
						},
						"description": "Endpoint to get the available JVM and tomcat metrics. The metrics can be drilled down by sending the particular metric name as path parameter"
					},
					"response": []
				}
			],
			"description": "The set of request to know about the application various metrics and health"
		},
		{
			"name": "Theme Management",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "pages",
							"item": [
								{
									"name": "{name}",
									"item": [
										{
											"name": "access",
											"item": [
												{
													"name": "Update permission for an custom page",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    {\n        \"entries\": [\n            {\n                \"subject\": \"72416718-bf14-4228-8e71-b4c803a44375\",\n                \"type\": \"COMMUNITY\",\n                \"permission\": \"READ\"\n            },\n            {\n                \"subject\": \"1e4332f6-5a7a-3210-b5fb-fb92c7c60cce\",\n                \"type\": \"USER\",\n                \"permission\": \"READ\"\n            },\n            {\n                \"subject\": \"8ad53d34-550a-35f8-ac0b-c540aa751dbf\",\n                \"type\": \"GROUP\",\n                \"permission\": \"READ\"\n            }\n        ]\n    }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "http://{{host}}/portal/rest/v1/themes/:id/pages/:name/access",
															"protocol": "http",
															"host": [
																"{{host}}"
															],
															"path": [
																"portal",
																"rest",
																"v1",
																"themes",
																":id",
																"pages",
																":name",
																"access"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
																}
															]
														},
														"description": "Developer Portal lets you to create custom pages. By this resource, the portal will provide\npossibility to assign & enforce role based access for the custom pages.\n\n*Endpoint can be accessed only by a user having **Administrator** role"
													},
													"response": [
														{
															"name": "Updated",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    {\n        \"entries\": [\n            {\n                \"subject\": \"72416718-bf14-4228-8e71-b4c803a44375\",\n                \"type\": \"COMMUNITY\",\n                \"permission\": \"READ\"\n            },\n            {\n                \"subject\": \"1e4332f6-5a7a-3210-b5fb-fb92c7c60cce\",\n                \"type\": \"USER\",\n                \"permission\": \"READ\"\n            },\n            {\n                \"subject\": \"8ad53d34-550a-35f8-ac0b-c540aa751dbf\",\n                \"type\": \"GROUP\",\n                \"permission\": \"READ\"\n            }\n        ]\n    }\n]",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/themes/:id/pages/:name/access",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"themes",
																		":id",
																		"pages",
																		":name",
																		"access"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "Lorem esse dolor deserunt",
																			"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																		},
																		{
																			"key": "name",
																			"value": "Lorem esse dolor deserunt",
																			"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 200,\n \"message\": \"Updated successfully\"\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    {\n        \"entries\": [\n            {\n                \"subject\": \"72416718-bf14-4228-8e71-b4c803a44375\",\n                \"type\": \"COMMUNITY\",\n                \"permission\": \"READ\"\n            },\n            {\n                \"subject\": \"1e4332f6-5a7a-3210-b5fb-fb92c7c60cce\",\n                \"type\": \"USER\",\n                \"permission\": \"READ\"\n            },\n            {\n                \"subject\": \"8ad53d34-550a-35f8-ac0b-c540aa751dbf\",\n                \"type\": \"GROUP\",\n                \"permission\": \"READ\"\n            }\n        ]\n    }\n]",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/themes/:id/pages/:name/access",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"themes",
																		":id",
																		"pages",
																		":name",
																		"access"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "Lorem esse dolor deserunt",
																			"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																		},
																		{
																			"key": "name",
																			"value": "Lorem esse dolor deserunt",
																			"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 403,\n \"message\": \"Insufficient privileges\"\n}"
														},
														{
															"name": "The specified resource was not found",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    {\n        \"entries\": [\n            {\n                \"subject\": \"72416718-bf14-4228-8e71-b4c803a44375\",\n                \"type\": \"COMMUNITY\",\n                \"permission\": \"READ\"\n            },\n            {\n                \"subject\": \"1e4332f6-5a7a-3210-b5fb-fb92c7c60cce\",\n                \"type\": \"USER\",\n                \"permission\": \"READ\"\n            },\n            {\n                \"subject\": \"8ad53d34-550a-35f8-ac0b-c540aa751dbf\",\n                \"type\": \"GROUP\",\n                \"permission\": \"READ\"\n            }\n        ]\n    }\n]",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/themes/:id/pages/:name/access",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"themes",
																		":id",
																		"pages",
																		":name",
																		"access"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "Lorem esse dolor deserunt",
																			"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																		},
																		{
																			"key": "name",
																			"value": "Lorem esse dolor deserunt",
																			"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"status\": 404,\n \"message\": \"Unable to find the theme\"\n}"
														},
														{
															"name": "The request was unacceptable, due to invalid credentials",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n    {\n        \"entries\": [\n            {\n                \"subject\": \"72416718-bf14-4228-8e71-b4c803a44375\",\n                \"type\": \"COMMUNITY\",\n                \"permission\": \"READ\"\n            },\n            {\n                \"subject\": \"1e4332f6-5a7a-3210-b5fb-fb92c7c60cce\",\n                \"type\": \"USER\",\n                \"permission\": \"READ\"\n            },\n            {\n                \"subject\": \"8ad53d34-550a-35f8-ac0b-c540aa751dbf\",\n                \"type\": \"GROUP\",\n                \"permission\": \"READ\"\n            }\n        ]\n    }\n]",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/themes/:id/pages/:name/access",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"themes",
																		":id",
																		"pages",
																		":name",
																		"access"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "Lorem esse dolor deserunt",
																			"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																		},
																		{
																			"key": "name",
																			"value": "Lorem esse dolor deserunt",
																			"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 401,\n \"message\": \"Invalid credentials\"\n}"
														}
													]
												},
												{
													"name": "Retrieve access permission for particular page by name identified within a theme",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "http://{{host}}/portal/rest/v1/themes/:id/pages/:name/access",
															"protocol": "http",
															"host": [
																"{{host}}"
															],
															"path": [
																"portal",
																"rest",
																"v1",
																"themes",
																":id",
																"pages",
																":name",
																"access"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
																}
															]
														},
														"description": "Developer Portal lets you to create custom pages. By this resource, the portal will provide\npossibility to retrieve the access permissions defined for a custom pages.\n\n*Endpoint can be accessed only by a user having **Administrator** role"
													},
													"response": [
														{
															"name": "ok",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/themes/:id/pages/:name/access",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"themes",
																		":id",
																		"pages",
																		":name",
																		"access"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "Lorem esse dolor deserunt",
																			"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																		},
																		{
																			"key": "name",
																			"value": "Lorem esse dolor deserunt",
																			"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"entries\": [\n  {\n   \"subject\": \"72416718-bf14-4228-8e71-b4c803a44375\",\n   \"type\": \"COMMUNITY\",\n   \"permission\": \"READ\"\n  },\n  {\n   \"subject\": \"1e4332f6-5a7a-3210-b5fb-fb92c7c60cce\",\n   \"type\": \"USER\",\n   \"permission\": \"READ\"\n  },\n  {\n   \"subject\": \"8ad53d34-550a-35f8-ac0b-c540aa751dbf\",\n   \"type\": \"GROUP\",\n   \"permission\": \"READ\"\n  }\n ]\n}"
														},
														{
															"name": "The specified resource was not found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/themes/:id/pages/:name/access",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"themes",
																		":id",
																		"pages",
																		":name",
																		"access"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "Lorem esse dolor deserunt",
																			"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																		},
																		{
																			"key": "name",
																			"value": "Lorem esse dolor deserunt",
																			"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"status\": 404,\n \"message\": \"Unable to find the theme\"\n}"
														},
														{
															"name": "The request was unacceptable, due to invalid credentials",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/themes/:id/pages/:name/access",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"themes",
																		":id",
																		"pages",
																		":name",
																		"access"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "Lorem esse dolor deserunt",
																			"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																		},
																		{
																			"key": "name",
																			"value": "Lorem esse dolor deserunt",
																			"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 401,\n \"message\": \"Invalid credentials\"\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/themes/:id/pages/:name/access",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"themes",
																		":id",
																		"pages",
																		":name",
																		"access"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "Lorem esse dolor deserunt",
																			"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																		},
																		{
																			"key": "name",
																			"value": "Lorem esse dolor deserunt",
																			"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": 403,\n \"message\": \"Insufficient privileges\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "create a new page",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"name\": \"FLEXBOX\",\n        \"type\": \"layout\",\n        \"options\": {\n            \"direction\": \"column\"\n        },\n        \"style\": {\n            \"wrapper\": \"margin-left: 1rem; margin-right: 1rem; margin-top: 1rem; margin-bottom: 1rem;\"\n        },\n        \"children\": [\n            {\n                \"name\": \"HeadingComponent\",\n                \"type\": \"widget\",\n                \"options\": {\n                    \"type\": 1,\n                    \"text\": \"Add your heading here...\"\n                }\n            },\n            {\n                \"name\": \"ParagraphComponent\",\n                \"type\": \"widget\",\n                \"options\": {\n                    \"text\": \"Add your text here..\"\n                }\n            }\n        ]\n    }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://{{host}}/portal/rest/v1/themes/:id/pages/:name",
													"protocol": "http",
													"host": [
														"{{host}}"
													],
													"path": [
														"portal",
														"rest",
														"v1",
														"themes",
														":id",
														"pages",
														":name"
													],
													"variable": [
														{
															"key": "id",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
														},
														{
															"key": "name",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
														}
													]
												},
												"description": "Endpoint to create a page inside a theme. Attribute 'type' can have layout and widget as value.\n\n*Endpoint can be accessed only by a user having **Administrator** role"
											},
											"response": [
												{
													"name": "Updated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    {\n        \"name\": \"FLEXBOX\",\n        \"type\": \"layout\",\n        \"options\": {\n            \"direction\": \"column\"\n        },\n        \"style\": {\n            \"wrapper\": \"margin-left: 1rem; margin-right: 1rem; margin-top: 1rem; margin-bottom: 1rem;\"\n        },\n        \"children\": [\n            {\n                \"name\": \"HeadingComponent\",\n                \"type\": \"widget\",\n                \"options\": {\n                    \"type\": 1,\n                    \"text\": \"Add your heading here...\"\n                }\n            },\n            {\n                \"name\": \"ParagraphComponent\",\n                \"type\": \"widget\",\n                \"options\": {\n                    \"text\": \"Add your text here..\"\n                }\n            }\n        ]\n    }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/themes/:id/pages/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"pages",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 200,\n \"message\": \"Updated successfully\"\n}"
												},
												{
													"name": "The specified resource was not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    {\n        \"name\": \"FLEXBOX\",\n        \"type\": \"layout\",\n        \"options\": {\n            \"direction\": \"column\"\n        },\n        \"style\": {\n            \"wrapper\": \"margin-left: 1rem; margin-right: 1rem; margin-top: 1rem; margin-bottom: 1rem;\"\n        },\n        \"children\": [\n            {\n                \"name\": \"HeadingComponent\",\n                \"type\": \"widget\",\n                \"options\": {\n                    \"type\": 1,\n                    \"text\": \"Add your heading here...\"\n                }\n            },\n            {\n                \"name\": \"ParagraphComponent\",\n                \"type\": \"widget\",\n                \"options\": {\n                    \"text\": \"Add your text here..\"\n                }\n            }\n        ]\n    }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/themes/:id/pages/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"pages",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"Unable to find the theme\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    {\n        \"name\": \"FLEXBOX\",\n        \"type\": \"layout\",\n        \"options\": {\n            \"direction\": \"column\"\n        },\n        \"style\": {\n            \"wrapper\": \"margin-left: 1rem; margin-right: 1rem; margin-top: 1rem; margin-bottom: 1rem;\"\n        },\n        \"children\": [\n            {\n                \"name\": \"HeadingComponent\",\n                \"type\": \"widget\",\n                \"options\": {\n                    \"type\": 1,\n                    \"text\": \"Add your heading here...\"\n                }\n            },\n            {\n                \"name\": \"ParagraphComponent\",\n                \"type\": \"widget\",\n                \"options\": {\n                    \"text\": \"Add your text here..\"\n                }\n            }\n        ]\n    }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/themes/:id/pages/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"pages",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 403,\n \"message\": \"Insufficient privileges\"\n}"
												},
												{
													"name": "The request was unacceptable, due to invalid credentials",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    {\n        \"name\": \"FLEXBOX\",\n        \"type\": \"layout\",\n        \"options\": {\n            \"direction\": \"column\"\n        },\n        \"style\": {\n            \"wrapper\": \"margin-left: 1rem; margin-right: 1rem; margin-top: 1rem; margin-bottom: 1rem;\"\n        },\n        \"children\": [\n            {\n                \"name\": \"HeadingComponent\",\n                \"type\": \"widget\",\n                \"options\": {\n                    \"type\": 1,\n                    \"text\": \"Add your heading here...\"\n                }\n            },\n            {\n                \"name\": \"ParagraphComponent\",\n                \"type\": \"widget\",\n                \"options\": {\n                    \"text\": \"Add your text here..\"\n                }\n            }\n        ]\n    }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/themes/:id/pages/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"pages",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 401,\n \"message\": \"Invalid credentials\"\n}"
												}
											]
										},
										{
											"name": "Update an existing page",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"name\": \"FLEXBOX\",\n        \"type\": \"layout\",\n        \"options\": {\n            \"direction\": \"column\"\n        },\n        \"style\": {\n            \"wrapper\": \"margin-left: 1rem; margin-right: 1rem; margin-top: 1rem; margin-bottom: 1rem;\"\n        },\n        \"children\": [\n            {\n                \"name\": \"HeadingComponent\",\n                \"type\": \"widget\",\n                \"options\": {\n                    \"type\": 1,\n                    \"text\": \"Add your heading here...\"\n                }\n            }\n        ]\n    }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://{{host}}/portal/rest/v1/themes/:id/pages/:name",
													"protocol": "http",
													"host": [
														"{{host}}"
													],
													"path": [
														"portal",
														"rest",
														"v1",
														"themes",
														":id",
														"pages",
														":name"
													],
													"variable": [
														{
															"key": "id",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
														},
														{
															"key": "name",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
														}
													]
												},
												"description": "Endpoint to update an existing page inside a theme.\n\n*Endpoint can be accessed only by a user having **Administrator** role"
											},
											"response": [
												{
													"name": "The specified resource was not found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    {\n        \"name\": \"FLEXBOX\",\n        \"type\": \"layout\",\n        \"options\": {\n            \"direction\": \"column\"\n        },\n        \"style\": {\n            \"wrapper\": \"margin-left: 1rem; margin-right: 1rem; margin-top: 1rem; margin-bottom: 1rem;\"\n        },\n        \"children\": [\n            {\n                \"name\": \"HeadingComponent\",\n                \"type\": \"widget\",\n                \"options\": {\n                    \"type\": 1,\n                    \"text\": \"Add your heading here...\"\n                }\n            }\n        ]\n    }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/themes/:id/pages/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"pages",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"Unable to find the theme\"\n}"
												},
												{
													"name": "The request was unacceptable, due to invalid credentials",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    {\n        \"name\": \"FLEXBOX\",\n        \"type\": \"layout\",\n        \"options\": {\n            \"direction\": \"column\"\n        },\n        \"style\": {\n            \"wrapper\": \"margin-left: 1rem; margin-right: 1rem; margin-top: 1rem; margin-bottom: 1rem;\"\n        },\n        \"children\": [\n            {\n                \"name\": \"HeadingComponent\",\n                \"type\": \"widget\",\n                \"options\": {\n                    \"type\": 1,\n                    \"text\": \"Add your heading here...\"\n                }\n            }\n        ]\n    }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/themes/:id/pages/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"pages",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 401,\n \"message\": \"Invalid credentials\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    {\n        \"name\": \"FLEXBOX\",\n        \"type\": \"layout\",\n        \"options\": {\n            \"direction\": \"column\"\n        },\n        \"style\": {\n            \"wrapper\": \"margin-left: 1rem; margin-right: 1rem; margin-top: 1rem; margin-bottom: 1rem;\"\n        },\n        \"children\": [\n            {\n                \"name\": \"HeadingComponent\",\n                \"type\": \"widget\",\n                \"options\": {\n                    \"type\": 1,\n                    \"text\": \"Add your heading here...\"\n                }\n            }\n        ]\n    }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/themes/:id/pages/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"pages",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 403,\n \"message\": \"Insufficient privileges\"\n}"
												},
												{
													"name": "Updated",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    {\n        \"name\": \"FLEXBOX\",\n        \"type\": \"layout\",\n        \"options\": {\n            \"direction\": \"column\"\n        },\n        \"style\": {\n            \"wrapper\": \"margin-left: 1rem; margin-right: 1rem; margin-top: 1rem; margin-bottom: 1rem;\"\n        },\n        \"children\": [\n            {\n                \"name\": \"HeadingComponent\",\n                \"type\": \"widget\",\n                \"options\": {\n                    \"type\": 1,\n                    \"text\": \"Add your heading here...\"\n                }\n            }\n        ]\n    }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/themes/:id/pages/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"pages",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 200,\n \"message\": \"Updated successfully\"\n}"
												}
											]
										},
										{
											"name": "Retrieve a particular page by name",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "http://{{host}}/portal/rest/v1/themes/:id/pages/:name",
													"protocol": "http",
													"host": [
														"{{host}}"
													],
													"path": [
														"portal",
														"rest",
														"v1",
														"themes",
														":id",
														"pages",
														":name"
													],
													"variable": [
														{
															"key": "id",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
														},
														{
															"key": "name",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
														}
													]
												},
												"description": "Endpoint to obtain details of a particular page inside a theme.\n\n*Endpoint can be accessed only by a user having **Administrator** role"
											},
											"response": [
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/themes/:id/pages/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"pages",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 403,\n \"message\": \"Insufficient privileges\"\n}"
												},
												{
													"name": "The specified resource was not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/themes/:id/pages/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"pages",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"Unable to find the theme\"\n}"
												},
												{
													"name": "The request was unacceptable, due to invalid credentials",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/themes/:id/pages/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"pages",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 401,\n \"message\": \"Invalid credentials\"\n}"
												},
												{
													"name": "ok",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/themes/:id/pages/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"pages",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"name\": \"FLEXBOX\",\n  \"type\": \"layout\",\n  \"options\": {\n   \"direction\": \"column\",\n   \"width\": \"100%\"\n  },\n  \"style\": {\n   \"wrapper\": \"padding: 0 24px;\"\n  },\n  \"children\": [\n   {\n    \"name\": \"FLEXBOX\",\n    \"type\": \"layout\",\n    \"options\": {\n     \"crossAxis\": \"center\"\n    },\n    \"style\": {\n     \"wrapper\": \"padding-top: 1rem;\"\n    },\n    \"children\": [\n     {\n      \"name\": \"LinkComponent\",\n      \"type\": \"widget\",\n      \"options\": {\n       \"key\": \"base.shared.home.LBL\",\n       \"type\": \"internal\",\n       \"href\": \"/\"\n      }\n     },\n     {\n      \"name\": \"IconComponent\",\n      \"type\": \"widget\",\n      \"options\": {\n       \"name\": \"dlt-icon-chevron-breadcrumb\"\n      },\n      \"style\": {\n       \"element\": \"padding: 0 .125rem;\\n                    color: grey;\\n                    font-size: 1rem;\\n                    vertical-align: middle;\\n                    line-height: 1.5;\"\n      }\n     },\n     {\n      \"name\": \"LinkComponent\",\n      \"type\": \"widget\",\n      \"options\": {\n       \"key\": \"consumer.about.headingcomponent.heading.LBL\",\n       \"current\": \"page\",\n       \"type\": \"internal\",\n       \"href\": \"/communities\"\n      }\n     }\n    ]\n   },\n   {\n    \"name\": \"HeadingComponent\",\n    \"type\": \"widget\",\n    \"options\": {\n     \"key\": \"consumer.header.aboutcomponent.heading.LBL\",\n     \"type\": 1\n    },\n    \"style\": {\n     \"element\": \"font-weight: 300;\\n   margin-bottom: 0;\\n      margin-top: 0.5rem;\"\n    }\n   },\n   {\n    \"name\": \"ParagraphComponent\",\n    \"type\": \"widget\",\n    \"options\": {\n     \"key\": \"consumer.header.aboutcomponent.subheading.LBL\"\n    },\n    \"style\": {\n     \"element\": \"font-size: 90%;\\nline-height: 1.5;\"\n    }\n   },\n   {\n    \"name\": \"FLEXBOX\",\n    \"type\": \"layout\",\n    \"options\": {\n     \"width\": \"100%\"\n    },\n    \"children\": [\n     {\n      \"name\": \"AboutComponent\",\n      \"type\": \"widget\"\n     }\n    ]\n   },\n   {\n    \"name\": \"FLEXBOX\",\n    \"type\": \"layout\",\n    \"options\": {\n     \"direction\": \"column\"\n    },\n    \"children\": [\n     {\n      \"name\": \"HeadingComponent\",\n      \"type\": \"widget\",\n      \"options\": {\n       \"key\": \"base.header.aboutcomponent.copyright.heading.LBL\",\n       \"type\": 1\n      },\n      \"style\": {\n       \"element\": \"font-weight: 300;\\n   margin-bottom: 1rem;\\n      margin-top: 0.5rem;\"\n      }\n     },\n     {\n      \"name\": \"ParagraphComponent\",\n      \"type\": \"widget\",\n      \"options\": {\n       \"key\": \"base.footer.paragraphcomponent.copyright.LBL\"\n      },\n      \"style\": {\n       \"element\": \"margin-bottom:  1rem;\\nfont-size: 90%;\\nline-height: 1.5;\"\n      }\n     },\n     {\n      \"name\": \"ParagraphComponent\",\n      \"type\": \"widget\",\n      \"options\": {\n       \"key\": \"base.header.aboutcomponent.trademarks.LBL\"\n      },\n      \"style\": {\n       \"element\": \"margin-bottom:  1rem;\\nfont-size: 90%;\\nline-height: 1.5;\"\n      }\n     },\n     {\n      \"name\": \"ParagraphComponent\",\n      \"type\": \"widget\",\n      \"options\": {\n       \"key\": \"base.header.aboutcomponent.copyright.LBL\"\n      },\n      \"style\": {\n       \"element\": \"margin-bottom:  1rem;\\nfont-size: 90%;\\nline-height: 1.5;\"\n      }\n     },\n     {\n      \"name\": \"ParagraphComponent\",\n      \"type\": \"widget\",\n      \"options\": {\n       \"key\": \"base.header.aboutcomponent.thirdparty.LBL\"\n      },\n      \"style\": {\n       \"element\": \"margin-bottom:  1rem;font-size: 90%;\\nline-height: 1.5;\"\n      }\n     },\n     {\n      \"name\": \"ParagraphComponent\",\n      \"type\": \"widget\",\n      \"options\": {\n       \"key\": \"base.header.aboutcomponent.confidentiality.LBL\"\n      },\n      \"style\": {\n       \"element\": \"font-size: 90%;\\nline-height: 1.5;\"\n      }\n     }\n    ]\n   }\n  ]\n }\n]"
												}
											]
										},
										{
											"name": "Delete the existing page",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "http://{{host}}/portal/rest/v1/themes/:id/pages/:name",
													"protocol": "http",
													"host": [
														"{{host}}"
													],
													"path": [
														"portal",
														"rest",
														"v1",
														"themes",
														":id",
														"pages",
														":name"
													],
													"variable": [
														{
															"key": "id",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
														},
														{
															"key": "name",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
														}
													]
												},
												"description": "Endpoint to delete a particular page based on page name.\n\n*Endpoint can be accessed only by a user having **Administrator** role*"
											},
											"response": [
												{
													"name": "The request was unacceptable, due to invalid credentials",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/themes/:id/pages/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"pages",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 401,\n \"message\": \"Invalid credentials\"\n}"
												},
												{
													"name": "The specified resource was not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/themes/:id/pages/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"pages",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"Unable to find the theme\"\n}"
												},
												{
													"name": "OK",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/themes/:id/pages/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"pages",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/themes/:id/pages/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"pages",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for page. Refers to the name of the page. For example `HomePage`"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 403,\n \"message\": \"Insufficient privileges\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Retrieve the list of pages by theme ID",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/themes/:id/pages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id",
												"pages"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme. For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										},
										"description": "Endpoint to obtain details of list of pages created inside a particular theme.\n\n*Endpoint can be accessed only by a user having **Administrator** role"
									},
									"response": [
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/themes/:id/pages",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"themes",
														":id",
														"pages"
													],
													"variable": [
														{
															"key": "id",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme. For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 403,\n \"message\": \"Insufficient privileges\"\n}"
										},
										{
											"name": "The request was unacceptable, due to invalid credentials",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/themes/:id/pages",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"themes",
														":id",
														"pages"
													],
													"variable": [
														{
															"key": "id",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme. For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 401,\n \"message\": \"Invalid credentials\"\n}"
										},
										{
											"name": "The specified resource was not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/themes/:id/pages",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"themes",
														":id",
														"pages"
													],
													"variable": [
														{
															"key": "id",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme. For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"status\": 404,\n \"message\": \"Unable to find the theme\"\n}"
										},
										{
											"name": "ok",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/themes/:id/pages",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"themes",
														":id",
														"pages"
													],
													"variable": [
														{
															"key": "id",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme. For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"name\": \"about\",\n  \"custom\": false\n },\n {\n  \"name\": \"api-details\",\n  \"custom\": false\n },\n {\n  \"name\": \"api-gallery\",\n  \"custom\": false\n },\n {\n  \"name\": \"footer\",\n  \"custom\": false\n }\n]"
										}
									]
								}
							]
						},
						{
							"name": "layouts",
							"item": [
								{
									"name": "{name}",
									"item": [
										{
											"name": "create a new layout",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"name\": \"FLEXBOX\",\n        \"type\": \"layout\",\n        \"options\": {\n            \"width\": \"100%\"\n        },\n        \"children\": [\n            {\n                \"name\": \"FLEXBOX\",\n                \"type\": \"layout\",\n                \"options\": {\n                    \"direction\": \"column\",\n                    \"flexBasis\": \"50%\",\n                    \"mainAxis\": \"center\",\n                    \"crossAxis\": \"center\"\n                },\n                \"style\": {\n                    \"wrapper\": \"margin: 1rem; min-height: 12rem;\"\n                }\n            },\n            {\n                \"name\": \"FLEXBOX\",\n                \"type\": \"layout\",\n                \"options\": {\n                    \"direction\": \"column\",\n                    \"flexBasis\": \"50%\",\n                    \"mainAxis\": \"center\",\n                    \"crossAxis\": \"center\"\n                },\n                \"style\": {\n                    \"wrapper\": \"margin: 1rem; min-height: 12rem;\"\n                }\n            }\n        ]\n    }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://{{host}}/portal/rest/v1/themes/:id/layouts/:name",
													"protocol": "http",
													"host": [
														"{{host}}"
													],
													"path": [
														"portal",
														"rest",
														"v1",
														"themes",
														":id",
														"layouts",
														":name"
													],
													"variable": [
														{
															"key": "id",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
														},
														{
															"key": "name",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for layout. Refers to the name of the layout. For example `two-horizontl`"
														}
													]
												},
												"description": "Endpoint to create a layout inside a theme.\n\n*Endpoint can be accessed only by a user having **Administrator** role\n\n### Layout:\nLayout defines the skeleton of a building block. Layouts are used to pad the content inside of them. These are called children.\n\n#### Options:\n  Below are the different options can be configured for a layout.\n\n  * direction:\n\n    Specifies the direction of in which the child components added inside the current block. Available options are\n\n    `Row` - Aligns components in a horizontal fashion like a row\n\n    `Column` - Aligns components in a version fashion like a column\n\n  * mainAxis:\n\n    Specifies the option to determine how the components inside the current block must be distributed between and around the main axis of the page. Available options are\n\n     `Start` - Aligns components from the start of the block.\n\n     `Center` -Aligns components towards the center of the block\n\n     `End` - Aligns components towards the bottom portion of the block.\n\n     `Space around` - Distributes components evenly. Components have a half-size space on either end. Aligns the paragraphs in a block\n      allowing space around each paragraph.\n\n     `Space between` - Distribute components evenly The first item is\n      flush with the start, the last is flush with the end\n\n  * crossAxis:\n\n    Specifies the option to determine how the components inside the current block must be distributed between and around the cross axis of the page. Available options are\n\n     `Start` - Aligns components from the start of the block.\n\n     `Center` -Aligns components towards the center of the block\n\n     `End` - Aligns components towards the bottom portion of the block.\n\n     `Stretch` - Stretches and aligns components to fill the block.\n\n  * flexBasis:\n    Specifies the initial minimum width of the block.\n\n  * width:\n    Specifies the width of the block.\n\n### Widget:\n  Widgets offer are core components that can be placed inside a container. Developer portal offers various basic widgets that can be used to build a full blown HTML pages."
											},
											"response": [
												{
													"name": "The request was unacceptable, due to invalid credentials",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    {\n        \"name\": \"FLEXBOX\",\n        \"type\": \"layout\",\n        \"options\": {\n            \"width\": \"100%\"\n        },\n        \"children\": [\n            {\n                \"name\": \"FLEXBOX\",\n                \"type\": \"layout\",\n                \"options\": {\n                    \"direction\": \"column\",\n                    \"flexBasis\": \"50%\",\n                    \"mainAxis\": \"center\",\n                    \"crossAxis\": \"center\"\n                },\n                \"style\": {\n                    \"wrapper\": \"margin: 1rem; min-height: 12rem;\"\n                }\n            },\n            {\n                \"name\": \"FLEXBOX\",\n                \"type\": \"layout\",\n                \"options\": {\n                    \"direction\": \"column\",\n                    \"flexBasis\": \"50%\",\n                    \"mainAxis\": \"center\",\n                    \"crossAxis\": \"center\"\n                },\n                \"style\": {\n                    \"wrapper\": \"margin: 1rem; min-height: 12rem;\"\n                }\n            }\n        ]\n    }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/themes/:id/layouts/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"layouts",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for layout. Refers to the name of the layout. For example `two-horizontl`"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 401,\n \"message\": \"Invalid credentials\"\n}"
												},
												{
													"name": "The specified resource was not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    {\n        \"name\": \"FLEXBOX\",\n        \"type\": \"layout\",\n        \"options\": {\n            \"width\": \"100%\"\n        },\n        \"children\": [\n            {\n                \"name\": \"FLEXBOX\",\n                \"type\": \"layout\",\n                \"options\": {\n                    \"direction\": \"column\",\n                    \"flexBasis\": \"50%\",\n                    \"mainAxis\": \"center\",\n                    \"crossAxis\": \"center\"\n                },\n                \"style\": {\n                    \"wrapper\": \"margin: 1rem; min-height: 12rem;\"\n                }\n            },\n            {\n                \"name\": \"FLEXBOX\",\n                \"type\": \"layout\",\n                \"options\": {\n                    \"direction\": \"column\",\n                    \"flexBasis\": \"50%\",\n                    \"mainAxis\": \"center\",\n                    \"crossAxis\": \"center\"\n                },\n                \"style\": {\n                    \"wrapper\": \"margin: 1rem; min-height: 12rem;\"\n                }\n            }\n        ]\n    }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/themes/:id/layouts/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"layouts",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for layout. Refers to the name of the layout. For example `two-horizontl`"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"Unable to find the theme\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    {\n        \"name\": \"FLEXBOX\",\n        \"type\": \"layout\",\n        \"options\": {\n            \"width\": \"100%\"\n        },\n        \"children\": [\n            {\n                \"name\": \"FLEXBOX\",\n                \"type\": \"layout\",\n                \"options\": {\n                    \"direction\": \"column\",\n                    \"flexBasis\": \"50%\",\n                    \"mainAxis\": \"center\",\n                    \"crossAxis\": \"center\"\n                },\n                \"style\": {\n                    \"wrapper\": \"margin: 1rem; min-height: 12rem;\"\n                }\n            },\n            {\n                \"name\": \"FLEXBOX\",\n                \"type\": \"layout\",\n                \"options\": {\n                    \"direction\": \"column\",\n                    \"flexBasis\": \"50%\",\n                    \"mainAxis\": \"center\",\n                    \"crossAxis\": \"center\"\n                },\n                \"style\": {\n                    \"wrapper\": \"margin: 1rem; min-height: 12rem;\"\n                }\n            }\n        ]\n    }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/themes/:id/layouts/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"layouts",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for layout. Refers to the name of the layout. For example `two-horizontl`"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 403,\n \"message\": \"Insufficient privileges\"\n}"
												},
												{
													"name": "Updated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    {\n        \"name\": \"FLEXBOX\",\n        \"type\": \"layout\",\n        \"options\": {\n            \"width\": \"100%\"\n        },\n        \"children\": [\n            {\n                \"name\": \"FLEXBOX\",\n                \"type\": \"layout\",\n                \"options\": {\n                    \"direction\": \"column\",\n                    \"flexBasis\": \"50%\",\n                    \"mainAxis\": \"center\",\n                    \"crossAxis\": \"center\"\n                },\n                \"style\": {\n                    \"wrapper\": \"margin: 1rem; min-height: 12rem;\"\n                }\n            },\n            {\n                \"name\": \"FLEXBOX\",\n                \"type\": \"layout\",\n                \"options\": {\n                    \"direction\": \"column\",\n                    \"flexBasis\": \"50%\",\n                    \"mainAxis\": \"center\",\n                    \"crossAxis\": \"center\"\n                },\n                \"style\": {\n                    \"wrapper\": \"margin: 1rem; min-height: 12rem;\"\n                }\n            }\n        ]\n    }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/themes/:id/layouts/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"layouts",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for layout. Refers to the name of the layout. For example `two-horizontl`"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 200,\n \"message\": \"Updated successfully\"\n}"
												}
											]
										},
										{
											"name": "Update an existing layout",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"name\": \"FLEXBOX\",\n        \"type\": \"layout\",\n        \"options\": {\n            \"width\": \"100%\"\n        },\n        \"children\": [\n            {\n                \"name\": \"FLEXBOX\",\n                \"type\": \"layout\",\n                \"options\": {\n                    \"direction\": \"column\",\n                    \"flexBasis\": \"50%\",\n                    \"mainAxis\": \"center\",\n                    \"crossAxis\": \"center\"\n                },\n                \"style\": {\n                    \"wrapper\": \"margin: 1rem; min-height: 12rem;\"\n                },\n                \"id\": \"6f862559-b88f-4319-f384-3014ffbdea47\"\n            }\n        ],\n        \"id\": \"9c6a7b6a-f294-2769-c6fe-e5bf5ca4a604\"\n    }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://{{host}}/portal/rest/v1/themes/:id/layouts/:name",
													"protocol": "http",
													"host": [
														"{{host}}"
													],
													"path": [
														"portal",
														"rest",
														"v1",
														"themes",
														":id",
														"layouts",
														":name"
													],
													"variable": [
														{
															"key": "id",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
														},
														{
															"key": "name",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for layout. Refers to the name of the layout. For example `two-horizontal`"
														}
													]
												},
												"description": "Endpoint to update an existing layout inside a theme.\n\n*Endpoint can be accessed only by a user having **Administrator** role"
											},
											"response": [
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    {\n        \"name\": \"FLEXBOX\",\n        \"type\": \"layout\",\n        \"options\": {\n            \"width\": \"100%\"\n        },\n        \"children\": [\n            {\n                \"name\": \"FLEXBOX\",\n                \"type\": \"layout\",\n                \"options\": {\n                    \"direction\": \"column\",\n                    \"flexBasis\": \"50%\",\n                    \"mainAxis\": \"center\",\n                    \"crossAxis\": \"center\"\n                },\n                \"style\": {\n                    \"wrapper\": \"margin: 1rem; min-height: 12rem;\"\n                },\n                \"id\": \"6f862559-b88f-4319-f384-3014ffbdea47\"\n            }\n        ],\n        \"id\": \"9c6a7b6a-f294-2769-c6fe-e5bf5ca4a604\"\n    }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/themes/:id/layouts/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"layouts",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for layout. Refers to the name of the layout. For example `two-horizontal`"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 403,\n \"message\": \"Insufficient privileges\"\n}"
												},
												{
													"name": "The request was unacceptable, due to invalid credentials",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    {\n        \"name\": \"FLEXBOX\",\n        \"type\": \"layout\",\n        \"options\": {\n            \"width\": \"100%\"\n        },\n        \"children\": [\n            {\n                \"name\": \"FLEXBOX\",\n                \"type\": \"layout\",\n                \"options\": {\n                    \"direction\": \"column\",\n                    \"flexBasis\": \"50%\",\n                    \"mainAxis\": \"center\",\n                    \"crossAxis\": \"center\"\n                },\n                \"style\": {\n                    \"wrapper\": \"margin: 1rem; min-height: 12rem;\"\n                },\n                \"id\": \"6f862559-b88f-4319-f384-3014ffbdea47\"\n            }\n        ],\n        \"id\": \"9c6a7b6a-f294-2769-c6fe-e5bf5ca4a604\"\n    }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/themes/:id/layouts/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"layouts",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for layout. Refers to the name of the layout. For example `two-horizontal`"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 401,\n \"message\": \"Invalid credentials\"\n}"
												},
												{
													"name": "The specified resource was not found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    {\n        \"name\": \"FLEXBOX\",\n        \"type\": \"layout\",\n        \"options\": {\n            \"width\": \"100%\"\n        },\n        \"children\": [\n            {\n                \"name\": \"FLEXBOX\",\n                \"type\": \"layout\",\n                \"options\": {\n                    \"direction\": \"column\",\n                    \"flexBasis\": \"50%\",\n                    \"mainAxis\": \"center\",\n                    \"crossAxis\": \"center\"\n                },\n                \"style\": {\n                    \"wrapper\": \"margin: 1rem; min-height: 12rem;\"\n                },\n                \"id\": \"6f862559-b88f-4319-f384-3014ffbdea47\"\n            }\n        ],\n        \"id\": \"9c6a7b6a-f294-2769-c6fe-e5bf5ca4a604\"\n    }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/themes/:id/layouts/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"layouts",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for layout. Refers to the name of the layout. For example `two-horizontal`"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"Unable to find the theme\"\n}"
												},
												{
													"name": "Updated",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    {\n        \"name\": \"FLEXBOX\",\n        \"type\": \"layout\",\n        \"options\": {\n            \"width\": \"100%\"\n        },\n        \"children\": [\n            {\n                \"name\": \"FLEXBOX\",\n                \"type\": \"layout\",\n                \"options\": {\n                    \"direction\": \"column\",\n                    \"flexBasis\": \"50%\",\n                    \"mainAxis\": \"center\",\n                    \"crossAxis\": \"center\"\n                },\n                \"style\": {\n                    \"wrapper\": \"margin: 1rem; min-height: 12rem;\"\n                },\n                \"id\": \"6f862559-b88f-4319-f384-3014ffbdea47\"\n            }\n        ],\n        \"id\": \"9c6a7b6a-f294-2769-c6fe-e5bf5ca4a604\"\n    }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/themes/:id/layouts/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"layouts",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for layout. Refers to the name of the layout. For example `two-horizontal`"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 200,\n \"message\": \"Updated successfully\"\n}"
												}
											]
										},
										{
											"name": "Retrieve a particular layout by name",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "http://{{host}}/portal/rest/v1/themes/:id/layouts/:name",
													"protocol": "http",
													"host": [
														"{{host}}"
													],
													"path": [
														"portal",
														"rest",
														"v1",
														"themes",
														":id",
														"layouts",
														":name"
													],
													"variable": [
														{
															"key": "id",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
														},
														{
															"key": "name",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for layout. Refers to the name of the layout. For example `two-horizontal`"
														}
													]
												},
												"description": "Endpoint to obtain details of a particular layout inside a theme.\n\n*Endpoint can be accessed only by a user having **Administrator** role"
											},
											"response": [
												{
													"name": "ok",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/themes/:id/layouts/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"layouts",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for layout. Refers to the name of the layout. For example `two-horizontal`"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"name\": \"FLEXBOX\",\n  \"type\": \"layout\",\n  \"options\": {\n   \"width\": \"100%\"\n  },\n  \"children\": [\n   {\n    \"name\": \"FLEXBOX\",\n    \"type\": \"layout\",\n    \"options\": {\n     \"direction\": \"column\",\n     \"flexBasis\": \"50%\",\n     \"mainAxis\": \"center\",\n     \"crossAxis\": \"center\"\n    },\n    \"style\": {\n     \"wrapper\": \"margin: 1rem; min-height: 12rem;\"\n    }\n   },\n   {\n    \"name\": \"FLEXBOX\",\n    \"type\": \"layout\",\n    \"options\": {\n     \"direction\": \"column\",\n     \"flexBasis\": \"50%\",\n     \"mainAxis\": \"center\",\n     \"crossAxis\": \"center\"\n    },\n    \"style\": {\n     \"wrapper\": \"margin: 1rem; min-height: 12rem;\"\n    }\n   }\n  ]\n }\n]"
												},
												{
													"name": "The request was unacceptable, due to invalid credentials",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/themes/:id/layouts/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"layouts",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for layout. Refers to the name of the layout. For example `two-horizontal`"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 401,\n \"message\": \"Invalid credentials\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/themes/:id/layouts/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"layouts",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for layout. Refers to the name of the layout. For example `two-horizontal`"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 403,\n \"message\": \"Insufficient privileges\"\n}"
												},
												{
													"name": "The specified resource was not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/themes/:id/layouts/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"layouts",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for layout. Refers to the name of the layout. For example `two-horizontal`"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"Unable to find the theme\"\n}"
												}
											]
										},
										{
											"name": "Delete the existing layout",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "http://{{host}}/portal/rest/v1/themes/:id/layouts/:name",
													"protocol": "http",
													"host": [
														"{{host}}"
													],
													"path": [
														"portal",
														"rest",
														"v1",
														"themes",
														":id",
														"layouts",
														":name"
													],
													"variable": [
														{
															"key": "id",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
														},
														{
															"key": "name",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for layout. Refers to the name of the layout. For example `two-horizontal`"
														}
													]
												},
												"description": "Endpoint to delete a particular layout based on layout name.\n\n*Endpoint can be accessed only by a user having **Administrator** role*"
											},
											"response": [
												{
													"name": "The request was unacceptable, due to invalid credentials",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/themes/:id/layouts/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"layouts",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for layout. Refers to the name of the layout. For example `two-horizontal`"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 401,\n \"message\": \"Invalid credentials\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/themes/:id/layouts/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"layouts",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for layout. Refers to the name of the layout. For example `two-horizontal`"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 403,\n \"message\": \"Insufficient privileges\"\n}"
												},
												{
													"name": "The specified resource was not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/themes/:id/layouts/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"layouts",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for layout. Refers to the name of the layout. For example `two-horizontal`"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"Unable to find the theme\"\n}"
												},
												{
													"name": "OK",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/themes/:id/layouts/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"layouts",
																":name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "name",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for layout. Refers to the name of the layout. For example `two-horizontal`"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Retrieve the list of layouts by theme ID",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://{{host}}/portal/rest/v1/themes/:id/layouts",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"path": [
												"portal",
												"rest",
												"v1",
												"themes",
												":id",
												"layouts"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme. For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										},
										"description": "Endpoint to obtain details of list of layouts created inside a particular theme.\n\n*Endpoint can be accessed only by a user having **Administrator** role"
									},
									"response": [
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/themes/:id/layouts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"themes",
														":id",
														"layouts"
													],
													"variable": [
														{
															"key": "id",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme. For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 403,\n \"message\": \"Insufficient privileges\"\n}"
										},
										{
											"name": "ok",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/themes/:id/layouts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"themes",
														":id",
														"layouts"
													],
													"variable": [
														{
															"key": "id",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme. For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"name\": \"two-horizontal\",\n  \"custom\": false\n },\n {\n  \"name\": \"three-horizontal\",\n  \"custom\": false\n },\n {\n  \"name\": \"composite-b\",\n  \"custom\": false\n },\n {\n  \"name\": \"two-vertical\",\n  \"custom\": false\n }\n]"
										},
										{
											"name": "The specified resource was not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/themes/:id/layouts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"themes",
														":id",
														"layouts"
													],
													"variable": [
														{
															"key": "id",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme. For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"status\": 404,\n \"message\": \"Unable to find the theme\"\n}"
										},
										{
											"name": "The request was unacceptable, due to invalid credentials",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/themes/:id/layouts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"themes",
														":id",
														"layouts"
													],
													"variable": [
														{
															"key": "id",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme. For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 401,\n \"message\": \"Invalid credentials\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "i18n",
							"item": [
								{
									"name": "{key}",
									"item": [
										{
											"name": "Add new property",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"it_IT\": \"etichetta\",\n    \"es_ES\": \"etiqueta\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://{{host}}/portal/rest/v1/themes/:id/i18n/:key",
													"protocol": "http",
													"host": [
														"{{host}}"
													],
													"path": [
														"portal",
														"rest",
														"v1",
														"themes",
														":id",
														"i18n",
														":key"
													],
													"variable": [
														{
															"key": "id",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
														},
														{
															"key": "key",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for property. Refers to the key of the property. For example `base.shared.label.LBL`"
														}
													]
												},
												"description": "Endpoint to create a new property. New key and value can be added for a particular language. If the key is already available, new value will be updated.\n\n*Endpoint can be accessed only by a user having **Administrator** role"
											},
											"response": [
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"it_IT\": \"etichetta\",\n    \"es_ES\": \"etiqueta\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/themes/:id/i18n/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"i18n",
																":key"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "key",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for property. Refers to the key of the property. For example `base.shared.label.LBL`"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 403,\n \"message\": \"Insufficient privileges\"\n}"
												},
												{
													"name": "The specified resource was not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"it_IT\": \"etichetta\",\n    \"es_ES\": \"etiqueta\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/themes/:id/i18n/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"i18n",
																":key"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "key",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for property. Refers to the key of the property. For example `base.shared.label.LBL`"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"Unable to find the theme\"\n}"
												},
												{
													"name": "Updated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"it_IT\": \"etichetta\",\n    \"es_ES\": \"etiqueta\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/themes/:id/i18n/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"i18n",
																":key"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "key",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for property. Refers to the key of the property. For example `base.shared.label.LBL`"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 200,\n \"message\": \"Updated successfully\"\n}"
												},
												{
													"name": "The request was unacceptable, due to invalid credentials",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"it_IT\": \"etichetta\",\n    \"es_ES\": \"etiqueta\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/themes/:id/i18n/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"i18n",
																":key"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "key",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for property. Refers to the key of the property. For example `base.shared.label.LBL`"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 401,\n \"message\": \"Invalid credentials\"\n}"
												}
											]
										},
										{
											"name": "Delete the existing key",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "http://{{host}}/portal/rest/v1/themes/:id/i18n/:key",
													"protocol": "http",
													"host": [
														"{{host}}"
													],
													"path": [
														"portal",
														"rest",
														"v1",
														"themes",
														":id",
														"i18n",
														":key"
													],
													"variable": [
														{
															"key": "id",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
														},
														{
															"key": "key",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for property. Refers to the key of the property. For example `base.shared.label.LBL`"
														}
													]
												},
												"description": "Endpoint to delete a existing key which is added by the API Administrator.\n\n*Endpoint can be accessed only by a user having **Administrator** role*"
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/themes/:id/i18n/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"i18n",
																":key"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "key",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for property. Refers to the key of the property. For example `base.shared.label.LBL`"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The request was unacceptable, due to invalid credentials",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/themes/:id/i18n/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"i18n",
																":key"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "key",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for property. Refers to the key of the property. For example `base.shared.label.LBL`"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 401,\n \"message\": \"Invalid credentials\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/themes/:id/i18n/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"i18n",
																":key"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "key",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for property. Refers to the key of the property. For example `base.shared.label.LBL`"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 403,\n \"message\": \"Insufficient privileges\"\n}"
												},
												{
													"name": "The specified resource was not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/themes/:id/i18n/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"themes",
																":id",
																"i18n",
																":key"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
																},
																{
																	"key": "key",
																	"value": "Lorem esse dolor deserunt",
																	"description": "(Required) Unique Identification for property. Refers to the key of the property. For example `base.shared.label.LBL`"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"Unable to find the theme\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Update value of existing key",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"base.name.LBL\": {\n        \"es_ES\": \"nombre\",\n        \"it_IT\": \"nome\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://{{host}}/portal/rest/v1/themes/:id/i18n",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"path": [
												"portal",
												"rest",
												"v1",
												"themes",
												":id",
												"i18n"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										},
										"description": "Endpoint to update an existing key.\n\n*Endpoint can be accessed only by a user having **Administrator** role"
									},
									"response": [
										{
											"name": "The specified resource was not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"base.name.LBL\": {\n        \"es_ES\": \"nombre\",\n        \"it_IT\": \"nome\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/themes/:id/i18n",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"themes",
														":id",
														"i18n"
													],
													"variable": [
														{
															"key": "id",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"status\": 404,\n \"message\": \"Unable to find the theme\"\n}"
										},
										{
											"name": "The request was unacceptable, due to invalid credentials",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"base.name.LBL\": {\n        \"es_ES\": \"nombre\",\n        \"it_IT\": \"nome\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/themes/:id/i18n",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"themes",
														":id",
														"i18n"
													],
													"variable": [
														{
															"key": "id",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 401,\n \"message\": \"Invalid credentials\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"base.name.LBL\": {\n        \"es_ES\": \"nombre\",\n        \"it_IT\": \"nome\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/themes/:id/i18n",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"themes",
														":id",
														"i18n"
													],
													"variable": [
														{
															"key": "id",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 403,\n \"message\": \"Insufficient privileges\"\n}"
										},
										{
											"name": "Updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"base.name.LBL\": {\n        \"es_ES\": \"nombre\",\n        \"it_IT\": \"nome\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/themes/:id/i18n",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"themes",
														":id",
														"i18n"
													],
													"variable": [
														{
															"key": "id",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 200,\n \"message\": \"Updated successfully\"\n}"
										}
									]
								},
								{
									"name": "Retrieve list of i18n keys and values",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://{{host}}/portal/rest/v1/themes/:id/i18n",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"path": [
												"portal",
												"rest",
												"v1",
												"themes",
												":id",
												"i18n"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										},
										"description": "Endpoint to retrieve list of i18n keys and values of current language.\n\n*Endpoint can be accessed only by a user having **Administrator** role"
									},
									"response": [
										{
											"name": "The specified resource was not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/themes/:id/i18n",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"themes",
														":id",
														"i18n"
													],
													"variable": [
														{
															"key": "id",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"status\": 404,\n \"message\": \"Unable to find the theme\"\n}"
										},
										{
											"name": "The request was unacceptable, due to invalid credentials",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/themes/:id/i18n",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"themes",
														":id",
														"i18n"
													],
													"variable": [
														{
															"key": "id",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 401,\n \"message\": \"Invalid credentials\"\n}"
										},
										{
											"name": "ok",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/themes/:id/i18n",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"themes",
														":id",
														"i18n"
													],
													"variable": [
														{
															"key": "id",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"base.name.LBL\": \"Name\",\n \"base.password.LBL\": \"Password\",\n \"base.description.LBL\": \"description\",\n \"base.summary.LBL\": \"summary\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/themes/:id/i18n",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"themes",
														":id",
														"i18n"
													],
													"variable": [
														{
															"key": "id",
															"value": "Lorem esse dolor deserunt",
															"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 403,\n \"message\": \"Insufficient privileges\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieve the theme by Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}/portal/rest/v1/themes/:id",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"portal",
										"rest",
										"v1",
										"themes",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Lorem esse dolor deserunt",
											"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
										}
									]
								},
								"description": "Endpoint to obtain details of particular theme based on ID\n\n*Endpoint can be accessed only by a user having **Administrator** role*"
							},
							"response": [
								{
									"name": "The specified resource was not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/themes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": 404,\n \"message\": \"Unable to find the theme\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/themes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 403,\n \"message\": \"Insufficient privileges\"\n}"
								},
								{
									"name": "The request was unacceptable, due to invalid credentials",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/themes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 401,\n \"message\": \"Invalid credentials\"\n}"
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/themes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"Dark theme\",\n \"documentType\": \"THEME\",\n \"id\": \"14594abf-054f-4e4d-b16d-3eb8495f25dc\"\n}"
								}
							]
						},
						{
							"name": "Update the theme by Id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Theme two\",\n    \"description\": \"This is a dark mode theme\",\n    \"version\": 2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/portal/rest/v1/themes/:id",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"portal",
										"rest",
										"v1",
										"themes",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Lorem esse dolor deserunt",
											"description": "(Required) Unique Identification for Theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
										}
									]
								},
								"description": "Endpoint to update details of particular theme based on ID. Using this endpoint only theme name, description and version can be updated.\n\n*Endpoint can be accessed only by a user having **Administrator** role*"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Theme two\",\n    \"description\": \"This is a dark mode theme\",\n    \"version\": 2\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/themes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for Theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 200,\n \"message\": \"Theme has been updated successfully\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Theme two\",\n    \"description\": \"This is a dark mode theme\",\n    \"version\": 2\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/themes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for Theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 403,\n \"message\": \"Insufficient privileges\"\n}"
								},
								{
									"name": "The specified resource was not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Theme two\",\n    \"description\": \"This is a dark mode theme\",\n    \"version\": 2\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/themes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for Theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": 404,\n \"message\": \"Unable to find the theme\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Theme two\",\n    \"description\": \"This is a dark mode theme\",\n    \"version\": 2\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/themes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for Theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 400,\n \"message\": \"User provided data is not correct\",\n \"errors\": []\n}"
								},
								{
									"name": "The request was unacceptable, due to invalid credentials",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Theme two\",\n    \"description\": \"This is a dark mode theme\",\n    \"version\": 2\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/themes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for Theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 401,\n \"message\": \"Invalid credentials\"\n}"
								}
							]
						},
						{
							"name": "Delete the theme by Id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://{{host}}/portal/rest/v1/themes/:id",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"portal",
										"rest",
										"v1",
										"themes",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Lorem esse dolor deserunt",
											"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
										}
									]
								},
								"description": "Endpoint to delete a particular theme based on ID\n\n*Endpoint can be accessed only by a user having **Administrator** role*"
							},
							"response": [
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/themes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 403,\n \"message\": \"Insufficient privileges\"\n}"
								},
								{
									"name": "The specified resource was not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/themes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": 404,\n \"message\": \"Unable to find the theme\"\n}"
								},
								{
									"name": "The request was unacceptable, due to invalid credentials",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/themes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 401,\n \"message\": \"Invalid credentials\"\n}"
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/themes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Clone the theme by Id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Dark theme-cloned\",\n    \"description\": \"This is a cloned theme\",\n    \"version\": 2.1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}/portal/rest/v1/themes/:id/clone",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"portal",
										"rest",
										"v1",
										"themes",
										":id",
										"clone"
									],
									"variable": [
										{
											"key": "id",
											"value": "Lorem esse dolor deserunt",
											"description": "(Required) Unique Identification for Theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
										}
									]
								},
								"description": "Endpoint to clone a particular theme.\n\n*Endpoint can be accessed only by a user having **Administrator** role*"
							},
							"response": [
								{
									"name": "ok",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Dark theme-cloned\",\n    \"description\": \"This is a cloned theme\",\n    \"version\": 2.1\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/themes/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for Theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"0392ce93-49e5-4302-9e84-7ba53431ff69\",\n \"_self\": \"/rest/v1/themes/41874e13-03d7-4cd6-9911-b96711e51cf4\"\n}"
								},
								{
									"name": "The specified resource was not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Dark theme-cloned\",\n    \"description\": \"This is a cloned theme\",\n    \"version\": 2.1\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/themes/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for Theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": 404,\n \"message\": \"Unable to find the theme\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Dark theme-cloned\",\n    \"description\": \"This is a cloned theme\",\n    \"version\": 2.1\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/themes/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for Theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 403,\n \"message\": \"Insufficient privileges\"\n}"
								},
								{
									"name": "The request was unacceptable, due to invalid credentials",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Dark theme-cloned\",\n    \"description\": \"This is a cloned theme\",\n    \"version\": 2.1\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/themes/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for Theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 401,\n \"message\": \"Invalid credentials\"\n}"
								}
							]
						},
						{
							"name": "Activate a particular theme by Id",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://{{host}}/portal/rest/v1/themes/:id/activate",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"portal",
										"rest",
										"v1",
										"themes",
										":id",
										"activate"
									],
									"variable": [
										{
											"key": "id",
											"value": "Lorem esse dolor deserunt",
											"description": "(Required) Unique Identification for Theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
										}
									]
								},
								"description": "Endpoint to activate a particular theme. Activated theme style will be applied to the API Portal.\n\n*Endpoint can be accessed only by a user having **Administrator** role*"
							},
							"response": [
								{
									"name": "The specified resource was not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/themes/:id/activate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id",
												"activate"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for Theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": 404,\n \"message\": \"Unable to find the theme\"\n}"
								},
								{
									"name": "The request was unacceptable, due to invalid credentials",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/themes/:id/activate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id",
												"activate"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for Theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 401,\n \"message\": \"Invalid credentials\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/themes/:id/activate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id",
												"activate"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for Theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 403,\n \"message\": \"Insufficient privileges\"\n}"
								},
								{
									"name": "ok",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/themes/:id/activate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id",
												"activate"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for Theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 200,\n \"message\": \"Theme has been  activated\"\n}"
								}
							]
						},
						{
							"name": "Backup/Export a theme",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://{{host}}/portal/rest/v1/themes/:id/backup",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"portal",
										"rest",
										"v1",
										"themes",
										":id",
										"backup"
									],
									"variable": [
										{
											"key": "id",
											"value": "Lorem esse dolor deserunt",
											"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
										}
									]
								},
								"description": "Endpoint to export a theme in API Portal by ID\n\n*Endpoint can be accessed only by a user having **Administrator** role*"
							},
							"response": [
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/themes/:id/backup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id",
												"backup"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 403,\n \"message\": \"Insufficient privileges\"\n}"
								},
								{
									"name": "file with zipped theme content (component, file, i18n, layout, page, style)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/themes/:id/backup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id",
												"backup"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/octet-stream"
										}
									],
									"cookie": [],
									"body": "Lorem esse dolor deserunt"
								},
								{
									"name": "The request was unacceptable, due to invalid credentials",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/themes/:id/backup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id",
												"backup"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 401,\n \"message\": \"Invalid credentials\"\n}"
								}
							]
						},
						{
							"name": "Restore a theme",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "http://{{host}}/portal/rest/v1/themes/:id/restore",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"portal",
										"rest",
										"v1",
										"themes",
										":id",
										"restore"
									],
									"variable": [
										{
											"key": "id",
											"value": "Lorem esse dolor deserunt",
											"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
										}
									]
								},
								"description": "Endpoint to restore a theme in API Portal\n\n*Endpoint can be accessed only by a user having **Administrator** role*"
							},
							"response": [
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/themes/:id/restore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id",
												"restore"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 403,\n \"message\": \"Insufficient privileges\"\n}"
								},
								{
									"name": "No content",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/themes/:id/restore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id",
												"restore"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request was unacceptable, due to invalid credentials",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/themes/:id/restore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id",
												"restore"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 401,\n \"message\": \"Invalid credentials\"\n}"
								},
								{
									"name": "Zip file content is larger.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/themes/:id/restore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"themes",
												":id",
												"restore"
											],
											"variable": [
												{
													"key": "id",
													"value": "Lorem esse dolor deserunt",
													"description": "(Required) Unique Identification for theme. Refers to the GUID of the theme.For example `d4a6bc0b-24dd-4035-862a-0f8f7608512e`"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 400,\n \"message\": \"The zip file content is larger than the maximum allowed size\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Retrieve the list of available themes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/portal/rest/v1/themes?page=0&limit=0",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"portal",
								"rest",
								"v1",
								"themes"
							],
							"query": [
								{
									"key": "page",
									"value": "0",
									"description": "Optional parameter. Defines the page number to be retrieved for the collection. If not specified default value 0 is assumed. By default collection responses are paginated with batches of 10."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "Optional parameter. Defines the number of results to be fetched for the current page. If not specified default value configured in system settings will be considered."
								}
							]
						},
						"description": "Endpoint to retrieve the list of all available themes in API Portal.\n\n*Endpoint can be accessed only by a user having **Administrator** role*"
					},
					"response": [
						{
							"name": "The request was unacceptable, due to invalid credentials",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/themes?page=0&limit=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"themes"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "0"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"message\": \"Invalid credentials\"\n}"
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/themes?page=0&limit=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"themes"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"result\": [\n  {\n   \"name\": \"Theme one\",\n   \"documentType\": \"THEME\",\n   \"id\": \"14594abf-054f-4e4d-b16d-3eb8495f25dc\"\n  },\n  {\n   \"name\": \"DEFAULT\",\n   \"documentType\": \"THEME\",\n   \"id\": \"5535a71b-01ef-47b7-b813-922655ba788c\"\n  }\n ],\n \"count\": 2,\n \"_links\": {\n  \"_self\": \"rest/v1/themes?page=0\",\n  \"_next\": \"rest/v1/themes?page=1\"\n }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/themes?page=0&limit=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"themes"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "0"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 403,\n \"message\": \"Insufficient privileges\"\n}"
						}
					]
				},
				{
					"name": "Create a new theme",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Theme one\",\n    \"description\": \"This is a dark mode theme\",\n    \"version\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}/portal/rest/v1/themes",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"portal",
								"rest",
								"v1",
								"themes"
							]
						},
						"description": "Endpoint to create a new theme in API Portal\n\n*Endpoint can be accessed only by a user having **Administrator** role*"
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Theme one\",\n    \"description\": \"This is a dark mode theme\",\n    \"version\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/themes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"themes"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 403,\n \"message\": \"Insufficient privileges\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Theme one\",\n    \"description\": \"This is a dark mode theme\",\n    \"version\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/themes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"themes"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"message\": \"User provided data is not correct\",\n \"errors\": []\n}"
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Theme one\",\n    \"description\": \"This is a dark mode theme\",\n    \"version\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/themes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"themes"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"0392ce93-49e5-4302-9e84-7ba53431ff69\",\n \"_self\": \"/rest/v1/themes/41874e13-03d7-4cd6-9911-b96711e51cf4\"\n}"
						},
						{
							"name": "The request was unacceptable, due to invalid credentials",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Theme one\",\n    \"description\": \"This is a dark mode theme\",\n    \"version\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/themes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"themes"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"message\": \"Invalid credentials\"\n}"
						}
					]
				}
			]
		}
	]
}